{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AACuD;AACF;AACA;;;AAErD,MAAMG,MAAM,GAAW;AACrB;AACA;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE;CACZ;AAED;AACA;EACEF,IAAI,EAAE,MAAM;EACZG,YAAY,EAAEA,CAAA,KAAM,yKAAqC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;CACjF;AAED;AACA;EACEN,IAAI,EAAE,WAAW;EACjBG,YAAY,EAAEA,CAAA,KAAM,8LAA+C,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,eAAe,CAAC;EAChGC,WAAW,EAAE,CAACX,8DAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,UAAU;EAChBG,YAAY,EAAEA,CAAA,KAAM,0LAA6C,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,cAAc,CAAC;EAC7FD,WAAW,EAAE,CAACX,8DAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,UAAU;EAChBG,YAAY,EAAEA,CAAA,KAAM,iLAAyC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,YAAY,CAAC;EACvFF,WAAW,EAAE,CAACX,8DAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,QAAQ;EACdG,YAAY,EAAEA,CAAA,KAAM,kLAAyC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,YAAY,CAAC;EACvFH,WAAW,EAAE,CAACX,8DAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,OAAO;EACbG,YAAY,EAAEA,CAAA,KAAM,8KAAuC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACO,WAAW,CAAC;EACpFJ,WAAW,EAAE,CAACX,8DAAS,EAAEC,8DAAS,CAAC;EACnCe,IAAI,EAAE;IACJC,KAAK,EAAE,CAAC,OAAO,EAAE,aAAa;;CAEjC;AAED;AACA;EACEd,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,0LAA6C,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,cAAc,CAAC;EAC7FD,WAAW,EAAE,CAACX,8DAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;CACb,CACF;AAeK,MAAOc,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAZjBnB,yDAAY,CAACoB,OAAO,CAACjB,MAAM,EAAE;QACrC;QACAkB,aAAa,EAAE,KAAK;QACpB;QACAC,kBAAkB,EAAEC,SAAS;QAC7B;QACAC,yBAAyB,EAAE,KAAK;QAChC;QACAC,OAAO,EAAE;OACV,CAAC,EACQzB,yDAAY;IAAA;EAAA;;;sHAEXmB,gBAAgB;IAAAO,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjB5B,yDAAY;EAAA;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFgC;AACV;AACK;;;;;;;;;;;;;;;;;;;;;ICqB/CiC,uDAAA,sBAG6C;;;;;;IApB7CA,4DAHF,qBAAyE,gBAMD;IAD9DA,wDAAA,mBAAAI,4DAAA;MAAAJ,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAG,aAAA,EAAe;IAAA,EAAC;IAE/BV,4DAAA,eAAU;IAAAA,oDAAA,WAAI;IAChBA,0DADgB,EAAW,EAClB;IAGTA,4DAAA,aAA0D;IAAnCA,wDAAA,mBAAAa,yDAAA;MAAAb,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAW,YAAY,CAAC;IAAA,EAAC;IACvDd,4DAAA,kBAA2B;IAAAA,oDAAA,qBAAc;IAAAA,0DAAA,EAAW;IACpDA,4DAAA,eAAuB;IAAAA,oDAAA,GAAkD;IAC3EA,0DAD2E,EAAO,EAC5E;IAGNA,uDAAA,eAA4B;IAG5BA,wDAAA,KAAAgB,kDAAA,0BAG+B;IAG/BhB,4DAAA,kBAGmF;IAD3EA,wDAAA,mBAAAiB,6DAAA;MAAAjB,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAW,gBAAgB,CAAC;IAAA,EAAC;IAE5Cd,4DAAA,oBAE+B;IAC7BA,oDAAA,uBACF;IACFA,0DADE,EAAW,EACJ;IAGTA,4DAAA,kBAGgF;IADxEA,wDAAA,mBAAAkB,6DAAA;MAAAlB,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAY,cAAA,EAAgB;IAAA,EAAC;IAEhCnB,4DAAA,gBAAU;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAW;IAC9BA,4DAAA,gBAAiC;IAAAA,oDAAA,IAAmC;IACtEA,0DADsE,EAAO,EACpE;IAOPA,4DAJF,kBAGwE,gBAC5D;IAAAA,oDAAA,sBAAc;IAC1BA,0DAD0B,EAAW,EAC5B;IAKLA,4DAFJ,uBAAgD,eACvB,eACE;IAAAA,oDAAA,IAA0B;IAAAA,0DAAA,EAAM;IACvDA,4DAAA,eAAuB;IAAAA,oDAAA,IAA0B;IAAAA,0DAAA,EAAM;IACvDA,4DAAA,eAAwB;IAAAA,oDAAA,IAAwB;IAClDA,0DADkD,EAAM,EAClD;IACNA,uDAAA,mBAA2B;IAC3BA,4DAAA,kBAAuD;IAAjCA,wDAAA,mBAAAoB,6DAAA;MAAApB,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAW,UAAU,CAAC;IAAA,EAAC;IACpDd,4DAAA,gBAAU;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IAC3BA,4DAAA,YAAM;IAAAA,oDAAA,IAAsD;IAC9DA,0DAD8D,EAAO,EAC5D;IACTA,4DAAA,kBAAwD;IAAlCA,wDAAA,mBAAAqB,6DAAA;MAAArB,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAW,WAAW,CAAC;IAAA,EAAC;IACrDd,4DAAA,gBAAU;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAW;IAC7BA,4DAAA,YAAM;IAAAA,oDAAA,IAAuD;IAC/DA,0DAD+D,EAAO,EAC7D;IACTA,uDAAA,mBAA2B;IAC3BA,4DAAA,kBAA4D;IAAtCA,wDAAA,mBAAAsB,6DAAA;MAAAtB,2DAAA,CAAAM,GAAA;MAAA,MAAAC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAgB,MAAA,EAAQ;IAAA,EAAC;IACtCvB,4DAAA,gBAAU;IAAAA,oDAAA,mBAAW;IAAAA,0DAAA,EAAW;IAChCA,4DAAA,YAAM;IAAAA,oDAAA,IAA+C;IAI3DA,0DAJ2D,EAAO,EACrD,EACA,EAEC;;;;;IAvEJA,uDAAA,EAA6D;;IAO5CA,uDAAA,GAAkD;IAAlDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,mBAAkD;IAU7D3B,uDAAA,GAAe;IAAfA,wDAAA,SAAAO,MAAA,CAAAsB,SAAA,CAAe;IAMrB7B,uDAAA,EAA0E;;IACtEA,uDAAA,EAAgC;IAChCA,wDADA,aAAAO,MAAA,CAAAuB,mBAAA,CAAgC,mBAAAvB,MAAA,CAAAuB,mBAAA,OACY;IAUhD9B,uDAAA,GAAuE;;IAE5CA,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAO,MAAA,CAAAwB,eAAA,CAAAC,WAAA,GAAmC;IAK9DhC,uDAAA,EAA8B;IAA9BA,wDAAA,sBAAAiC,WAAA,CAA8B;;IASXjC,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAO,MAAA,CAAA2B,kBAAA,GAA0B;IAC1BlC,uDAAA,GAA0B;IAA1BA,+DAAA,CAAAO,MAAA,CAAA4B,kBAAA,GAA0B;IACzBnC,uDAAA,GAAwB;IAAxBA,+DAAA,CAAAO,MAAA,CAAA6B,WAAA,kBAAA7B,MAAA,CAAA6B,WAAA,CAAAC,KAAA,CAAwB;IAK1CrC,uDAAA,GAAsD;IAAtDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,uBAAsD;IAItD3B,uDAAA,GAAuD;IAAvDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,wBAAuD;IAKvD3B,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,gBAA+C;;;;;;IAuBnD3B,4DAAA,wBAG6D;IAD9CA,wDAAA,mBAAAsC,4GAAA;MAAAtC,2DAAA,CAAAuC,GAAA;MAAA,MAAAC,OAAA,GAAAxC,2DAAA,GAAAyC,SAAA;MAAA,MAAAlC,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAA0B,OAAA,CAAAE,KAAA,CAAsB;IAAA,EAAC;IAE7C1C,4DAAA,mBAAsB;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,eAAc;IAAAA,oDAAA,GAA+C;IAC/DA,0DAD+D,EAAO,EACtD;;;;;IALDA,yDAAA,WAAAO,MAAA,CAAAqC,aAAA,CAAAJ,OAAA,CAAAE,KAAA,EAA0C;IAGjC1C,uDAAA,GAAe;IAAfA,+DAAA,CAAAwC,OAAA,CAAAK,IAAA,CAAe;IACvB7C,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,CAAAa,OAAA,CAAAM,QAAA,EAA+C;;;;;IANjE9C,qEAAA,GAAwD;IACtDA,wDAAA,IAAAgD,4EAAA,4BAG6D;;;;;;IAA7ChD,uDAAA,EAA2C;IAA3CA,wDAAA,UAAAwC,OAAA,CAAAS,YAAA,IAAA1C,MAAA,CAAA2C,eAAA,CAA2C;;;;;;IAO7DlD,qEAAA,GAAuC;IACrCA,uDAAA,kBAA2B;IAC3BA,4DAAA,aAAwC;IACtCA,oDAAA,GACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,wBAE8C;IAA/BA,wDAAA,mBAAAmD,4FAAA;MAAAnD,2DAAA,CAAAoD,GAAA;MAAA,MAAA7C,MAAA,GAAAP,2DAAA;MAAA,OAAAA,yDAAA,CAASO,MAAA,CAAAO,UAAA,CAAW,QAAQ,CAAC;IAAA,EAAC;IAC3Cd,4DAAA,mBAAsB;IAAAA,oDAAA,2BAAoB;IAAAA,0DAAA,EAAW;IACrDA,4DAAA,eAAc;IAAAA,oDAAA,GAAoD;IACpEA,0DADoE,EAAO,EAC3D;;;;;IAPdA,uDAAA,GACF;IADEA,gEAAA,MAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,0BACF;IAEe3B,uDAAA,EAAwC;IAAxCA,yDAAA,WAAAO,MAAA,CAAAqC,aAAA,WAAwC;IAGvC5C,uDAAA,GAAoD;IAApDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,qBAAoD;;;;;IAoBtE3B,4DADF,cAAsD,cACvB;IAC3BA,uDAAA,sBAAyC;IACzCA,4DAAA,YAAwB;IAAAA,oDAAA,GAAkD;IAE9EA,0DAF8E,EAAI,EAC1E,EACF;;;;IAFsBA,uDAAA,GAAkD;IAAlDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,mBAAkD;;;;;IA7C9E3B,4DAZJ,gCAE+C,sBAOE,uBAGP;IAcpCA,wDAXA,IAAAsD,4DAAA,2BAAwD,IAAAC,4DAAA,2BAWjB;IAazCvD,0DAAA,EAAe;IAKXA,4DAFJ,cAA4B,cACD,YAChB;IAAAA,oDAAA,aAAM;IAInBA,0DAJmB,EAAQ,EACjB,EACF,EAEM;IAGdA,4DAAA,8BAA0C;IAGxCA,wDAAA,KAAAwD,oDAAA,kBAAsD;IAQtDxD,4DAAA,eAA0B;IACxBA,uDAAA,qBAA+B;IAKrCA,0DAJI,EAAM,EAEc,EAEA;;;;IAnEDA,wDAAA,gBAAAO,MAAA,CAAAkD,QAAA,CAAwB;IAKhCzD,uDAAA,EAAmC;IAGnCA,wDAHA,SAAAO,MAAA,CAAAkD,QAAA,mBAAmC,WAAAlD,MAAA,CAAAmD,aAAA,CACX,yBACA,gBAAAnD,MAAA,CAAAkD,QAAA,UACS;IAMXzD,uDAAA,GAAuB;IAAvBA,wDAAA,YAAAO,MAAA,CAAAoD,kBAAA,GAAuB;IAWvC3D,uDAAA,EAAsB;IAAtBA,wDAAA,SAAAO,MAAA,CAAAqD,cAAA,GAAsB;IA4BF5D,uDAAA,GAAe;IAAfA,wDAAA,SAAAO,MAAA,CAAAsB,SAAA,CAAe;;;;;IAiBxD7B,4DAAA,cAAmD;IACjDA,uDAAA,oBAA+B;IACjCA,0DAAA,EAAM;;;;;IASAA,4DAJR,cAAmD,mBACnB,uBACV,cACY,eAChB;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAW;IAClCA,4DAAA,WAAM;IAAAA,oDAAA,GAAuD;IAEjEA,0DAFiE,EAAO,EAChE,EACW;IAEjBA,4DADF,uBAAkB,iBACmB;IACjCA,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAmB;IACjBA,oDAAA,IACF;IAGNA,0DAHM,EAAS,EACQ,EACV,EACP;;;;IAZQA,uDAAA,GAAuD;IAAvDA,+DAAA,CAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,wBAAuD;IAK7D3B,uDAAA,GACF;IADEA,gEAAA,MAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,oBACF;IAEE3B,uDAAA,GACF;IADEA,gEAAA,MAAAO,MAAA,CAAAmB,kBAAA,CAAAC,OAAA,mBACF;;;AD/JA,MAAOkC,YAAY;EAavBC,YACUC,WAAwB,EACxBC,cAA8B,EAC/BtC,kBAAsC,EACrCuC,mBAAwC,EACxCC,MAAc,EACdC,iBAAoC,EACpCC,KAAmB;IANnB,KAAAL,WAAW,GAAXA,WAAW;IACX,KAAAC,cAAc,GAAdA,cAAc;IACf,KAAAtC,kBAAkB,GAAlBA,kBAAkB;IACjB,KAAAuC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,KAAK,GAALA,KAAK;IAnBP,KAAAC,QAAQ,GAAG,IAAIxE,yCAAO,EAAQ;IAGtC,KAAAyE,KAAK,GAAG,qBAAqB;IAC7B,KAAAlC,WAAW,GAAgB,IAAI;IAC/B,KAAAP,SAAS,GAAG,KAAK;IACjB,KAAAqB,eAAe,GAAG,KAAK;IACvB,KAAAO,QAAQ,GAAG,KAAK;IAChB,KAAAC,aAAa,GAAG,IAAI;IACpB,KAAA3B,eAAe,GAAgB,IAAI;IACnC,KAAAD,mBAAmB,GAAG,CAAC;IAWrB;IACA,IAAI,CAACyC,WAAW,GAAG,IAAI,CAACH,KAAK,CAACI,UAAU,CAAC,oBAAoB,CAAC;IAC9D,IAAI,CAACC,mBAAmB,GAAG,MAAK;MAC9B,IAAI,CAAChB,QAAQ,GAAG,IAAI,CAACc,WAAW,CAACG,OAAO;MACxC,IAAI,CAAChB,aAAa,GAAG,CAAC,IAAI,CAACD,QAAQ;MACnC,IAAI,CAACU,iBAAiB,CAACQ,aAAa,EAAE;IACxC,CAAC;IACD,IAAI,CAACJ,WAAW,CAACK,WAAW,CAAC,IAAI,CAACH,mBAAmB,CAAC;IACtD,IAAI,CAAChB,QAAQ,GAAG,IAAI,CAACc,WAAW,CAACG,OAAO;IACxC,IAAI,CAAChB,aAAa,GAAG,CAAC,IAAI,CAACD,QAAQ;EACrC;EAIAoB,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACZ,QAAQ,CAACa,IAAI,EAAE;IACpB,IAAI,CAACb,QAAQ,CAACc,QAAQ,EAAE;IACxB,IAAI,CAACZ,WAAW,CAACa,cAAc,CAAC,IAAI,CAACX,mBAAmB,CAAC;EAC3D;EAEQK,aAAaA,CAAA;IACnB;IACA,IAAI,CAACpD,kBAAkB,CAAC2D,WAAW,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC;MAClDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK;KACtE,CAAC;EACJ;EAEQR,kBAAkBA,CAAA;IACxB;IACA,IAAI,CAAChB,WAAW,CAAC0B,YAAY,CAC1BC,IAAI,CAAC5F,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CAAC,CAC9BiB,SAAS,CAACK,IAAI,IAAG;MAChB,IAAI,CAACvD,WAAW,GAAGuD,IAAI;MACvB,IAAI,CAACzC,eAAe,GAAG,CAAC,CAACyC,IAAI;MAC7B,IAAI,CAACxB,iBAAiB,CAACQ,aAAa,EAAE;IACxC,CAAC,CAAC;IAEJ;IACA,IAAI,CAACX,cAAc,CAAC4B,UAAU,CAC3BF,IAAI,CAAC5F,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CAAC,CAC9BiB,SAAS,CAACO,OAAO,IAAG;MACnB,IAAI,CAAChE,SAAS,GAAGgE,OAAO;MACxB,IAAI,CAAC1B,iBAAiB,CAACQ,aAAa,EAAE;IACxC,CAAC,CAAC;IAEJ;IACA,IAAI,CAACjD,kBAAkB,CAACoE,gBAAgB,CACrCJ,IAAI,CAAC5F,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CAAC,CAC9BiB,SAAS,CAACS,QAAQ,IAAG;MACpB,IAAI,CAAChE,eAAe,GAAGgE,QAAQ;MAC/B,IAAI,CAAC5B,iBAAiB,CAACQ,aAAa,EAAE;IACxC,CAAC,CAAC;IAEJ;IACA,IAAI,CAACV,mBAAmB,CAAC+B,YAAY,CAClCN,IAAI,CAAC5F,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CAAC,CAC9BiB,SAAS,CAACW,KAAK,IAAG;MACjB,IAAI,CAACnE,mBAAmB,GAAGmE,KAAK;MAChC,IAAI,CAAC9B,iBAAiB,CAACQ,aAAa,EAAE;IACxC,CAAC,CAAC;EACN;EAEQK,iBAAiBA,CAAA;IACvB,IAAI,CAACd,MAAM,CAACgC,MAAM,CACfR,IAAI,CACH3F,sDAAM,CAACoG,KAAK,IAAIA,KAAK,YAAYvG,0DAAa,CAAC,EAC/CE,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CACzB,CACAiB,SAAS,CAAEa,KAAK,IAAI;MACnB;MACA,IAAI,IAAI,CAAC1C,QAAQ,EAAE;QACjB,IAAI,CAACC,aAAa,GAAG,KAAK;;MAG5B;MACA,IAAI,CAAC0C,eAAe,CAAED,KAAuB,CAACE,GAAG,CAAC;IACpD,CAAC,CAAC;EACN;EAEQD,eAAeA,CAACC,GAAW;IACjC,IAAIC,QAAQ,GAAG,gBAAgB;IAE/B,IAAID,GAAG,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;MAC9BD,QAAQ,GAAG,sBAAsB;KAClC,MAAM,IAAID,GAAG,CAACE,QAAQ,CAAC,WAAW,CAAC,EAAE;MACpCD,QAAQ,GAAG,qBAAqB;KACjC,MAAM,IAAID,GAAG,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE;MAClCD,QAAQ,GAAG,mBAAmB;KAC/B,MAAM,IAAID,GAAG,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MACnCD,QAAQ,GAAG,oBAAoB;KAChC,MAAM,IAAID,GAAG,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACjCD,QAAQ,GAAG,kBAAkB;;IAG/B,MAAME,eAAe,GAAG,IAAI,CAAC9E,kBAAkB,CAACC,OAAO,CAAC2E,QAAQ,CAAC;IACjEG,QAAQ,CAACnC,KAAK,GAAG,GAAGkC,eAAe,wBAAwB;EAC7D;EAEA;EACA9F,aAAaA,CAAA;IACX,IAAI,CAACgD,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;EAC1C;EAEAvC,cAAcA,CAAA;IACZ,IAAI,CAACO,kBAAkB,CAACP,cAAc,EAAE,CAACmE,SAAS,CAAC;MACjDC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK;KACpE,CAAC;EACJ;EAEAhE,MAAMA,CAAA;IACJ,IAAI,CAACwC,WAAW,CAACxC,MAAM,EAAE;EAC3B;EAEAT,UAAUA,CAAC4B,KAAa;IACtB,IAAI,CAACwB,MAAM,CAACwC,QAAQ,CAAC,CAAChE,KAAK,CAAC,CAAC;IAE7B;IACA,IAAI,IAAI,CAACe,QAAQ,EAAE;MACjB,IAAI,CAACC,aAAa,GAAG,KAAK;;EAE9B;EAEA;EACAC,kBAAkBA,CAAA;IAChB,OAAO,CACL;MAAEjB,KAAK,EAAE,YAAY;MAAEG,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE,sBAAsB;MAAEG,YAAY,EAAE;IAAI,CAAE,EAChG;MAAEP,KAAK,EAAE,WAAW;MAAEG,IAAI,EAAE,aAAa;MAAEC,QAAQ,EAAE,qBAAqB;MAAEG,YAAY,EAAE;IAAI,CAAE,EAChG;MAAEP,KAAK,EAAE,SAAS;MAAEG,IAAI,EAAE,YAAY;MAAEC,QAAQ,EAAE,mBAAmB;MAAEG,YAAY,EAAE;IAAI,CAAE,EAC3F;MAAEP,KAAK,EAAE,UAAU;MAAEG,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,oBAAoB;MAAEG,YAAY,EAAE;IAAI,CAAE,EACzF;MAAEP,KAAK,EAAE,QAAQ;MAAEG,IAAI,EAAE,sBAAsB;MAAEC,QAAQ,EAAE,kBAAkB;MAAEG,YAAY,EAAE;IAAI,CAAE,CACpG;EACH;EAEA;EACAW,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACG,WAAW,CAAC4C,OAAO;EACjC;EAEA;EACA/D,aAAaA,CAACF,KAAa;IACzB,OAAO,IAAI,CAACwB,MAAM,CAACmC,GAAG,CAACO,UAAU,CAAClE,KAAK,CAAC;EAC1C;EAEA;EACAR,kBAAkBA,CAAA;IAChB,IAAI,CAAC,IAAI,CAACE,WAAW,EAAE,OAAO,EAAE;IAEhC,IAAI,IAAI,CAACL,eAAe,KAAK,IAAI,IAAI,IAAI,CAACK,WAAW,CAACyE,aAAa,IAAI,IAAI,CAACzE,WAAW,CAAC0E,YAAY,EAAE;MACpG,OAAO,GAAG,IAAI,CAAC1E,WAAW,CAACyE,aAAa,IAAI,IAAI,CAACzE,WAAW,CAAC0E,YAAY,EAAE;;IAG7E,OAAO,GAAG,IAAI,CAAC1E,WAAW,CAAC2E,SAAS,IAAI,IAAI,CAAC3E,WAAW,CAAC4E,QAAQ,EAAE;EACrE;EAEA;EACA7E,kBAAkBA,CAAA;IAChB,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE,OAAO,EAAE;IAEhC,OAAO,IAAI,CAACV,kBAAkB,CAACC,OAAO,CAAC,aAAa,IAAI,CAACS,WAAW,CAAC6E,IAAI,EAAE,CAAC;EAC9E;;;uBA3LWpD,YAAY,EAAA7D,+DAAA,CAAAN,oEAAA,GAAAM,+DAAA,CAAAoH,0EAAA,GAAApH,+DAAA,CAAAsH,kFAAA,GAAAtH,+DAAA,CAAAwH,oFAAA,GAAAxH,+DAAA,CAAA0H,mDAAA,GAAA1H,+DAAA,CAAAA,4DAAA,GAAAA,+DAAA,CAAA6H,6DAAA;IAAA;EAAA;;;YAAZhE,YAAY;MAAAkE,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UChBzBrI,4DAAA,aAAqD;UA0JnDA,wDAvJA,IAAAuI,mCAAA,2BAAyE,IAAAC,6CAAA,oCAkF1B,IAAAC,2BAAA,iBAqEI;UAIrDzI,0DAAA,EAAM;UAGNA,wDAAA,IAAA0I,2BAAA,kBAAmD;;;UAjKxB1I,yDAAA,WAAAsI,GAAA,CAAA7E,QAAA,CAAyB;UAGAzD,uDAAA,EAAqB;UAArBA,wDAAA,SAAAsI,GAAA,CAAApF,eAAA,CAAqB;UAkF/ClD,uDAAA,EAAqB;UAArBA,wDAAA,SAAAsI,GAAA,CAAApF,eAAA,CAAqB;UAqElBlD,uDAAA,EAAsB;UAAtBA,wDAAA,UAAAsI,GAAA,CAAApF,eAAA,CAAsB;UAOblD,uDAAA,EAAW;UAAXA,wDAAA,eAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKG;AACM;AACqB;AACJ;AACT;AAEb;AACH;AACA;AAElD;AAC6D;AACA;AACF;AACJ;AACA;AACA;AACE;AACS;AACH;AACJ;AACQ;AACN;AACiB;AACd;AACP;AACQ;AACV;AACI;AACJ;AACA;AACE;AACA;AACI;AACI;AACK;AACA;AACb;AACc;AACD;AACb;AACI;AAE7D;AACyE;AAEzE;AACwD;AACT;AAE/C;AACuE;AACE;AACI;AAE7E;AACsD;;AAEtD;AACAkJ,mEAAkB,CAACC,kEAAQ,EAAE,IAAI,CAAC;AAClCD,mEAAkB,CAACE,kEAAQ,EAAE,IAAI,CAAC;AAkF5B,MAAOuC,SAAS;EACpB7H,YAAA;IACE;IACA,IAAI,OAAO2C,QAAQ,KAAK,WAAW,EAAE;MACnCA,QAAQ,CAACmF,eAAe,CAACC,IAAI,GAAG,IAAI;;EAExC;;;uBANWF,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAG,SAAA,GAFRjI,wDAAY;IAAA;EAAA;;;iBA1Bb;MACT;MACAyH,yDAAc,EAAE;MAEhB;MACA;QACES,OAAO,EAAEpD,oDAAS;QAClBqD,QAAQ,EAAE,OAAO,CAAC;OACnB;MACD;MACA;QACED,OAAO,EAAEhD,oEAAiB;QAC1BkD,QAAQ,EAAEV,gFAAe;QACzBW,KAAK,EAAE;OACR,EACD;QACEH,OAAO,EAAEhD,oEAAiB;QAC1BkD,QAAQ,EAAET,kFAAgB;QAC1BU,KAAK,EAAE;OACR,EACD;QACEH,OAAO,EAAEhD,oEAAiB;QAC1BkD,QAAQ,EAAER,sFAAkB;QAC5BS,KAAK,EAAE;OACR,CACF;MAAAzM,OAAA,GAxECmJ,qEAAa,EACb1J,iEAAgB,EAChB2J,0FAAuB,EACvBC,mEAAgB,EAChBE,gEAAmB,EACnBC,wDAAW;MAEX;MACAI,wEAAgB,EAChBC,wEAAgB,EAChBC,sEAAe,EACfC,kEAAa,EACbC,kEAAa,EACbC,kEAAa,EACbC,oEAAc,EACdC,6EAAkB,EAClBC,0EAAiB,EACjBC,sEAAe,EACfC,8EAAmB,EACnBC,wEAAmB,EACnBC,yFAAwB,EACxBC,2EAAiB,EACjBC,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbC,sEAAe,EACfC,kEAAa,EACbC,kEAAa,EACbC,oEAAc,EACdC,oEAAc,EACdC,wEAAgB,EAChBC,4EAAkB,EAClBC,iFAAoB,EACpBC,iFAAoB,EACpBC,oEAAc,EACdC,kFAAqB,EACrBC,iFAAoB,EACpBC,oEAAe,EACfC,wEAAgB;MAMhB;MACAO,+DAAY;IAAA;EAAA;;;sHA8BHC,SAAS;IAAAQ,YAAA,GA9ElBtI,wDAAY;IAAApE,OAAA,GAGZmJ,qEAAa,EACb1J,iEAAgB,EAChB2J,0FAAuB,EACvBC,mEAAgB,EAChBE,gEAAmB,EACnBC,wDAAW;IAEX;IACAI,wEAAgB,EAChBC,wEAAgB,EAChBC,sEAAe,EACfC,kEAAa,EACbC,kEAAa,EACbC,kEAAa,EACbC,oEAAc,EACdC,6EAAkB,EAClBC,0EAAiB,EACjBC,sEAAe,EACfC,8EAAmB,EACnBC,wEAAmB,EACnBC,yFAAwB,EACxBC,2EAAiB,EACjBC,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbC,sEAAe,EACfC,kEAAa,EACbC,kEAAa,EACbC,oEAAc,EACdC,oEAAc,EACdC,wEAAgB,EAChBC,4EAAkB,EAClBC,iFAAoB,EACpBC,iFAAoB,EACpBC,oEAAc,EACdC,kFAAqB,EACrBC,iFAAoB,EACpBC,oEAAe,EACfC,wEAAgB;IAEhB;IACAC,uDAAgB,EAChBC,kDAAW;IAEX;IACAK,+DAAY;EAAA;AAAA,K;;;;;;;;;;;;;;;;;;;AC7G2B;;;;AAMrC,MAAO1N,SAAS;EAEpB8F,YACUC,WAAwB,EACxBG,MAAc;IADd,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAG,MAAM,GAANA,MAAM;EACb;EAEHvF,WAAWA,CACT+D,KAA6B,EAC7B4J,KAA0B;IAE1B,OAAO,IAAI,CAACC,SAAS,CAACD,KAAK,CAACjG,GAAG,CAAC;EAClC;EAEAmG,gBAAgBA,CACdC,UAAkC,EAClCH,KAA0B;IAE1B,OAAO,IAAI,CAACC,SAAS,CAACD,KAAK,CAACjG,GAAG,CAAC;EAClC;EAEQkG,SAASA,CAAClG,GAAW;IAC3B,OAAO,IAAI,CAACtC,WAAW,CAAC0B,YAAY,CAACC,IAAI,CACvC2G,oDAAI,CAAC,CAAC,CAAC,EACPD,mDAAG,CAACzG,IAAI,IAAG;MACT,IAAIA,IAAI,EAAE;QACR,OAAO,IAAI;OACZ,MAAM;QACL;QACA,IAAI,CAACzB,MAAM,CAACwC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;UACpCgG,WAAW,EAAE;YAAEC,SAAS,EAAEtG;UAAG;SAC9B,CAAC;QACF,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EACH;;;uBApCWrI,SAAS,EAAAgC,sDAAA,CAAAN,+DAAA,GAAAM,sDAAA,CAAAoH,mDAAA;IAAA;EAAA;;;aAATpJ,SAAS;MAAA6O,OAAA,EAAT7O,SAAS,CAAA8O,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;ACJuB;;;;;AAOrC,MAAO9O,SAAS;EAEpB6F,YACUC,WAAwB,EACxBG,MAAc,EACdD,mBAAwC;IAFxC,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAG,MAAM,GAANA,MAAM;IACN,KAAAD,mBAAmB,GAAnBA,mBAAmB;EAC1B;EAEHtF,WAAWA,CACT+D,KAA6B,EAC7B4J,KAA0B;IAE1B,OAAO,IAAI,CAACU,SAAS,CAACtK,KAAK,CAAC;EAC9B;EAEQsK,SAASA,CAACtK,KAA6B;IAC7C,OAAO,IAAI,CAACqB,WAAW,CAAC0B,YAAY,CAACC,IAAI,CACvC2G,oDAAI,CAAC,CAAC,CAAC,EACPD,mDAAG,CAACzG,IAAI,IAAG;MACT,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAACzB,MAAM,CAACwC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO,KAAK;;MAGd,MAAMuG,aAAa,GAAGvK,KAAK,CAAC1D,IAAI,CAAC,OAAO,CAAa;MAErD,IAAI,CAACiO,aAAa,IAAIA,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;QAChD,OAAO,IAAI,CAAC,CAAC;;MAGf,MAAMC,eAAe,GAAG,IAAI,CAACpJ,WAAW,CAACqJ,cAAc,CAACH,aAAa,CAAC;MAEtE,IAAI,CAACE,eAAe,EAAE;QACpB,IAAI,CAAClJ,mBAAmB,CAACoJ,SAAS,CAChC,oFAAoF,CACrF;QACD,IAAI,CAACnJ,MAAM,CAACwC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACpC,OAAO,KAAK;;MAGd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;;;uBA3CWzI,SAAS,EAAA+B,sDAAA,CAAAN,+DAAA,GAAAM,sDAAA,CAAAoH,mDAAA,GAAApH,sDAAA,CAAAsH,+EAAA;IAAA;EAAA;;;aAATrJ,SAAS;MAAA4O,OAAA,EAAT5O,SAAS,CAAA6O,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkD;AACS;;;;AAMzE,MAAOxB,eAAe;EAI1BzH,YACUC,WAAwB,EACxBG,MAAc;IADd,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAG,MAAM,GAANA,MAAM;IALR,KAAA0J,YAAY,GAAG,KAAK;IACpB,KAAAC,mBAAmB,GAAG,IAAIN,iDAAe,CAAM,IAAI,CAAC;EAKzD;EAEHO,SAASA,CAACC,GAAqB,EAAE7I,IAAiB;IAChD;IACA,IAAI,IAAI,CAAC8I,cAAc,CAACD,GAAG,CAAC1H,GAAG,CAAC,EAAE;MAChC,OAAOnB,IAAI,CAAC+I,MAAM,CAACF,GAAG,CAAC;;IAGzB,MAAMG,KAAK,GAAG,IAAI,CAACnK,WAAW,CAACoK,QAAQ,EAAE;IAEzC;IACA,IAAID,KAAK,EAAE;MACTH,GAAG,GAAG,IAAI,CAACK,iBAAiB,CAACL,GAAG,EAAEG,KAAK,CAAC;;IAG1C,OAAOhJ,IAAI,CAAC+I,MAAM,CAACF,GAAG,CAAC,CAACrI,IAAI,CAC1B+H,0DAAU,CAAElI,KAAwB,IAAI;MACtC;MACA,IAAIA,KAAK,CAAC8I,MAAM,KAAK,GAAG,IAAIH,KAAK,IAAI,CAAC,IAAI,CAACF,cAAc,CAACD,GAAG,CAAC1H,GAAG,CAAC,EAAE;QAClE,OAAO,IAAI,CAACiI,cAAc,CAACP,GAAG,EAAE7I,IAAI,CAAC;;MAGvC;MACA,OAAOoI,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAEQ+I,cAAcA,CAACP,GAAqB,EAAE7I,IAAiB;IAC7D,IAAI,CAAC,IAAI,CAAC0I,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,mBAAmB,CAAC3I,IAAI,CAAC,IAAI,CAAC;MAEnC,MAAMqJ,YAAY,GAAG,IAAI,CAACxK,WAAW,CAACyK,eAAe,EAAE;MAEvD,IAAID,YAAY,EAAE;QAChB,OAAO,IAAI,CAACxK,WAAW,CAACwK,YAAY,CAACA,YAAY,CAAC,CAAC7I,IAAI,CACrDgI,yDAAS,CAAEe,QAAQ,IAAI;UACrB,IAAI,CAACb,YAAY,GAAG,KAAK;UACzB,IAAI,CAACC,mBAAmB,CAAC3I,IAAI,CAACuJ,QAAQ,CAACP,KAAK,CAAC;UAE7C;UACA,OAAOhJ,IAAI,CAAC+I,MAAM,CAAC,IAAI,CAACG,iBAAiB,CAACL,GAAG,EAAEU,QAAQ,CAACP,KAAK,CAAC,CAAC;QACjE,CAAC,CAAC,EACFT,0DAAU,CAAElI,KAAK,IAAI;UACnB,IAAI,CAACqI,YAAY,GAAG,KAAK;UACzB,IAAI,CAAC7J,WAAW,CAACxC,MAAM,EAAE;UACzB,IAAI,CAAC2C,MAAM,CAACwC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;UACrC,OAAO4G,gDAAU,CAAC,MAAM/H,KAAK,CAAC;QAChC,CAAC,CAAC,EACFoI,wDAAQ,CAAC,MAAK;UACZ,IAAI,CAACC,YAAY,GAAG,KAAK;QAC3B,CAAC,CAAC,CACH;OACF,MAAM;QACL;QACA,IAAI,CAACA,YAAY,GAAG,KAAK;QACzB,IAAI,CAAC7J,WAAW,CAACxC,MAAM,EAAE;QACzB,IAAI,CAAC2C,MAAM,CAACwC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO8G,uCAAK;;KAEf,MAAM;MACL;MACA,OAAO,IAAI,CAACK,mBAAmB,CAACnI,IAAI,CAClC3F,sDAAM,CAACmO,KAAK,IAAIA,KAAK,KAAK,IAAI,CAAC,EAC/B7B,oDAAI,CAAC,CAAC,CAAC,EACPqB,yDAAS,CAACQ,KAAK,IAAIhJ,IAAI,CAAC+I,MAAM,CAAC,IAAI,CAACG,iBAAiB,CAACL,GAAG,EAAEG,KAAK,CAAC,CAAC,CAAC,CACpE;;EAEL;EAEQE,iBAAiBA,CAACL,GAAqB,EAAEG,KAAa;IAC5D,OAAOH,GAAG,CAACW,KAAK,CAAC;MACfC,UAAU,EAAE;QACV,eAAe,EAAE,UAAUT,KAAK;;KAEnC,CAAC;EACJ;EAEQF,cAAcA,CAAC3H,GAAW;IAChC,MAAMuI,aAAa,GAAG,CACpB,aAAa,EACb,gBAAgB,EAChB,qBAAqB,EACrB,uBAAuB,EACvB,sBAAsB,EACtB,oBAAoB,CACrB;IAED,OAAOA,aAAa,CAACC,IAAI,CAACC,QAAQ,IAAIzI,GAAG,CAACE,QAAQ,CAACuI,QAAQ,CAAC,CAAC;EAC/D;;;uBAjGWvD,eAAe,EAAAvL,sDAAA,CAAAN,+DAAA,GAAAM,sDAAA,CAAAoH,oDAAA;IAAA;EAAA;;;aAAfmE,eAAe;MAAAsB,OAAA,EAAftB,eAAe,CAAAuB;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACPkB;AACK;AACoB;AACF;AACL;AACH;;AAGvD,MAAOtB,gBAAgB;EAE3B1H,YAAoBoL,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;EAAa;EAEzCpB,SAASA,CAACC,GAAqB,EAAE7I,IAAiB;IAChD,OAAOA,IAAI,CAAC+I,MAAM,CAACF,GAAG,CAAC,CAACrI,IAAI;IAC1B;IACAqJ,qDAAK,CAAC;MACJ9I,KAAK,EAAE,IAAI,CAACkJ,WAAW,CAACpB,GAAG,CAAC,GAAGiB,kEAAW,CAACI,GAAG,CAACC,aAAa,GAAG,CAAC;MAChEC,KAAK,EAAEA,CAAC/J,KAAwB,EAAEgK,UAAkB,KAAI;QACtD;QACA,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAG;UAC3BC,UAAU,CAACD,OAAO,EAAET,kEAAW,CAACI,GAAG,CAACO,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,UAAU,GAAG,CAAC,CAAC,CAAC;QAC/E,CAAC,CAAC;MACJ;KACD,CAAC,EACF9B,0DAAU,CAAElI,KAAwB,IAAI;MACtC,MAAMuK,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACxK,KAAK,EAAEwI,GAAG,CAAC;MAEhD;MACA,IAAI,CAACiB,kEAAW,CAACgB,UAAU,EAAE;QAC3BxK,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEuK,QAAQ,CAAC;;MAGxC;MACA,IAAI,CAACG,sBAAsB,CAACH,QAAQ,CAAC;MAErC,OAAOxC,gDAAU,CAAC,MAAMwC,QAAQ,CAAC;IACnC,CAAC,CAAC,CACH;EACH;EAEQX,WAAWA,CAACpB,GAAqB;IACvC;IACA,MAAMmC,mBAAmB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;IACrD,MAAMC,qBAAqB,GAAG,CAAC,aAAa,EAAE,gBAAgB,CAAC;IAE/D,OAAO,CAACD,mBAAmB,CAAC3J,QAAQ,CAACwH,GAAG,CAACqC,MAAM,CAACpO,WAAW,EAAE,CAAC,IACvD,CAACmO,qBAAqB,CAACtB,IAAI,CAACC,QAAQ,IAAIf,GAAG,CAAC1H,GAAG,CAACE,QAAQ,CAACuI,QAAQ,CAAC,CAAC;EAC5E;EAEQiB,cAAcA,CAACxK,KAAwB,EAAEwI,GAAqB;IACpE,IAAI+B,QAAQ,GAAa;MACvBO,IAAI,EAAEpB,2DAAS,CAACqB,YAAY;MAC5BC,OAAO,EAAE,8BAA8B;MACvCC,WAAW,EAAE,4BAA4B;MACzCC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBvS,IAAI,EAAE4P,GAAG,CAAC1H,GAAG;MACb+J,MAAM,EAAErC,GAAG,CAACqC,MAAM;MAClBO,UAAU,EAAEpL,KAAK,CAAC8I;KACnB;IAED,IAAI9I,KAAK,CAACA,KAAK,IAAI,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,EAAE;MAClD;MACAuK,QAAQ,GAAG;QACT,GAAGA,QAAQ;QACXO,IAAI,EAAE9K,KAAK,CAACA,KAAK,CAAC8K,IAAI,IAAI,IAAI,CAACO,sBAAsB,CAACrL,KAAK,CAAC8I,MAAM,CAAC;QACnEkC,OAAO,EAAEhL,KAAK,CAACA,KAAK,CAACgL,OAAO,IAAIT,QAAQ,CAACS,OAAO;QAChDC,WAAW,EAAEjL,KAAK,CAACA,KAAK,CAACiL,WAAW,IAAIV,QAAQ,CAACU,WAAW;QAC5DK,OAAO,EAAEtL,KAAK,CAACA,KAAK,CAACuL,MAAM,IAAIvL,KAAK,CAACA,KAAK,CAACsL;OAC5C;KACF,MAAM;MACL;MACA,QAAQtL,KAAK,CAAC8I,MAAM;QAClB,KAAK,CAAC;UACJyB,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAAC8B,aAAa;UACvCjB,QAAQ,CAACS,OAAO,GAAG,0BAA0B;UAC7CT,QAAQ,CAACU,WAAW,GAAG,uCAAuC;UAC9D;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAAC+B,gBAAgB;UAC1ClB,QAAQ,CAACS,OAAO,GAAG,sBAAsB;UACzCT,QAAQ,CAACU,WAAW,GAAG,0BAA0B;UACjD;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACgC,YAAY;UACtCnB,QAAQ,CAACS,OAAO,GAAG,yBAAyB;UAC5CT,QAAQ,CAACU,WAAW,GAAG,uBAAuB;UAC9C;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACiC,SAAS;UACnCpB,QAAQ,CAACS,OAAO,GAAG,eAAe;UAClCT,QAAQ,CAACU,WAAW,GAAG,yBAAyB;UAChD;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACkC,SAAS;UACnCrB,QAAQ,CAACS,OAAO,GAAG,oBAAoB;UACvCT,QAAQ,CAACU,WAAW,GAAG,uBAAuB;UAC9C;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACmC,QAAQ;UAClCtB,QAAQ,CAACS,OAAO,GAAG,mBAAmB;UACtCT,QAAQ,CAACU,WAAW,GAAG,eAAe;UACtC;QACF,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACoC,uBAAuB;UACjDvB,QAAQ,CAACS,OAAO,GAAG,yBAAyB;UAC5CT,QAAQ,CAACU,WAAW,GAAG,oCAAoC;UAC3D;QACF,KAAK,GAAG;QACR,KAAK,GAAG;UACNV,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACqC,aAAa;UACvCxB,QAAQ,CAACS,OAAO,GAAG,iBAAiB;UACpCT,QAAQ,CAACU,WAAW,GAAG,kBAAkB;UACzC;QACF;UACE,IAAIjL,KAAK,CAAC8I,MAAM,IAAI,GAAG,EAAE;YACvByB,QAAQ,CAACO,IAAI,GAAGpB,2DAAS,CAACqB,YAAY;YACtCR,QAAQ,CAACS,OAAO,GAAG,cAAc;YACjCT,QAAQ,CAACU,WAAW,GAAG,8BAA8B;;;;IAK7D,OAAOV,QAAQ;EACjB;EAEQc,sBAAsBA,CAACvC,MAAc;IAC3C,QAAQA,MAAM;MACZ,KAAK,GAAG;QAAE,OAAOY,2DAAS,CAAC+B,gBAAgB;MAC3C,KAAK,GAAG;QAAE,OAAO/B,2DAAS,CAACgC,YAAY;MACvC,KAAK,GAAG;QAAE,OAAOhC,2DAAS,CAACiC,SAAS;MACpC,KAAK,GAAG;QAAE,OAAOjC,2DAAS,CAACkC,SAAS;MACpC,KAAK,GAAG;QAAE,OAAOlC,2DAAS,CAACmC,QAAQ;MACnC,KAAK,GAAG;QAAE,OAAOnC,2DAAS,CAACoC,uBAAuB;MAClD,KAAK,GAAG;MACR,KAAK,GAAG;QAAE,OAAOpC,2DAAS,CAACqC,aAAa;MACxC;QACE,OAAOjD,MAAM,IAAI,GAAG,GAAGY,2DAAS,CAACqB,YAAY,GAAGrB,2DAAS,CAAC+B,gBAAgB;;EAEhF;EAEQf,sBAAsBA,CAAC1K,KAAe;IAC5C;IACA,MAAMgM,YAAY,GAAG,CAACtC,2DAAS,CAACgC,YAAY,CAAC;IAE7C,IAAIM,YAAY,CAAChL,QAAQ,CAAChB,KAAK,CAAC8K,IAAiB,CAAC,EAAE;MAClD;;IAGF,IAAI;MACF;MACA,MAAMpM,mBAAmB,GAAG,IAAI,CAACiL,QAAQ,CAACsC,GAAG,CAAC/J,+EAAmB,CAAC;MAClE,MAAM/F,kBAAkB,GAAG,IAAI,CAACwN,QAAQ,CAACsC,GAAG,CAACjK,6EAAkB,CAAC;MAEhE;MACA,MAAMkK,qBAAqB,GAAG/P,kBAAkB,CAACK,eAAe,KAAK,IAAI;MACzE,MAAMwO,OAAO,GAAGkB,qBAAqB,IAAIlM,KAAK,CAACiL,WAAW,GAAGjL,KAAK,CAACiL,WAAW,GAAGjL,KAAK,CAACgL,OAAO;MAE9F,QAAQhL,KAAK,CAAC8K,IAAI;QAChB,KAAKpB,2DAAS,CAAC8B,aAAa;QAC5B,KAAK9B,2DAAS,CAACqC,aAAa;UAC1BrN,mBAAmB,CAACoJ,SAAS,CAACkD,OAAO,EAAE;YACrCmB,QAAQ,EAAE,IAAI;YACdC,MAAM,EAAE;WACT,CAAC;UACF;QACF,KAAK1C,2DAAS,CAAC+B,gBAAgB;UAC7B/M,mBAAmB,CAAC2N,WAAW,CAACrB,OAAO,EAAE;YACvCmB,QAAQ,EAAE;WACX,CAAC;UACF;QACF,KAAKzC,2DAAS,CAACiC,SAAS;QACxB,KAAKjC,2DAAS,CAACkC,SAAS;UACtBlN,mBAAmB,CAAC4N,QAAQ,CAACtB,OAAO,EAAE;YACpCmB,QAAQ,EAAE;WACX,CAAC;UACF;QACF;UACEzN,mBAAmB,CAACoJ,SAAS,CAACkD,OAAO,EAAE;YACrCmB,QAAQ,EAAE;WACX,CAAC;;KAEP,CAAC,OAAOI,cAAc,EAAE;MACvB;MACAtM,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACgL,OAAO,EAAEuB,cAAc,CAAC;;EAE9E;;;uBAjLWtG,gBAAgB,EAAAxL,sDAAA,CAAAA,mDAAA;IAAA;EAAA;;;aAAhBwL,gBAAgB;MAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB;IAAA;EAAA;;;;;;;;;;;;;;;;;;ACPa;;;AAIpC,MAAOrB,kBAAkB;EAE7B3H,YAAoBE,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErD8J,SAASA,CAACC,GAAqB,EAAE7I,IAAiB;IAChD;IACA,IAAI,IAAI,CAAC8M,iBAAiB,CAACjE,GAAG,CAAC,EAAE;MAC/B,OAAO7I,IAAI,CAAC+I,MAAM,CAACF,GAAG,CAAC;;IAGzB;IACA,MAAMkE,UAAU,GAAG,IAAI,CAACC,kBAAkB,CAACnE,GAAG,CAAC;IAE/C;IACA,IAAI,CAAC/J,cAAc,CAACmO,UAAU,CAACF,UAAU,EAAE,IAAI,CAAC;IAEhD,OAAO/M,IAAI,CAAC+I,MAAM,CAACF,GAAG,CAAC,CAACrI,IAAI,CAC1BiI,wDAAQ,CAAC,MAAK;MACZ;MACA,IAAI,CAAC3J,cAAc,CAACmO,UAAU,CAACF,UAAU,EAAE,KAAK,CAAC;IACnD,CAAC,CAAC,CACH;EACH;EAEQD,iBAAiBA,CAACjE,GAAqB;IAC7C;IACA,MAAMqE,oBAAoB,GAAG,CAC3B,qBAAqB,EACrB,sBAAsB,EACtB,YAAY,EACZ,SAAS,CACV;IAED;IACA,IAAIrE,GAAG,CAACsE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;MACrC,OAAO,IAAI;;IAGb;IACA,OAAOF,oBAAoB,CAACvD,IAAI,CAACC,QAAQ,IAAIf,GAAG,CAAC1H,GAAG,CAACE,QAAQ,CAACuI,QAAQ,CAAC,CAAC;EAC1E;EAEQoD,kBAAkBA,CAACnE,GAAqB;IAC9C;IACA;IACA,MAAMqC,MAAM,GAAGrC,GAAG,CAACqC,MAAM;IACzB,MAAM/J,GAAG,GAAG0H,GAAG,CAAC1H,GAAG,CAACkM,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAE/C,OAAO,GAAGnC,MAAM,IAAI/J,GAAG,EAAE;EAC3B;;;uBAjDWoF,kBAAkB,EAAAzL,sDAAA,CAAAN,qEAAA;IAAA;EAAA;;;aAAlB+L,kBAAkB;MAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;AC6CxB,IAAK0F,cAiBX;AAjBD,WAAYA,cAAc;EACxBA,cAAA,qBAAiB;EACjBA,cAAA,6BAAyB;EACzBA,cAAA,iCAA6B;EAC7BA,cAAA,mDAA+C;EAC/CA,cAAA,2BAAuB;EACvBA,cAAA,6CAAyC;EACzCA,cAAA,iBAAa;EACbA,cAAA,yBAAqB;EACrBA,cAAA,aAAS;EACTA,cAAA,qBAAiB;EACjBA,cAAA,uBAAmB;EACnBA,cAAA,+BAA2B;EAC3BA,cAAA,uBAAmB;EACnBA,cAAA,+BAA2B;EAC3BA,cAAA,2BAAuB;EACvBA,cAAA,yBAAqB;AACvB,CAAC,EAjBWA,cAAc,KAAdA,cAAc;AA8C1B;AACO,IAAKC,cAKX;AALD,WAAYA,cAAc;EACxBA,cAAA,uBAAmB;EACnBA,cAAA,yBAAqB;EACrBA,cAAA,yBAAqB;EACrBA,cAAA,uBAAmB;AACrB,CAAC,EALWA,cAAc,KAAdA,cAAc;AA0BnB,IAAKC,gBAYX;AAZD,WAAYA,gBAAgB;EAC1BA,gBAAA,uCAAmC;EACnCA,gBAAA,qCAAiC;EACjCA,gBAAA,mCAA+B;EAC/BA,gBAAA,iCAA6B;EAC7BA,gBAAA,qCAAiC;EACjCA,gBAAA,qCAAiC;EACjCA,gBAAA,+BAA2B;EAC3BA,gBAAA,yCAAqC;EACrCA,gBAAA,6CAAyC;EACzCA,gBAAA,+BAA2B;EAC3BA,gBAAA,qCAAiC;AACnC,CAAC,EAZWA,gBAAgB,KAAhBA,gBAAgB;AAcrB,IAAKC,oBAKX;AALD,WAAYA,oBAAoB;EAC9BA,oBAAA,eAAW;EACXA,oBAAA,qBAAiB;EACjBA,oBAAA,iBAAa;EACbA,oBAAA,qBAAiB;AACnB,CAAC,EALWA,oBAAoB,KAApBA,oBAAoB;AAmCzB,IAAKC,UAOX;AAPD,WAAYA,UAAU;EACpBA,UAAA,yBAAqB;EACrBA,UAAA,iCAA6B;EAC7BA,UAAA,uBAAmB;EACnBA,UAAA,uBAAmB;EACnBA,UAAA,uBAAmB;EACnBA,UAAA,yBAAqB;AACvB,CAAC,EAPWA,UAAU,KAAVA,UAAU;AA0Bf,IAAKC,WAUX;AAVD,WAAYA,WAAW;EACrBA,WAAA,qBAAiB;EACjBA,WAAA,qBAAiB;EACjBA,WAAA,qBAAiB;EACjBA,WAAA,mBAAe;EACfA,WAAA,qBAAiB;EACjBA,WAAA,iBAAa;EACbA,WAAA,qBAAiB;EACjBA,WAAA,uBAAmB;EACnBA,WAAA,qBAAiB;AACnB,CAAC,EAVWA,WAAW,KAAXA,WAAW;AAgChB,IAAKC,cAOX;AAPD,WAAYA,cAAc;EACxBA,cAAA,qBAAiB;EACjBA,cAAA,uBAAmB;EACnBA,cAAA,uBAAmB;EACnBA,cAAA,uBAAmB;EACnBA,cAAA,iBAAa;EACbA,cAAA,iBAAa;AACf,CAAC,EAPWA,cAAc,KAAdA,cAAc;AASnB,IAAKC,cASX;AATD,WAAYA,cAAc;EACxBA,cAAA,yBAAqB;EACrBA,cAAA,6BAAyB;EACzBA,cAAA,6BAAyB;EACzBA,cAAA,2BAAuB;EACvBA,cAAA,2BAAuB;EACvBA,cAAA,uBAAmB;EACnBA,cAAA,mBAAe;EACfA,cAAA,eAAW;AACb,CAAC,EATWA,cAAc,KAAdA,cAAc;AAkEnB,IAAK9D,SAUX;AAVD,WAAYA,SAAS;EACnBA,SAAA,yCAAqC;EACrCA,SAAA,iCAA6B;EAC7BA,SAAA,2BAAuB;EACvBA,SAAA,2BAAuB;EACvBA,SAAA,yBAAqB;EACrBA,SAAA,iCAA6B;EAC7BA,SAAA,mCAA+B;EAC/BA,SAAA,mCAA+B;EAC/BA,SAAA,uDAAmD;AACrD,CAAC,EAVWA,SAAS,KAATA,SAAS,Q;;;;;;;;;;;;;;;;;;;;;;;;ACjTiD;AACL;AAED;;;;AAe1D,MAAO9H,WAAW;EAOtBrD,YACUoP,IAAgB,EAChBhP,MAAc;IADd,KAAAgP,IAAI,GAAJA,IAAI;IACJ,KAAAhP,MAAM,GAANA,MAAM;IARC,KAAAiP,MAAM,GAAG,GAAGnE,kEAAW,CAACmE,MAAM,OAAO;IAC9C,KAAAC,kBAAkB,GAAG,IAAI7F,iDAAe,CAAc,IAAI,CAAC;IAG5D,KAAA9H,YAAY,GAAG,IAAI,CAAC2N,kBAAkB,CAACC,YAAY,EAAE;IAM1D;IACA,IAAI,CAACC,qBAAqB,EAAE;EAC9B;EAEA;EACA,IAAIlR,WAAWA,CAAA;IACb,OAAO,IAAI,CAACgR,kBAAkB,CAACG,KAAK;EACtC;EAEA,IAAIrQ,eAAeA,CAAA;IACjB,OAAO,CAAC,CAAC,IAAI,CAACiL,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC/L,WAAW;EAChD;EAEA,IAAIuE,OAAOA,CAAA;IACT,OAAO,IAAI,CAACvE,WAAW,EAAE6E,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC7E,WAAW,EAAE6E,IAAI,KAAK,aAAa;EACvF;EAEA,IAAIuM,QAAQA,CAAA;IACV,OAAO,IAAI,CAACpR,WAAW,EAAE6E,IAAI,IAAI,IAAI;EACvC;EAEA;EACAwM,KAAKA,CAACC,WAAyB;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAA6B,GAAG,IAAI,CAACR,MAAM,QAAQ,EAAEO,WAAW,CAAC,CACnFhO,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,cAAc,CAAC;;MAErD,OAAO9B,QAAQ,CAACzP,IAAI;IACtB,CAAC,CAAC,EACFiU,mDAAG,CAACa,aAAa,IAAG;MAClB,IAAI,CAACC,UAAU,CAACD,aAAa,CAAC;IAChC,CAAC,CAAC,EACFrG,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEAyO,QAAQA,CAACC,QAAyB;IAChC,OAAO,IAAI,CAACf,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,WAAW,EAAEc,QAAQ,CAAC,CAC1EvO,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,qBAAqB,CAAC;;MAE5D,OAAO9B,QAAQ,CAACzP,IAAI;IACtB,CAAC,CAAC,EACFyO,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEAhE,MAAMA,CAAA;IACJ,IAAI,CAAC2S,YAAY,EAAE;IACnB,IAAI,CAACd,kBAAkB,CAAClO,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACiP,yBAAyB,EAAE;IAChC,IAAI,CAACjQ,MAAM,CAACwC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EACvC;EAEA6H,YAAYA,CAACA,YAAoB;IAC/B,MAAM6F,OAAO,GAAwB;MAAE7F;IAAY,CAAE;IAErD,OAAO,IAAI,CAAC2E,IAAI,CAACS,IAAI,CAA6B,GAAG,IAAI,CAACR,MAAM,gBAAgB,EAAEiB,OAAO,CAAC,CACvF1O,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,sBAAsB,CAAC;;MAE7D,OAAO9B,QAAQ,CAACzP,IAAI;IACtB,CAAC,CAAC,EACFiU,mDAAG,CAACa,aAAa,IAAG;MAClB,IAAI,CAACC,UAAU,CAACD,aAAa,CAAC;IAChC,CAAC,CAAC,EACFrG,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,IAAI,CAAChE,MAAM,EAAE;MACb,OAAO+L,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEA8O,cAAcA,CAAChS,KAAa;IAC1B,MAAM+R,OAAO,GAAyB;MAAE/R;IAAK,CAAE;IAE/C,OAAO,IAAI,CAAC6Q,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,kBAAkB,EAAEiB,OAAO,CAAC,CAChF1O,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,+BAA+B,CAAC;;IAExE,CAAC,CAAC,EACF9C,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEA+O,aAAaA,CAACpG,KAAa,EAAEqG,WAAmB;IAC9C,OAAO,IAAI,CAACrB,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,iBAAiB,EAAE;MACxEjF,KAAK;MACLqG;KACD,CAAC,CACC7O,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,uBAAuB,CAAC;;IAEhE,CAAC,CAAC,EACF9C,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEAiP,cAAcA,CAACJ,OAA8B;IAC3C,OAAO,IAAI,CAAClB,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,kBAAkB,EAAEiB,OAAO,CAAC,CAChF1O,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,wBAAwB,CAAC;;IAEjE,CAAC,CAAC,EACF9C,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEAkP,WAAWA,CAACvG,KAAa;IACvB,OAAO,IAAI,CAACgF,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,eAAe,EAAE;MAAEjF;IAAK,CAAE,CAAC,CAC/ExI,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,2BAA2B,CAAC;;IAEpE,CAAC,CAAC,EACF9C,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEAmP,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACxB,IAAI,CAACS,IAAI,CAAoB,GAAG,IAAI,CAACR,MAAM,sBAAsB,EAAE,EAAE,CAAC,CAC/EzN,IAAI,CACH0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,4BAA4B,CAAC;;IAErE,CAAC,CAAC,EACF9C,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO+H,gDAAU,CAAC,MAAM/H,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACL;EAEA;EACA4I,QAAQA,CAAA;IACN,OAAOwG,YAAY,CAACC,OAAO,CAAC5F,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,CAAC;EAC3D;EAEAtG,eAAeA,CAAA;IACb,OAAOmG,YAAY,CAACC,OAAO,CAAC,GAAG5F,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,CAAC;EACxE;EAEA;EACQf,UAAUA,CAACD,aAA4B;IAC7C,MAAM;MAAEnO,IAAI;MAAEuI,KAAK;MAAEK,YAAY;MAAEwG;IAAS,CAAE,GAAGjB,aAAa;IAE9D;IACAa,YAAY,CAACK,OAAO,CAAChG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,EAAE5G,KAAK,CAAC;IACzDyG,YAAY,CAACK,OAAO,CAAC,GAAGhG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,EAAEvG,YAAY,CAAC;IAC7EoG,YAAY,CAACK,OAAO,CAAChG,kEAAW,CAAC6F,OAAO,CAACI,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACxP,IAAI,CAAC,CAAC;IACvEgP,YAAY,CAACK,OAAO,CAAC,GAAGhG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,EAAEC,SAAS,CAACK,QAAQ,EAAE,CAAC;IAErF;IACA,IAAI,CAAChC,kBAAkB,CAAClO,IAAI,CAACS,IAAI,CAAC;IAElC;IACA,IAAI,CAAC0P,uBAAuB,CAACN,SAAS,CAAC;EACzC;EAEQb,YAAYA,CAAA;IAClBS,YAAY,CAACW,UAAU,CAACtG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,CAAC;IACrDH,YAAY,CAACW,UAAU,CAAC,GAAGtG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,CAAC;IAClEH,YAAY,CAACW,UAAU,CAACtG,kEAAW,CAAC6F,OAAO,CAACI,OAAO,CAAC;IACpDN,YAAY,CAACW,UAAU,CAAC,GAAGtG,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,CAAC;EACpE;EAEQxB,qBAAqBA,CAAA;IAC3B,IAAI;MACF,MAAMiC,QAAQ,GAAGZ,YAAY,CAACC,OAAO,CAAC5F,kEAAW,CAAC6F,OAAO,CAACI,OAAO,CAAC;MAClE,MAAM/G,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;MAC7B,MAAMqH,YAAY,GAAGb,YAAY,CAACC,OAAO,CAAC,GAAG5F,kEAAW,CAAC6F,OAAO,CAACC,QAAQ,UAAU,CAAC;MAEpF,IAAIS,QAAQ,IAAIrH,KAAK,IAAIsH,YAAY,EAAE;QACrC,MAAM7P,IAAI,GAAGuP,IAAI,CAACO,KAAK,CAACF,QAAQ,CAAS;QACzC,MAAMR,SAAS,GAAG,IAAIrE,IAAI,CAAC8E,YAAY,CAAC;QAExC;QACA,IAAIT,SAAS,GAAG,IAAIrE,IAAI,EAAE,EAAE;UAC1B,IAAI,CAAC0C,kBAAkB,CAAClO,IAAI,CAACS,IAAI,CAAC;UAClC,IAAI,CAAC0P,uBAAuB,CAACN,SAAS,CAAC;SACxC,MAAM;UACL;UACA,MAAMxG,YAAY,GAAG,IAAI,CAACC,eAAe,EAAE;UAC3C,IAAID,YAAY,EAAE;YAChB,IAAI,CAACA,YAAY,CAACA,YAAY,CAAC,CAACjJ,SAAS,CAAC;cACxCC,KAAK,EAAEA,CAAA,KAAM,IAAI,CAAC2O,YAAY;aAC/B,CAAC;WACH,MAAM;YACL,IAAI,CAACA,YAAY,EAAE;;;;KAI1B,CAAC,OAAO3O,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,IAAI,CAAC2O,YAAY,EAAE;;EAEvB;EAEQmB,uBAAuBA,CAACK,cAAoB;IAClD,IAAI,CAACvB,yBAAyB,EAAE;IAEhC,MAAMwB,WAAW,GAAGD,cAAc,CAACE,OAAO,EAAE,GAAG,IAAIlF,IAAI,EAAE,CAACkF,OAAO,EAAE;IAEnE,IAAID,WAAW,GAAG,CAAC,EAAE;MACnB;MACA,MAAME,WAAW,GAAGjG,IAAI,CAACkG,GAAG,CAACH,WAAW,GAAI,CAAC,GAAG,EAAE,GAAG,IAAK,EAAE,KAAK,CAAC,CAAC,CAAC;MAEpE,IAAI,CAACI,oBAAoB,GAAG/C,2CAAK,CAAC6C,WAAW,CAAC,CAACvQ,SAAS,CAAC,MAAK;QAC5D,MAAMiJ,YAAY,GAAG,IAAI,CAACC,eAAe,EAAE;QAC3C,IAAID,YAAY,EAAE;UAChB,IAAI,CAACA,YAAY,CAACA,YAAY,CAAC,CAACjJ,SAAS,CAAC;YACxCC,KAAK,EAAEA,CAAA,KAAM,IAAI,CAAChE,MAAM;WACzB,CAAC;SACH,MAAM;UACL,IAAI,CAACA,MAAM,EAAE;;MAEjB,CAAC,CAAC;;EAEN;EAEQ4S,yBAAyBA,CAAA;IAC/B,IAAI,IAAI,CAAC4B,oBAAoB,EAAE;MAC7B,IAAI,CAACA,oBAAoB,CAACC,WAAW,EAAE;MACvC,IAAI,CAACD,oBAAoB,GAAGzW,SAAS;;EAEzC;EAEA;EACA2W,aAAaA,CAACC,UAAkB;IAC9B,IAAI,CAAC,IAAI,CAAC9T,WAAW,EAAE;MACrB,OAAO,KAAK;;IAGd;IACA,IAAI,IAAI,CAACA,WAAW,CAAC6E,IAAI,KAAK,aAAa,EAAE;MAC3C,OAAO,IAAI;;IAGb;IACA,QAAQiP,UAAU;MAChB,KAAK,mBAAmB;MACxB,KAAK,iBAAiB;MACtB,KAAK,cAAc;QACjB,OAAO,IAAI,CAAC9T,WAAW,CAAC6E,IAAI,KAAK,OAAO;MAE1C,KAAK,eAAe;MACpB,KAAK,mBAAmB;MACxB,KAAK,cAAc;MACnB,KAAK,iBAAiB;QACpB,OAAO,IAAI;MAAE;MAEf;QACE,OAAO,KAAK;;EAElB;EAEAmG,cAAcA,CAACH,aAAuB;IACpC,IAAI,CAAC,IAAI,CAAC7K,WAAW,EAAE;MACrB,OAAO,KAAK;;IAGd,OAAO6K,aAAa,CAAC1G,QAAQ,CAAC,IAAI,CAACnE,WAAW,CAAC6E,IAAI,CAAC;EACtD;;;uBAlTWE,WAAW,EAAAnH,sDAAA,CAAAN,4DAAA,GAAAM,sDAAA,CAAAoH,mDAAA;IAAA;EAAA;;;aAAXD,WAAW;MAAA0F,OAAA,EAAX1F,WAAW,CAAA2F,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;ACjB+B;AACd;;AAK/B,MAAO1F,cAAc;EAH3BvD,YAAA;IAIU,KAAAsS,cAAc,GAAG,IAAI7I,iDAAe,CAA2B,EAAE,CAAC;IAE1E;;;IAGO,KAAA8I,QAAQ,GAAG,IAAI,CAACD,cAAc,CAAC/C,YAAY,EAAE;IAEpD;;;IAGO,KAAAzN,UAAU,GAAG,IAAI,CAACyQ,QAAQ,CAAC3Q,IAAI,CACpC0G,mDAAG,CAACkK,aAAa,IAAIC,MAAM,CAACC,MAAM,CAACF,aAAa,CAAC,CAACzH,IAAI,CAAChN,SAAS,IAAIA,SAAS,CAAC,CAAC,CAChF;;EAED;;;;;EAKAsQ,UAAUA,CAACsE,GAAW,EAAE5U,SAAkB;IACxC,MAAM6U,YAAY,GAAG,IAAI,CAACN,cAAc,CAAC7C,KAAK;IAE9C,IAAI1R,SAAS,EAAE;MACb,IAAI,CAACuU,cAAc,CAAClR,IAAI,CAAC;QACvB,GAAGwR,YAAY;QACf,CAACD,GAAG,GAAG;OACR,CAAC;KACH,MAAM;MACL,MAAM;QAAE,CAACA,GAAG,GAAGE,OAAO;QAAE,GAAGC;MAAQ,CAAE,GAAGF,YAAY;MACpD,IAAI,CAACN,cAAc,CAAClR,IAAI,CAAC0R,QAAQ,CAAC;;EAEtC;EAEA;;;;EAIA/U,SAASA,CAAC4U,GAAW;IACnB,OAAO,IAAI,CAACJ,QAAQ,CAAC3Q,IAAI,CACvB0G,mDAAG,CAACkK,aAAa,IAAI,CAAC,CAACA,aAAa,CAACG,GAAG,CAAC,CAAC,CAC3C;EACH;EAEA;;;;EAIAI,aAAaA,CAACJ,GAAW;IACvB,MAAMC,YAAY,GAAG,IAAI,CAACN,cAAc,CAAC7C,KAAK;IAC9C,OAAO,CAAC,CAACmD,YAAY,CAACD,GAAG,CAAC;EAC5B;EAEA;;;EAGAK,QAAQA,CAAA;IACN,IAAI,CAACV,cAAc,CAAClR,IAAI,CAAC,EAAE,CAAC;EAC9B;EAEA;;;EAGA6R,oBAAoBA,CAAA;IAClB,MAAML,YAAY,GAAG,IAAI,CAACN,cAAc,CAAC7C,KAAK;IAC9C,OAAOgD,MAAM,CAACS,IAAI,CAACN,YAAY,CAAC,CAAC3W,MAAM,CAAC0W,GAAG,IAAIC,YAAY,CAACD,GAAG,CAAC,CAAC;EACnE;EAEA;;;;;EAKMQ,cAAcA,CAAIR,GAAW,EAAES,SAAqC;IAAA,IAAAC,KAAA;IAAA,OAAAC,oKAAA;MACxED,KAAI,CAAChF,UAAU,CAACsE,GAAG,EAAE,IAAI,CAAC;MAE1B,IAAI;QACF,IAAIS,SAAS,YAAY1H,OAAO,EAAE;UAChC,MAAM6H,MAAM,SAASH,SAAS;UAC9B,OAAOG,MAAM;SACd,MAAM;UACL;UACA,OAAO,IAAI7H,OAAO,CAAC,CAACC,OAAO,EAAE6H,MAAM,KAAI;YACrCJ,SAAS,CAAC5R,SAAS,CAAC;cAClBJ,IAAI,EAAGqO,KAAK,IAAK9D,OAAO,CAAC8D,KAAK,CAAC;cAC/BhO,KAAK,EAAGA,KAAK,IAAK+R,MAAM,CAAC/R,KAAK,CAAC;cAC/BJ,QAAQ,EAAEA,CAAA,KAAK,CAAE,CAAC,CAAC;aACpB,CAAC;UACJ,CAAC,CAAC;;OAEL,SAAS;QACRgS,KAAI,CAAChF,UAAU,CAACsE,GAAG,EAAE,KAAK,CAAC;;IAC5B;EACH;EAEA;;;;;;EAMMc,6BAA6BA,CAAAC,EAAA,EAAAC,GAAA,EAGR;IAAA,IAAAC,MAAA;IAAA,OAAAN,oKAAA,YAFzBX,GAAW,EACXS,SAAqC,EACrCS,WAAA,GAAsB,GAAG;MAEzBD,MAAI,CAACvF,UAAU,CAACsE,GAAG,EAAE,IAAI,CAAC;MAE1B,MAAMmB,SAAS,GAAGlH,IAAI,CAACmH,GAAG,EAAE;MAE5B,IAAI;QACF,IAAIR,MAAS;QAEb,IAAIH,SAAS,YAAY1H,OAAO,EAAE;UAChC6H,MAAM,SAASH,SAAS;SACzB,MAAM;UACL;UACAG,MAAM,SAAS,IAAI7H,OAAO,CAAC,CAACC,OAAO,EAAE6H,MAAM,KAAI;YAC7CJ,SAAS,CAAC5R,SAAS,CAAC;cAClBJ,IAAI,EAAGqO,KAAK,IAAK9D,OAAO,CAAC8D,KAAK,CAAC;cAC/BhO,KAAK,EAAGA,KAAK,IAAK+R,MAAM,CAAC/R,KAAK;aAC/B,CAAC;UACJ,CAAC,CAAC;;QAGJ;QACA,MAAMuS,WAAW,GAAGpH,IAAI,CAACmH,GAAG,EAAE,GAAGD,SAAS;QAC1C,IAAIE,WAAW,GAAGH,WAAW,EAAE;UAC7B,MAAM,IAAInI,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEkI,WAAW,GAAGG,WAAW,CAAC,CAAC;;QAG9E,OAAOT,MAAM;OACd,SAAS;QACRK,MAAI,CAACvF,UAAU,CAACsE,GAAG,EAAE,KAAK,CAAC;;IAC5B,GAAAsB,KAAA,OAAAC,SAAA;EACH;EAEA;;;EAGAC,iBAAiBA,CAAA;IACf,IAAI,CAAC9F,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC;EACjC;EAEA;;;EAGA+F,iBAAiBA,CAAA;IACf,IAAI,CAAC/F,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC;EAClC;EAEA;;;EAGAgG,eAAeA,CAAA;IACb,OAAO,IAAI,CAACtW,SAAS,CAAC,QAAQ,CAAC;EACjC;EAEA;;;EAGAuW,eAAeA,CAACC,IAAY;IAC1B,IAAI,CAAClG,UAAU,CAAC,QAAQkG,IAAI,EAAE,EAAE,IAAI,CAAC;EACvC;EAEA;;;EAGAC,eAAeA,CAACD,IAAY;IAC1B,IAAI,CAAClG,UAAU,CAAC,QAAQkG,IAAI,EAAE,EAAE,KAAK,CAAC;EACxC;EAEA;;;EAGAE,aAAaA,CAACF,IAAY;IACxB,OAAO,IAAI,CAACxW,SAAS,CAAC,QAAQwW,IAAI,EAAE,CAAC;EACvC;;;uBAjLWhR,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAwF,OAAA,EAAdxF,cAAc,CAAAyF,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;ACJyF;AAC1D;AAET;AACsB;;;;AAW1D,MAAOtF,mBAAmB;EAM9B3D,YACU2U,QAAqB,EACrBvF,IAAgB;IADhB,KAAAuF,QAAQ,GAARA,QAAQ;IACR,KAAAvF,IAAI,GAAJA,IAAI;IAPG,KAAAC,MAAM,GAAG,GAAGnE,kEAAW,CAACmE,MAAM,gBAAgB;IACvD,KAAAuF,kBAAkB,GAAG,IAAInL,iDAAe,CAAS,CAAC,CAAC;IAEpD,KAAAvH,YAAY,GAAG,IAAI,CAAC0S,kBAAkB,CAACrF,YAAY,EAAE;IAM1D;IACA;EACF;EAEA;EACAsF,WAAWA,CAACpI,OAAe,EAAEqI,OAA6B;IACxD,OAAO,IAAI,CAACC,gBAAgB,CAACtI,OAAO,EAAE,SAAS,EAAEqI,OAAO,CAAC;EAC3D;EAEAvL,SAASA,CAACkD,OAAe,EAAEqI,OAA6B;IACtD,OAAO,IAAI,CAACC,gBAAgB,CAACtI,OAAO,EAAE,OAAO,EAAEqI,OAAO,CAAC;EACzD;EAEAhH,WAAWA,CAACrB,OAAe,EAAEqI,OAA6B;IACxD,OAAO,IAAI,CAACC,gBAAgB,CAACtI,OAAO,EAAE,SAAS,EAAEqI,OAAO,CAAC;EAC3D;EAEA/G,QAAQA,CAACtB,OAAe,EAAEqI,OAA6B;IACrD,OAAO,IAAI,CAACC,gBAAgB,CAACtI,OAAO,EAAE,MAAM,EAAEqI,OAAO,CAAC;EACxD;EAEQC,gBAAgBA,CACtBtI,OAAe,EACfuI,IAA8C,EAC9CF,OAA6B;IAE7B,MAAMG,MAAM,GAAsB;MAChCrH,QAAQ,EAAE,IAAI,CAACsH,kBAAkB,CAACF,IAAI,CAAC;MACvCG,kBAAkB,EAAE,OAAO;MAC3BC,gBAAgB,EAAE,KAAK;MACvBC,UAAU,EAAE,CAAC,YAAYL,IAAI,EAAE,EAAE,iBAAiB,CAAC;MACnD,GAAGF;KACJ;IAED,OAAO,IAAI,CAACH,QAAQ,CAACW,IAAI,CAAC7I,OAAO,EAAEqI,OAAO,EAAEjH,MAAM,IAAI,KAAK,EAAEoH,MAAM,CAAC;EACtE;EAEQC,kBAAkBA,CAACF,IAAY;IACrC,QAAQA,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,IAAI;MAC3B,KAAK,OAAO;QAAE,OAAO,IAAI;MACzB,KAAK,SAAS;QAAE,OAAO,IAAI;MAC3B,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB;QAAS,OAAO,IAAI;;EAExB;EAEA;EACAO,gBAAgBA,CAACC,aAA4B;IAC3C,OAAO,IAAI,CAACpG,IAAI,CAACS,IAAI,CACnB,GAAG,IAAI,CAACR,MAAM,SAAS,EACvBmG,aAAa,CACd,CAAC5T,IAAI,CACJ0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,8BAA8B,CAAC;;MAErE,OAAO9B,QAAQ,CAACzP,IAAI;IACtB,CAAC,CAAC,CACH;EACH;EAEAua,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACrG,IAAI,CAAC1B,GAAG,CAA8B,GAAG,IAAI,CAAC2B,MAAM,SAAS,CAAC,CAACzN,IAAI,CAC7E0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,qCAAqC,CAAC;;MAE5E,OAAO9B,QAAQ,CAACzP,IAAI;IACtB,CAAC,CAAC,CACH;EACH;EAEAwa,UAAUA,CAACC,cAAsB;IAC/B,OAAO,IAAI,CAACvG,IAAI,CAACwG,KAAK,CAAoB,GAAG,IAAI,CAACvG,MAAM,IAAIsG,cAAc,OAAO,EAAE,EAAE,CAAC,CAAC/T,IAAI,CACzF0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,qCAAqC,CAAC;;IAE9E,CAAC,CAAC,EACF0C,mDAAG,CAAC,MAAK;MACP;MACA,IAAI,CAAC0G,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH;EACH;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAAC1G,IAAI,CAACwG,KAAK,CAAoB,GAAG,IAAI,CAACvG,MAAM,gBAAgB,EAAE,EAAE,CAAC,CAACzN,IAAI,CAChF0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,0CAA0C,CAAC;;IAEnF,CAAC,CAAC,EACF0C,mDAAG,CAAC,MAAK;MACP;MACA,IAAI,CAACyF,kBAAkB,CAACxT,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CACH;EACH;EAEA2U,kBAAkBA,CAACJ,cAAsB;IACvC,OAAO,IAAI,CAACvG,IAAI,CAAC4G,MAAM,CAAoB,GAAG,IAAI,CAAC3G,MAAM,IAAIsG,cAAc,EAAE,CAAC,CAAC/T,IAAI,CACjF0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,EAAE;QACrB,MAAM,IAAIC,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,+BAA+B,CAAC;;IAExE,CAAC,CAAC,CACH;EACH;EAEAwJ,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC7G,IAAI,CAAC1B,GAAG,CAAiC,GAAG,IAAI,CAAC2B,MAAM,eAAe,CAAC,CAACzN,IAAI,CACtF0G,mDAAG,CAACqC,QAAQ,IAAG;MACb,IAAI,CAACA,QAAQ,CAACmF,OAAO,IAAI,CAACnF,QAAQ,CAACzP,IAAI,EAAE;QACvC,MAAM,IAAI6U,KAAK,CAACpF,QAAQ,CAAC8B,OAAO,IAAI,6BAA6B,CAAC;;MAEpE,OAAO9B,QAAQ,CAACzP,IAAI,CAACiH,KAAK;IAC5B,CAAC,CAAC,EACFgN,mDAAG,CAAChN,KAAK,IAAG;MACV,IAAI,CAACyS,kBAAkB,CAACxT,IAAI,CAACe,KAAK,CAAC;IACrC,CAAC,CAAC,CACH;EACH;EAEQ+T,eAAeA,CAAA;IACrB,IAAI,CAACD,cAAc,EAAE,CAACzU,SAAS,CAAC;MAC9BC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;KACD,CAAC;EACJ;EAEQoU,iBAAiBA,CAACM,KAAa;IACrC,MAAMC,YAAY,GAAG,IAAI,CAACxB,kBAAkB,CAACnF,KAAK;IAClD,MAAM4G,QAAQ,GAAGvK,IAAI,CAACkG,GAAG,CAAC,CAAC,EAAEoE,YAAY,GAAGD,KAAK,CAAC;IAClD,IAAI,CAACvB,kBAAkB,CAACxT,IAAI,CAACiV,QAAQ,CAAC;EACxC;EAEA;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACzB,WAAW,CAAC,qDAAqD,CAAC;EAChF;EAEA0B,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAC1B,WAAW,CAAC,mDAAmD,CAAC;EAC9E;EAEA2B,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAC3B,WAAW,CAAC,uDAAuD,CAAC;EAClF;EAEA4B,mBAAmBA,CAAChK,OAAgB;IAClC,OAAO,IAAI,CAAClD,SAAS,CAACkD,OAAO,IAAI,2DAA2D,CAAC;EAC/F;EAEAiK,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACnN,SAAS,CAAC,yDAAyD,EAAE;MAC/EsE,MAAM,EAAE,iBAAiB;MACzBD,QAAQ,EAAE,CAAC,CAAC;KACb,CAAC;EACJ;EAEA+I,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACpN,SAAS,CAAC,2CAA2C,EAAE;MACjEsE,MAAM,EAAE;KACT,CAAC;EACJ;EAEA+I,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAAC7I,QAAQ,CAAC,wDAAwD,EAAE;MAC7EH,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE;KACT,CAAC;EACJ;EAEA;EACAgJ,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAChC,WAAW,CAAC,0DAA0D,CAAC;EACrF;EAEAiC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACjC,WAAW,CAAC,2DAA2D,CAAC;EACtF;EAEAkC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAAClC,WAAW,CAAC,4DAA4D,CAAC;EACvF;EAEAmC,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACnC,WAAW,CAAC,6DAA6D,CAAC;EACxF;EAEAoC,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACpC,WAAW,CAAC,iEAAiE,CAAC;EAC5F;;;uBA7MWlR,mBAAmB,EAAAzH,sDAAA,CAAAN,oEAAA,GAAAM,sDAAA,CAAAoH,4DAAA;IAAA;EAAA;;;aAAnBK,mBAAmB;MAAAoF,OAAA,EAAnBpF,mBAAmB,CAAAqF,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACZmC;AACD;AACU;;;AAO1D,MAAOxF,kBAAkB;EAO7BzD,YAAoBoP,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAgI,sBAAsB,GAAG,IAAI3N,iDAAe,CAAoB,IAAI,CAAC;IACrE,KAAA4N,YAAY,GAAG,IAAIC,GAAG,EAA0B;IAChD,KAAAC,mBAAmB,GAAG,IAAIC,GAAG,EAAqB;IAEnD,KAAAxV,gBAAgB,GAAG,IAAI,CAACoV,sBAAsB,CAAC7H,YAAY,EAAE;IAGlE,IAAI,CAACkI,kBAAkB,EAAE;EAC3B;EAEA,IAAIxZ,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACmZ,sBAAsB,CAAC3H,KAAK;EAC1C;EAEA;;;EAGAlO,WAAWA,CAACU,QAA2B;IACrC,IAAIA,QAAQ,KAAK,IAAI,CAAChE,eAAe,EAAE;MACrC,OAAOkZ,wCAAE,CAAC,IAAI,CAACE,YAAY,CAAC3J,GAAG,CAACzL,QAAQ,CAAC,IAAI,EAAE,CAAC;;IAGlD,OAAO,IAAI,CAACyV,gBAAgB,CAACzV,QAAQ,CAAC,CAACL,IAAI,CACzCuN,mDAAG,CAAC,MAAK;MACP,IAAI,CAACiI,sBAAsB,CAAChW,IAAI,CAACa,QAAQ,CAAC;MAC1C,IAAI,CAAC0V,sBAAsB,CAAC1V,QAAQ,CAAC;MACrC,IAAI,CAAC2V,sBAAsB,CAAC3V,QAAQ,CAAC;IACvC,CAAC,CAAC,CACH;EACH;EAEA;;;EAGA4V,SAASA,CAAClF,GAAW,EAAEmF,MAA+B;IACpD,MAAMC,mBAAmB,GAAG,IAAI,CAACV,YAAY,CAAC3J,GAAG,CAAC,IAAI,CAACzP,eAAe,CAAC,IAAI,EAAE;IAC7E,IAAI+Z,WAAW,GAAG,IAAI,CAACC,cAAc,CAACF,mBAAmB,EAAEpF,GAAG,CAAC;IAE/D,IAAI,CAACqF,WAAW,EAAE;MAChB;MACA,IAAI,IAAI,CAAC/Z,eAAe,KAAK,IAAI,EAAE;QACjC,MAAMia,mBAAmB,GAAG,IAAI,CAACb,YAAY,CAAC3J,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;QAC7DsK,WAAW,GAAG,IAAI,CAACC,cAAc,CAACC,mBAAmB,EAAEvF,GAAG,CAAC;;MAG7D;MACA,IAAI,CAACqF,WAAW,EAAE;QAChBtW,OAAO,CAACyW,IAAI,CAAC,kCAAkCxF,GAAG,EAAE,CAAC;QACrD,OAAOA,GAAG;;;IAId;IACA,IAAImF,MAAM,IAAI,OAAOE,WAAW,KAAK,QAAQ,EAAE;MAC7CvF,MAAM,CAACS,IAAI,CAAC4E,MAAM,CAAC,CAACM,OAAO,CAACC,KAAK,IAAG;QAClC,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAAC,SAASF,KAAK,QAAQ,EAAE,GAAG,CAAC;QAC3DL,WAAW,GAAGA,WAAW,CAACvJ,OAAO,CAAC6J,WAAW,EAAER,MAAM,CAACO,KAAK,CAAC,CAAC;MAC/D,CAAC,CAAC;;IAGJ,OAAOL,WAAW;EACpB;EAEA;;;EAGAtK,GAAGA,CAACiF,GAAW,EAAEmF,MAA+B;IAC9C,OAAO,IAAI,CAAC9V,gBAAgB,CAACJ,IAAI,CAC/B0G,mDAAG,CAAC,MAAM,IAAI,CAACuP,SAAS,CAAClF,GAAG,EAAEmF,MAAM,CAAC,CAAC,CACvC;EACH;EAEA;;;EAGAja,OAAOA,CAAC8U,GAAW,EAAEmF,MAA+B;IAClD,OAAO,IAAI,CAACD,SAAS,CAAClF,GAAG,EAAEmF,MAAM,CAAC;EACpC;EAEA;;;EAGQJ,gBAAgBA,CAACzV,QAA2B;IAClD;IACA,IAAI,IAAI,CAACsV,mBAAmB,CAAC/I,GAAG,CAACvM,QAAQ,CAAC,EAAE;MAC1C,OAAO,IAAIwH,iDAAe,CAAC,IAAI,CAAC4N,YAAY,CAAC3J,GAAG,CAACzL,QAAQ,CAAC,IAAI,EAAE,CAAC,CAACsN,YAAY,EAAE;;IAGlF;IACA,IAAI,IAAI,CAAC8H,YAAY,CAAC7I,GAAG,CAACvM,QAAQ,CAAC,EAAE;MACnC,OAAOkV,wCAAE,CAAC,IAAI,CAACE,YAAY,CAAC3J,GAAG,CAACzL,QAAQ,CAAC,CAAC;;IAG5C,IAAI,CAACsV,mBAAmB,CAACiB,GAAG,CAACvW,QAAQ,CAAC;IAEtC,OAAO,IAAI,CAACmN,IAAI,CAAC1B,GAAG,CAAC,gBAAgBzL,QAAQ,OAAO,CAAC,CAACL,IAAI,CACxDuN,mDAAG,CAACkI,YAAY,IAAG;MACjB,IAAI,CAACA,YAAY,CAACoB,GAAG,CAACxW,QAAQ,EAAEoV,YAAY,CAAC;MAC7C,IAAI,CAACE,mBAAmB,CAACvB,MAAM,CAAC/T,QAAQ,CAAC;IAC3C,CAAC,CAAC,EACF0H,0DAAU,CAAClI,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,mCAAmCQ,QAAQ,GAAG,EAAER,KAAK,CAAC;MACpE,IAAI,CAAC8V,mBAAmB,CAACvB,MAAM,CAAC/T,QAAQ,CAAC;MAEzC;MACA,MAAMyW,oBAAoB,GAAG,EAAE;MAC/B,IAAI,CAACrB,YAAY,CAACoB,GAAG,CAACxW,QAAQ,EAAEyW,oBAAoB,CAAC;MACrD,OAAOvB,wCAAE,CAACuB,oBAAoB,CAAC;IACjC,CAAC,CAAC,CACH;EACH;EAEA;;;EAGQjB,kBAAkBA,CAAA;IACxB,MAAMkB,aAAa,GAAG9H,YAAY,CAACC,OAAO,CAAC5F,kEAAW,CAAC6F,OAAO,CAAC6H,WAAW,CAAC;IAC3E,MAAMC,eAAe,GAAG,IAAI,CAACC,kBAAkB,EAAE;IACjD,MAAMC,eAAe,GAAG7N,kEAAW,CAAC6N,eAAoC;IAExE,IAAIC,cAAiC;IAErC,IAAIL,aAAa,IAAI,IAAI,CAACM,mBAAmB,CAACN,aAAa,CAAC,EAAE;MAC5DK,cAAc,GAAGL,aAAkC;KACpD,MAAM,IAAI,IAAI,CAACM,mBAAmB,CAACJ,eAAe,CAAC,EAAE;MACpDG,cAAc,GAAGH,eAAoC;KACtD,MAAM;MACLG,cAAc,GAAGD,eAAe;;IAGlC;IACA,IAAI,CAACrB,gBAAgB,CAACsB,cAAc,CAAC,CAACxX,SAAS,CAAC,MAAK;MACnD,IAAI,CAAC4V,sBAAsB,CAAChW,IAAI,CAAC4X,cAAc,CAAC;MAChD,IAAI,CAACpB,sBAAsB,CAACoB,cAAc,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEA;;;EAGQF,kBAAkBA,CAAA;IACxB,IAAI,OAAOI,SAAS,KAAK,WAAW,EAAE;MACpC,OAAOA,SAAS,CAACjX,QAAQ,EAAEkX,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;;IAElD,OAAO,IAAI;EACb;EAEA;;;EAGQF,mBAAmBA,CAAChX,QAAgB;IAC1C,OAAOiJ,kEAAW,CAACkO,kBAAkB,CAAC3W,QAAQ,CAACR,QAAQ,CAAC;EAC1D;EAEA;;;EAGQ0V,sBAAsBA,CAAC1V,QAA2B;IACxD4O,YAAY,CAACK,OAAO,CAAChG,kEAAW,CAAC6F,OAAO,CAAC6H,WAAW,EAAE3W,QAAQ,CAAC;EACjE;EAEA;;;EAGQ2V,sBAAsBA,CAAC3V,QAA2B;IACxD,IAAI,OAAOU,QAAQ,KAAK,WAAW,EAAE;MACnCA,QAAQ,CAACmF,eAAe,CAACC,IAAI,GAAG9F,QAAQ;MACxC;MACAU,QAAQ,CAACmF,eAAe,CAACuR,GAAG,GAAG,KAAK;;EAExC;EAEA;;;EAGQpB,cAAcA,CAACqB,GAAQ,EAAE3G,GAAW;IAC1C,OAAOA,GAAG,CAACwG,KAAK,CAAC,GAAG,CAAC,CAACI,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAI;MAC7C,OAAOD,OAAO,GAAGC,IAAI,CAAC;IACxB,CAAC,EAAEH,GAAG,CAAC;EACT;EAEA;;;EAGAjc,cAAcA,CAAA;IACZ,MAAMqc,WAAW,GAAsB,IAAI,CAACzb,eAAe,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IAClF,OAAO,IAAI,CAACsD,WAAW,CAACmY,WAAW,CAAC;EACtC;EAEA;;;EAGAC,qBAAqBA,CAAA;IACnB,OAAO,CACL;MAAEpN,IAAI,EAAE,IAAI;MAAEqN,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAK,CAAE,EAC/C;MAAEtN,IAAI,EAAE,IAAI;MAAEqN,IAAI,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAS,CAAE,CACvD;EACH;EAEA;;;EAGAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC7b,eAAe,KAAK,IAAI;EACtC;EAEA;;;EAGA8b,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAC9b,eAAe,KAAK,IAAI;EACtC;EAEA;;;EAGA+b,YAAYA,CAACvK,KAAa,EAAEqF,OAAkC;IAC5D,MAAMmF,MAAM,GAAG,IAAI,CAAChc,eAAe,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO;IAChE,OAAO,IAAIic,IAAI,CAACC,YAAY,CAACF,MAAM,EAAEnF,OAAO,CAAC,CAACsF,MAAM,CAAC3K,KAAK,CAAC;EAC7D;EAEA;;;EAGA4K,cAAcA,CAAC5K,KAAa;IAC1B,MAAMwK,MAAM,GAAG,IAAI,CAAChc,eAAe,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO;IAChE,OAAO,IAAIic,IAAI,CAACC,YAAY,CAACF,MAAM,EAAE;MACnCK,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE,KAAK;MACfC,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;KACxB,CAAC,CAACL,MAAM,CAAC3K,KAAK,CAAC;EAClB;EAEA;;;EAGAiL,UAAUA,CAACC,IAAmB,EAAE7F,OAAoC;IAClE,MAAM8F,OAAO,GAAG,OAAOD,IAAI,KAAK,QAAQ,GAAG,IAAI/N,IAAI,CAAC+N,IAAI,CAAC,GAAGA,IAAI;IAChE,MAAMV,MAAM,GAAG,IAAI,CAAChc,eAAe,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO;IAEhE,MAAM4c,cAAc,GAA+B;MACjDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;KACN;IAED,OAAO,IAAId,IAAI,CAACe,cAAc,CAAChB,MAAM,EAAE;MAAE,GAAGY,cAAc;MAAE,GAAG/F;IAAO,CAAE,CAAC,CAACsF,MAAM,CAACQ,OAAO,CAAC;EAC3F;EAEA;;;EAGAM,cAAcA,CAACP,IAAmB,EAAE7F,OAAoC;IACtE,MAAM8F,OAAO,GAAG,OAAOD,IAAI,KAAK,QAAQ,GAAG,IAAI/N,IAAI,CAAC+N,IAAI,CAAC,GAAGA,IAAI;IAChE,MAAMV,MAAM,GAAG,IAAI,CAAChc,eAAe,KAAK,IAAI,GAAG,OAAO,GAAG,OAAO;IAEhE,MAAM4c,cAAc,GAA+B;MACjDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdG,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;KACT;IAED,OAAO,IAAIlB,IAAI,CAACe,cAAc,CAAChB,MAAM,EAAE;MAAE,GAAGY,cAAc;MAAE,GAAG/F;IAAO,CAAE,CAAC,CAACsF,MAAM,CAACQ,OAAO,CAAC;EAC3F;;;uBA3QWnX,kBAAkB,EAAAvH,sDAAA,CAAAN,4DAAA;IAAA;EAAA;;;aAAlB6H,kBAAkB;MAAAsF,OAAA,EAAlBtF,kBAAkB,CAAAuF,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;ACRqD;;;;;;;;IAgB/D/M,qEAAA,GAAwC;IAAAA,oDAAA,cAAO;;;;;;IAC/CA,qEAAA,GAAuC;IAAAA,oDAAA,YAAK;;;;;;IAC5CA,qEAAA,GAA+B;IAAAA,oDAAA,WAAI;;;;AAkDvC,MAAOof,sBAAsB;EACjCtb,YACSub,SAA+C,EACtBrgB,IAAuB;IADhD,KAAAqgB,SAAS,GAATA,SAAS;IACgB,KAAArgB,IAAI,GAAJA,IAAI;IAEpC,IAAI,CAACA,IAAI,CAAC8Z,IAAI,GAAG,IAAI,CAAC9Z,IAAI,CAAC8Z,IAAI,IAAI,MAAM;EAC3C;EAEAwG,SAASA,CAAA;IACP,IAAI,CAACD,SAAS,CAACE,KAAK,CAAC,IAAI,CAAC;EAC5B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACH,SAAS,CAACE,KAAK,CAAC,KAAK,CAAC;EAC7B;;;uBAdWH,sBAAsB,EAAApf,+DAAA,CAAAN,kEAAA,GAAAM,+DAAA,CAGvBmf,qEAAe;IAAA;EAAA;;;YAHdC,sBAAsB;MAAArX,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAuX,gCAAArX,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UArD3BrI,4DAFJ,aAA8D,YAClB,kBACP;UAG/BA,wDAFA,IAAA2f,8CAAA,0BAAwC,IAAAC,8CAAA,0BACD,IAAAC,8CAAA,0BACR;UACjC7f,0DAAA,EAAW;UACXA,oDAAA,GACF;UAAAA,0DAAA,EAAK;UAELA,4DAAA,4BAA2C;UACzCA,uDAAA,WAAkC;UACpCA,0DAAA,EAAqB;UAGnBA,4DADF,4BAA2C,iBACD;UAArBA,wDAAA,mBAAA8f,yDAAA;YAAA,OAASxX,GAAA,CAAAkX,QAAA,EAAU;UAAA,EAAC;UACrCxf,oDAAA,IACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,iBAE8B;UAAtBA,wDAAA,mBAAA+f,yDAAA;YAAA,OAASzX,GAAA,CAAAgX,SAAA,EAAW;UAAA,EAAC;UAC3Btf,oDAAA,IACF;UAEJA,0DAFI,EAAS,EACU,EACjB;;;UAxBsBA,wDAAA,wBAAAsI,GAAA,CAAAtJ,IAAA,CAAA8Z,IAAA,CAAiC;UAE/C9Y,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAsI,GAAA,CAAAtJ,IAAA,CAAA8Z,IAAA,CAAsB;UACf9Y,uDAAA,EAAuB;UAAvBA,wDAAA,2BAAuB;UACvBA,uDAAA,EAAsB;UAAtBA,wDAAA,0BAAsB;UAGvCA,uDAAA,GACF;UADEA,gEAAA,MAAAsI,GAAA,CAAAtJ,IAAA,CAAAsF,KAAA,MACF;UAGKtE,uDAAA,GAA0B;UAA1BA,wDAAA,cAAAsI,GAAA,CAAAtJ,IAAA,CAAAuR,OAAA,EAAAvQ,4DAAA,CAA0B;UAK3BA,uDAAA,GACF;UADEA,gEAAA,MAAAsI,GAAA,CAAAtJ,IAAA,CAAAihB,UAAA,gDACF;UAEQjgB,uDAAA,EAAqD;UAArDA,wDAAA,UAAAsI,GAAA,CAAAtJ,IAAA,CAAA8Z,IAAA,mCAAqD;UAE3D9Y,uDAAA,EACF;UADEA,gEAAA,MAAAsI,GAAA,CAAAtJ,IAAA,CAAAkhB,WAAA,gDACF;;;;;;;;;;;;;;;;;;;;;;;AC9BF,MAAOC,kBAAkB;;;uBAAlBA,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAApY,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAE,QAAA,WAAAiY,4BAAA/X,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAFlBrI,4DAAA,UAAK;UAAAA,oDAAA,2BAAoB;UAAAA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;ACEtC,MAAOqgB,mBAAmB;;;uBAAnBA,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAtY,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAE,QAAA,WAAAmY,6BAAAjY,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAFnBrI,4DAAA,UAAK;UAAAA,oDAAA,4BAAqB;UAAAA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;ACEvC,MAAOugB,mBAAmB;;;uBAAnBA,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAxY,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAE,QAAA,WAAAqY,6BAAAnY,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAFnBrI,4DAAA,UAAK;UAAAA,oDAAA,4BAAqB;UAAAA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICGvCA,4DAAA,WAA2C;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAI;;;;IAAjBA,uDAAA,EAAa;IAAbA,+DAAA,CAAAygB,MAAA,CAAAlQ,OAAA,CAAa;;;AAoBxD,MAAOmQ,uBAAuB;EAzBpC5c,YAAA;IA0BW,KAAA6c,QAAQ,GAAW,EAAE;IACrB,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAArQ,OAAO,GAAW,EAAE;IACpB,KAAAsQ,MAAM,GAAW,MAAM;;;;uBAJrBH,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAA3Y,SAAA;MAAA+Y,MAAA;QAAAH,QAAA;QAAAC,WAAA;QAAArQ,OAAA;QAAAsQ,MAAA;MAAA;MAAA7Y,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4Y,iCAAA1Y,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAtBhCrI,4DAAA,aAAuD;UACrDA,uDAAA,qBAA6E;UAC7EA,wDAAA,IAAAghB,oCAAA,eAA2C;UAC7ChhB,0DAAA,EAAM;;;UAHyBA,yDAAA,WAAAsI,GAAA,CAAAuY,MAAA,CAAuB;UACvC7gB,uDAAA,EAAqB;UAACA,wDAAtB,aAAAsI,GAAA,CAAAqY,QAAA,CAAqB,gBAAArY,GAAA,CAAAsY,WAAA,CAA4B;UAClC5gB,uDAAA,EAAa;UAAbA,wDAAA,SAAAsI,GAAA,CAAAiI,OAAA,CAAa;;;;;;;;;;;;;;;;;;;;;;;ACDzC,MAAO2Q,mBAAmB;;;uBAAnBA,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAAnZ,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAE,QAAA,WAAAgZ,6BAAA9Y,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAFnBrI,4DAAA,UAAK;UAAAA,oDAAA,4BAAqB;UAAAA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;ACEvC,MAAOohB,mBAAmB;;;uBAAnBA,mBAAmB;IAAA;EAAA;;;YAAnBA,mBAAmB;MAAArZ,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAE,QAAA,WAAAkZ,6BAAAhZ,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAFnBrI,4DAAA,UAAK;UAAAA,oDAAA,4BAAqB;UAAAA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;ACCvC,MAAOshB,kBAAkB;EAC7Bxd,YAAoByd,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,eAAeA,CAAA;IACb9R,UAAU,CAAC,MAAK;MACd,IAAI,CAAC6R,UAAU,CAACE,aAAa,CAACC,KAAK,EAAE;IACvC,CAAC,EAAE,CAAC,CAAC;EACP;;;uBAPWJ,kBAAkB,EAAAthB,+DAAA,CAAAA,qDAAA;IAAA;EAAA;;;YAAlBshB,kBAAkB;MAAAvZ,SAAA;IAAA;EAAA;;;;;;;;;;;;;;;;ACL2D;;AAKpF,MAAO8Z,qBAAqB;EAGhC/d,YAAoByd,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFpB,KAAAO,YAAY,GAAG,IAAIF,uDAAY,EAAQ;EAEJ;EAGtCG,OAAOA,CAACC,MAAW;IACxB,MAAMC,aAAa,GAAG,IAAI,CAACV,UAAU,CAACE,aAAa,CAACS,QAAQ,CAACF,MAAM,CAAC;IACpE,IAAI,CAACC,aAAa,EAAE;MAClB,IAAI,CAACH,YAAY,CAACK,IAAI,EAAE;;EAE5B;;;uBAXWN,qBAAqB,EAAA7hB,+DAAA,CAAAA,qDAAA;IAAA;EAAA;;;YAArB6hB,qBAAqB;MAAA9Z,SAAA;MAAAqa,YAAA,WAAAC,mCAAAha,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAArBrI,wDAAA,mBAAAsiB,+CAAAC,MAAA;YAAA,OAAAja,GAAA,CAAAyZ,OAAA,CAAAQ,MAAA,CAAAP,MAAA,CAAsB;UAAA,UAAAhiB,+DAAA,CAAD;;;;;;;;;;;;;;;;;;;;;;;;ACA5B,MAAOyiB,oBAAoB;EAC/B3e,YAAoByd,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAG7CmB,SAASA,CAACvc,KAAoB;IAC5B;IACA,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAACwc,OAAO,CAACxc,KAAK,CAACyc,OAAO,CAAC,KAAK,CAAC,CAAC;IAChD;IACCzc,KAAK,CAACyc,OAAO,KAAK,EAAE,IAAIzc,KAAK,CAAC0c,OAAQ,IACtC1c,KAAK,CAACyc,OAAO,KAAK,EAAE,IAAIzc,KAAK,CAAC0c,OAAQ,IACtC1c,KAAK,CAACyc,OAAO,KAAK,EAAE,IAAIzc,KAAK,CAAC0c,OAAQ,IACtC1c,KAAK,CAACyc,OAAO,KAAK,EAAE,IAAIzc,KAAK,CAAC0c,OAAQ;IACvC;IACC1c,KAAK,CAACyc,OAAO,IAAI,EAAE,IAAIzc,KAAK,CAACyc,OAAO,IAAI,EAAG,EAAE;MAChD,OAAO,IAAI;;IAGb;IACA,IAAI,CAACzc,KAAK,CAAC2c,QAAQ,IAAK3c,KAAK,CAACyc,OAAO,GAAG,EAAE,IAAIzc,KAAK,CAACyc,OAAO,GAAG,EAAG,MAC5Dzc,KAAK,CAACyc,OAAO,GAAG,EAAE,IAAIzc,KAAK,CAACyc,OAAO,GAAG,GAAG,CAAC,EAAE;MAC/Czc,KAAK,CAAC4c,cAAc,EAAE;MACtB,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;;;uBAzBWN,oBAAoB,EAAAziB,+DAAA,CAAAA,qDAAA;IAAA;EAAA;;;YAApByiB,oBAAoB;MAAA1a,SAAA;MAAAqa,YAAA,WAAAY,kCAAA3a,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAApBrI,wDAAA,qBAAAijB,gDAAAV,MAAA;YAAA,OAAAja,GAAA,CAAAoa,SAAA,CAAAH,MAAA,CAAiB;UAAA,EAAG;;;;;;;;;;;;;;;;;;;;;ACA3B,MAAOW,uBAAuB;EAClCpf,YAAoByd,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAG7C4B,OAAOA,CAAChd,KAAU;IAChB,IAAIoN,KAAK,GAAGpN,KAAK,CAAC6b,MAAM,CAACzO,KAAK,CAAChB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEjD;IACA,IAAIgB,KAAK,CAACrG,MAAM,GAAG,EAAE,EAAE;MACrBqG,KAAK,GAAGA,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;;IAGhC;IACA,IAAI7P,KAAK,CAACrG,MAAM,GAAG,CAAC,EAAE;MACpB,IAAIqG,KAAK,CAACrG,MAAM,IAAI,CAAC,EAAE;QACrBqG,KAAK,GAAGA,KAAK;OACd,MAAM,IAAIA,KAAK,CAACrG,MAAM,IAAI,CAAC,EAAE;QAC5BqG,KAAK,GAAGA,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,CAAC;OACzD,MAAM,IAAI7P,KAAK,CAACrG,MAAM,IAAI,EAAE,EAAE;QAC7BqG,KAAK,GAAGA,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,CAAC;OACvF,MAAM,IAAI7P,KAAK,CAACrG,MAAM,IAAI,EAAE,EAAE;QAC7BqG,KAAK,GAAGA,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,EAAE,CAAC;OACvH,MAAM;QACL7P,KAAK,GAAGA,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG7P,KAAK,CAAC6P,SAAS,CAAC,EAAE,CAAC;;;IAI1Jjd,KAAK,CAAC6b,MAAM,CAACzO,KAAK,GAAGA,KAAK;EAC5B;;;uBA5BW2P,uBAAuB,EAAAljB,+DAAA,CAAAA,qDAAA;IAAA;EAAA;;;YAAvBkjB,uBAAuB;MAAAnb,SAAA;MAAAqa,YAAA,WAAAiB,qCAAAhb,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAvBrI,wDAAA,mBAAAsjB,iDAAAf,MAAA;YAAA,OAAAja,GAAA,CAAA6a,OAAA,CAAAZ,MAAA,CAAe;UAAA,EAAQ;;;;;;;;;;;;;;;;;;;;;ACA9B,MAAOgB,oBAAoB;EAC/BC,SAASA,CAACjQ,KAAa;IACrB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IAErB;IACA,MAAMkQ,UAAU,GAAGlQ,KAAK,CAAChB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC3C,IAAIkR,UAAU,CAACvW,MAAM,KAAK,EAAE,EAAE;MAC5B,OAAOuW,UAAU,CAAClR,OAAO,CAAC,qCAAqC,EAAE,gBAAgB,CAAC;;IAEpF,OAAOgB,KAAK;EACd;;;uBAVWgQ,oBAAoB;IAAA;EAAA;;;;YAApBA,oBAAoB;MAAAG,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;ACA3B,MAAOC,eAAe;EAC1BH,SAASA,CAACjQ,KAAa;IACrB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IAErB;IACA,MAAMkQ,UAAU,GAAGlQ,KAAK,CAAChB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC3C,IAAIkR,UAAU,CAACvW,MAAM,KAAK,EAAE,EAAE;MAC5B,OAAOuW,UAAU,CAAClR,OAAO,CAAC,uBAAuB,EAAE,UAAU,CAAC;;IAEhE,OAAOgB,KAAK;EACd;;;uBAVWoQ,eAAe;IAAA;EAAA;;;;YAAfA,eAAe;MAAAD,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;ACCtB,MAAOE,YAAY;EACvB9f,YAAoB+f,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAE9CL,SAASA,CAACjQ,KAAa;IACrB,OAAO,IAAI,CAACsQ,SAAS,CAACC,uBAAuB,CAACvQ,KAAK,CAAC;EACtD;;;uBALWqQ,YAAY,EAAA5jB,+DAAA,CAAAN,mEAAA;IAAA;EAAA;;;;YAAZkkB,YAAY;MAAAF,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;ACAnB,MAAOM,gBAAgB;EAC3BlgB,YAAoBpC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;EAAuB;EAE7D8hB,SAASA,CAACjQ,KAAyC;IACjD,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKjU,SAAS,IAAIiU,KAAK,KAAK,EAAE,EAAE;MACzD,OAAO,EAAE;;IAGX,MAAM0Q,QAAQ,GAAG,OAAO1Q,KAAK,KAAK,QAAQ,GAAG2Q,UAAU,CAAC3Q,KAAK,CAAC,GAAGA,KAAK;IAEtE,IAAI4Q,KAAK,CAACF,QAAQ,CAAC,EAAE;MACnB,OAAO,EAAE;;IAGX,OAAO,IAAI,CAACviB,kBAAkB,CAACyc,cAAc,CAAC8F,QAAQ,CAAC;EACzD;;;uBAfWD,gBAAgB,EAAAhkB,+DAAA,CAAAN,kFAAA;IAAA;EAAA;;;;YAAhBskB,gBAAgB;MAAAN,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;ACDvB,MAAOU,YAAY;EACvBZ,SAASA,CAACjQ,KAAU;IAClB,OAAOA,KAAK,GAAG,IAAI7C,IAAI,CAAC6C,KAAK,CAAC,CAAC8Q,kBAAkB,CAAC,OAAO,CAAC,GAAG,EAAE;EACjE;;;uBAHWD,YAAY;IAAA;EAAA;;;;YAAZA,YAAY;MAAAV,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;ACAnB,MAAOY,cAAc;EACzBd,SAASA,CAACjQ,KAAU;IAClB,OAAOA,KAAK,GAAGgR,MAAM,CAAChR,KAAK,CAAC,CAACiR,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE;EAC3D;;;uBAHWF,cAAc;IAAA;EAAA;;;;YAAdA,cAAc;MAAAZ,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;ACHI;AACY;;;AAMrC,MAAOe,aAAa;EAKxB3gB,YAAoBpC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAJ9B,KAAA2C,QAAQ,GAAG,IAAIxE,yCAAO,EAAQ;IAC9B,KAAA6kB,OAAO,GAAW,EAAE;IACpB,KAAAC,SAAS,GAAW,EAAE;IAG5B;IACA,IAAI,CAACjjB,kBAAkB,CAACoE,gBAAgB,CACrCJ,IAAI,CAAC5F,yDAAS,CAAC,IAAI,CAACuE,QAAQ,CAAC,CAAC,CAC9BiB,SAAS,CAAC,MAAK;MACd,IAAI,CAACof,OAAO,GAAG,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC;EACN;EAEAlB,SAASA,CAAC/M,GAAW,EAAEmF,MAA+B;IACpD,IAAI,CAACnF,GAAG,EAAE,OAAO,EAAE;IAEnB;IACA,MAAMmO,QAAQ,GAAGnO,GAAG,GAAGvB,IAAI,CAACC,SAAS,CAACyG,MAAM,IAAI,EAAE,CAAC;IACnD,IAAI,IAAI,CAAC8I,OAAO,KAAKE,QAAQ,EAAE;MAC7B,IAAI,CAACF,OAAO,GAAGE,QAAQ;MACvB,IAAI,CAACD,SAAS,GAAG,IAAI,CAACjjB,kBAAkB,CAACia,SAAS,CAAClF,GAAG,EAAEmF,MAAM,CAAC;;IAGjE,OAAO,IAAI,CAAC+I,SAAS;EACvB;EAEA1f,WAAWA,CAAA;IACT,IAAI,CAACZ,QAAQ,CAACa,IAAI,EAAE;IACpB,IAAI,CAACb,QAAQ,CAACc,QAAQ,EAAE;EAC1B;;;uBA9BWsf,aAAa,EAAAzkB,+DAAA,CAAAN,kFAAA;IAAA;EAAA;;;;YAAb+kB,aAAa;MAAAf,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACmB;AACnB;AAE/C;AAC2D;AACJ;AACE;AACS;AACX;AACuB;AACd;AACL;AACA;AACI;AACI;AACV;AACQ;AACV;AACE;AACF;AACM;AACS;AAEtE;AACyD;AAEzD;AACiG;AACH;AACT;AACH;AACG;AACA;AACA;AAErF;AACuD;AACD;AACQ;AACJ;AACJ;AACiB;AACX;AAE5D;AACsE;AACO;AACF;AACO;;AAElF,MAAMqB,gBAAgB,GAAG,CACvBxb,sEAAe,EACfC,kEAAa,EACbG,oEAAc,EACdC,6EAAkB,EAClBF,kEAAa,EACbO,yFAAwB,EACxBC,2EAAiB,EACjBI,sEAAe,EACfR,sEAAe,EACfD,0EAAiB,EACjBE,8EAAmB,EACnBI,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbI,oEAAc,EACdF,kEAAa,EACbua,wEAAgB,EAChBja,iFAAoB,CACrB;AAED,MAAMma,iBAAiB,GAAG,CACxBtE,0GAAuB,EACvBtB,uGAAsB,EACtBmB,8FAAmB,EACnBJ,2FAAkB,EAClBe,8FAAmB,EACnBb,8FAAmB,EACnBe,8FAAmB,CACpB;AAED,MAAM6D,YAAY,GAAG,CACnBR,gEAAa,EACbL,+DAAY,EACZJ,uEAAgB,EAChBM,oEAAc,EACdV,gEAAY,EACZL,iFAAoB,EACpBI,sEAAe,CAChB;AAED,MAAMuB,iBAAiB,GAAG,CACxB5D,gFAAkB,EAClBO,uFAAqB,EACrBY,qFAAoB,EACpBS,4FAAuB,CACxB;AAqCK,MAAOxX,YAAY;;;uBAAZA,YAAY;IAAA;EAAA;;;YAAZA;IAAY;EAAA;;;gBA5BrBmZ,0DAAY,EACZ5b,wDAAW,EACXD,gEAAmB,EACnBjL,0DAAY,EAGTgnB,gBAAgB;MAGnB;MACAF,0DAAY,EACZ5b,wDAAW,EACXD,gEAAmB,EACnBjL,0DAAY,EAnEdwL,sEAAe,EACfC,kEAAa,EACbG,oEAAc,EACdC,6EAAkB,EAClBF,kEAAa,EACbO,yFAAwB,EACxBC,2EAAiB,EACjBI,sEAAe,EACfR,sEAAe,EACfD,0EAAiB,EACjBE,8EAAmB,EACnBI,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbI,oEAAc,EACdF,kEAAa,EACbua,wEAAgB,EAChBja,iFAAoB;IAAA;EAAA;;;uHAiETa,YAAY;IAAAS,YAAA,GA7DvBuU,0GAAuB,EACvBtB,uGAAsB,EACtBmB,8FAAmB,EACnBJ,2FAAkB,EAClBe,8FAAmB,EACnBb,8FAAmB,EACnBe,8FAAmB,EAInBqD,gEAAa,EACbL,+DAAY,EACZJ,uEAAgB,EAChBM,oEAAc,EACdV,gEAAY,EACZL,iFAAoB,EACpBI,sEAAe,EAIfrC,gFAAkB,EAClBO,uFAAqB,EACrBY,qFAAoB,EACpBS,4FAAuB;IAAAzjB,OAAA,GAUrBolB,0DAAY,EACZ5b,wDAAW,EACXD,gEAAmB,EACnBjL,0DAAY,EACZqN,uDAAgB,EAChBC,kDAAW,EA3Db9B,sEAAe,EACfC,kEAAa,EACbG,oEAAc,EACdC,6EAAkB,EAClBF,kEAAa,EACbO,yFAAwB,EACxBC,2EAAiB,EACjBI,sEAAe,EACfR,sEAAe,EACfD,0EAAiB,EACjBE,8EAAmB,EACnBI,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbI,oEAAc,EACdF,kEAAa,EACbua,wEAAgB,EAChBja,iFAAoB;IAAAlL,OAAA;IA8ClB;IACAklB,0DAAY,EACZ5b,wDAAW,EACXD,gEAAmB,EACnBjL,0DAAY,EAnEdwL,sEAAe,EACfC,kEAAa,EACbG,oEAAc,EACdC,6EAAkB,EAClBF,kEAAa,EACbO,yFAAwB,EACxBC,2EAAiB,EACjBI,sEAAe,EACfR,sEAAe,EACfD,0EAAiB,EACjBE,8EAAmB,EACnBI,oEAAc,EACdC,4EAAkB,EAClBC,kEAAa,EACbI,oEAAc,EACdF,kEAAa,EACbua,wEAAgB,EAChBja,iFAAoB;IAuDlB;IACAO,uDAAgB,EAChBC,kDAAW,EArDbqV,0GAAuB,EACvBtB,uGAAsB,EACtBmB,8FAAmB,EACnBJ,2FAAkB,EAClBe,8FAAmB,EACnBb,8FAAmB,EACnBe,8FAAmB,EAInBqD,gEAAa,EACbL,+DAAY,EACZJ,uEAAgB,EAChBM,oEAAc,EACdV,gEAAY,EACZL,iFAAoB,EACpBI,sEAAe,EAIfrC,gFAAkB,EAClBO,uFAAqB,EACrBY,qFAAoB,EACpBS,4FAAuB;EAAA;AAAA,K;;;;;;;;;;;;;;ACjGlB,MAAMlU,WAAW,GAAG;EACzBgB,UAAU,EAAE,KAAK;EACjBmD,MAAM,EAAE,2BAA2B;EACnCgS,OAAO,EAAE,OAAO;EAChBC,OAAO,EAAE,qBAAqB;EAC9BlI,kBAAkB,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAChCL,eAAe,EAAE,IAAI;EACrBwI,QAAQ,EAAE;IACRC,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE,KAAK;IACtBC,mBAAmB,EAAE,KAAK;IAC1BC,eAAe,EAAE,IAAI;IACrBC,cAAc,EAAE;GACjB;EACDC,QAAQ,EAAE;IACRC,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAE,EAAE,CAAC;GACf;EACD1W,GAAG,EAAE;IACH2W,OAAO,EAAE,KAAK;IACd1W,aAAa,EAAE,CAAC;IAChBM,UAAU,EAAE;GACb;EACDkF,OAAO,EAAE;IACPC,QAAQ,EAAE,2BAA2B;IACrCG,OAAO,EAAE,0BAA0B;IACnCyH,WAAW,EAAE;;CAEhB,C;;;;;;;;;;;;;;;;AC5B4C;AACY;AACV;AAE/C,IAAI1N,kEAAW,CAACgB,UAAU,EAAE;EAC1BgW,6DAAc,EAAE;;AAGlBC,sEAAA,EAAwB,CAACE,eAAe,CAACxa,sDAAS,EAAE;EAClDya,qBAAqB,EAAE;CACxB,CAAC,CACCC,KAAK,CAACC,GAAG,IAAI9gB,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAE+gB,GAAG,CAAC,CAAC,C","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/guards/role.guard.ts","./src/app/core/interceptors/auth.interceptor.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/core/interceptors/loading.interceptor.ts","./src/app/core/models/common.model.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/loading.service.ts","./src/app/core/services/notification.service.ts","./src/app/core/services/translation.service.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/data-table/data-table.component.ts","./src/app/shared/components/empty-state/empty-state.component.ts","./src/app/shared/components/file-upload/file-upload.component.ts","./src/app/shared/components/loading-spinner/loading-spinner.component.ts","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/components/status-chip/status-chip.component.ts","./src/app/shared/directives/autofocus.directive.ts","./src/app/shared/directives/click-outside.directive.ts","./src/app/shared/directives/numeric-only.directive.ts","./src/app/shared/directives/thai-national-id.directive.ts","./src/app/shared/pipes/format-national-id.pipe.ts","./src/app/shared/pipes/format-phone.pipe.ts","./src/app/shared/pipes/safe-html.pipe.ts","./src/app/shared/pipes/thai-currency.pipe.ts","./src/app/shared/pipes/thai-date.pipe.ts","./src/app/shared/pipes/thai-number.pipe.ts","./src/app/shared/pipes/translate.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { RoleGuard } from './core/guards/role.guard';\n\nconst routes: Routes = [\n  // Default route - redirect to dashboard if authenticated, login if not\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  \n  // Authentication routes (lazy loaded)\n  {\n    path: 'auth',\n    loadChildren: () => import('./features/auth/auth.module').then(m => m.AuthModule)\n  },\n  \n  // Dashboard route (protected)\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./features/dashboard/dashboard.module').then(m => m.DashboardModule),\n    canActivate: [AuthGuard]\n  },\n  \n  // Customer routes (protected)\n  {\n    path: 'customer',\n    loadChildren: () => import('./features/customer/customer.module').then(m => m.CustomerModule),\n    canActivate: [AuthGuard]\n  },\n  \n  // Policy routes (protected)\n  {\n    path: 'policies',\n    loadChildren: () => import('./features/policy/policy.module').then(m => m.PolicyModule),\n    canActivate: [AuthGuard]\n  },\n  \n  // Claims routes (protected)\n  {\n    path: 'claims',\n    loadChildren: () => import('./features/claims/claims.module').then(m => m.ClaimsModule),\n    canActivate: [AuthGuard]\n  },\n  \n  // Admin routes (protected with role check)\n  {\n    path: 'admin',\n    loadChildren: () => import('./features/admin/admin.module').then(m => m.AdminModule),\n    canActivate: [AuthGuard, RoleGuard],\n    data: { \n      roles: ['ADMIN', 'SUPER_ADMIN'] \n    }\n  },\n  \n  // Profile and settings routes (protected)\n  {\n    path: 'profile',\n    loadChildren: () => import('./features/customer/customer.module').then(m => m.CustomerModule),\n    canActivate: [AuthGuard]\n  },\n  \n  // Catch all route - redirect to dashboard\n  {\n    path: '**',\n    redirectTo: '/dashboard'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    // Enable router tracing for debugging (only in development)\n    enableTracing: false, // Set to true for debugging\n    // Preload all lazy loaded modules for better performance\n    preloadingStrategy: undefined, // Can use PreloadAllModules if needed\n    // Scroll to top on route change\n    scrollPositionRestoration: 'top',\n    // Hash location strategy for deployment compatibility\n    useHash: false\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subject, combineLatest } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\nimport { AuthService } from './core/services/auth.service';\nimport { LoadingService } from './core/services/loading.service';\nimport { TranslationService } from './core/services/translation.service';\nimport { NotificationService } from './core/services/notification.service';\nimport { User } from './core/models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private mobileQuery: MediaQueryList;\n  \n  title = 'Thai Auto Insurance';\n  currentUser: User | null = null;\n  isLoading = false;\n  isAuthenticated = false;\n  isMobile = false;\n  sidenavOpened = true;\n  currentLanguage: 'th' | 'en' = 'th';\n  unreadNotifications = 0;\n\n  constructor(\n    private authService: AuthService,\n    private loadingService: LoadingService,\n    public translationService: TranslationService,\n    private notificationService: NotificationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private media: MediaMatcher\n  ) {\n    // Setup mobile query listener\n    this.mobileQuery = this.media.matchMedia('(max-width: 768px)');\n    this.mobileQueryListener = () => {\n      this.isMobile = this.mobileQuery.matches;\n      this.sidenavOpened = !this.isMobile;\n      this.changeDetectorRef.detectChanges();\n    };\n    this.mobileQuery.addListener(this.mobileQueryListener);\n    this.isMobile = this.mobileQuery.matches;\n    this.sidenavOpened = !this.isMobile;\n  }\n\n  private mobileQueryListener: () => void;\n\n  ngOnInit(): void {\n    this.initializeApp();\n    this.setupSubscriptions();\n    this.setupRouterEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.mobileQuery.removeListener(this.mobileQueryListener);\n  }\n\n  private initializeApp(): void {\n    // Initialize translation service\n    this.translationService.setLanguage('th').subscribe({\n      error: (error) => console.error('Failed to load translations:', error)\n    });\n  }\n\n  private setupSubscriptions(): void {\n    // Subscribe to authentication state\n    this.authService.currentUser$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(user => {\n        this.currentUser = user;\n        this.isAuthenticated = !!user;\n        this.changeDetectorRef.detectChanges();\n      });\n\n    // Subscribe to loading state\n    this.loadingService.isLoading$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(loading => {\n        this.isLoading = loading;\n        this.changeDetectorRef.detectChanges();\n      });\n\n    // Subscribe to language changes\n    this.translationService.currentLanguage$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(language => {\n        this.currentLanguage = language;\n        this.changeDetectorRef.detectChanges();\n      });\n\n    // Subscribe to notification count\n    this.notificationService.unreadCount$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(count => {\n        this.unreadNotifications = count;\n        this.changeDetectorRef.detectChanges();\n      });\n  }\n\n  private setupRouterEvents(): void {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((event) => {\n        // Close mobile menu after navigation\n        if (this.isMobile) {\n          this.sidenavOpened = false;\n        }\n\n        // Update page title based on route\n        this.updatePageTitle((event as NavigationEnd).url);\n      });\n  }\n\n  private updatePageTitle(url: string): void {\n    let titleKey = 'common.appName';\n    \n    if (url.includes('/dashboard')) {\n      titleKey = 'navigation.dashboard';\n    } else if (url.includes('/policies')) {\n      titleKey = 'navigation.policies';\n    } else if (url.includes('/claims')) {\n      titleKey = 'navigation.claims';\n    } else if (url.includes('/profile')) {\n      titleKey = 'navigation.profile';\n    } else if (url.includes('/admin')) {\n      titleKey = 'navigation.admin';\n    }\n\n    const translatedTitle = this.translationService.instant(titleKey);\n    document.title = `${translatedTitle} | Thai Auto Insurance`;\n  }\n\n  // Public methods for template\n  toggleSidenav(): void {\n    this.sidenavOpened = !this.sidenavOpened;\n  }\n\n  toggleLanguage(): void {\n    this.translationService.toggleLanguage().subscribe({\n      error: (error) => console.error('Failed to toggle language:', error)\n    });\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n  navigateTo(route: string): void {\n    this.router.navigate([route]);\n    \n    // Close mobile menu\n    if (this.isMobile) {\n      this.sidenavOpened = false;\n    }\n  }\n\n  // Navigation menu items\n  getNavigationItems(): Array<{ route: string; icon: string; labelKey: string; requiresAuth: boolean }> {\n    return [\n      { route: '/dashboard', icon: 'dashboard', labelKey: 'navigation.dashboard', requiresAuth: true },\n      { route: '/policies', icon: 'description', labelKey: 'navigation.policies', requiresAuth: true },\n      { route: '/claims', icon: 'assignment', labelKey: 'navigation.claims', requiresAuth: true },\n      { route: '/profile', icon: 'person', labelKey: 'navigation.profile', requiresAuth: true },\n      { route: '/admin', icon: 'admin_panel_settings', labelKey: 'navigation.admin', requiresAuth: true }\n    ];\n  }\n\n  // Check if user can access admin routes\n  canAccessAdmin(): boolean {\n    return this.authService.isAdmin;\n  }\n\n  // Check if current route is active\n  isRouteActive(route: string): boolean {\n    return this.router.url.startsWith(route);\n  }\n\n  // Format user display name\n  getUserDisplayName(): string {\n    if (!this.currentUser) return '';\n    \n    if (this.currentLanguage === 'th' && this.currentUser.firstNameThai && this.currentUser.lastNameThai) {\n      return `${this.currentUser.firstNameThai} ${this.currentUser.lastNameThai}`;\n    }\n    \n    return `${this.currentUser.firstName} ${this.currentUser.lastName}`;\n  }\n\n  // Get user role display\n  getUserRoleDisplay(): string {\n    if (!this.currentUser) return '';\n    \n    return this.translationService.instant(`user.role.${this.currentUser.role}`);\n  }\n}","<!-- Main Application Layout -->\n<div class=\"app-container\" [class.mobile]=\"isMobile\">\n  \n  <!-- Top Navigation Bar -->\n  <mat-toolbar class=\"app-toolbar\" color=\"primary\" *ngIf=\"isAuthenticated\">\n    \n    <!-- Menu Toggle Button -->\n    <button mat-icon-button \n            class=\"menu-toggle-btn\"\n            (click)=\"toggleSidenav()\"\n            [attr.aria-label]=\"translationService.instant('common.menu')\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <!-- App Logo and Title -->\n    <div class=\"app-title\" (click)=\"navigateTo('/dashboard')\">\n      <mat-icon class=\"app-logo\">directions_car</mat-icon>\n      <span class=\"app-name\">{{ translationService.instant('common.appName') }}</span>\n    </div>\n\n    <!-- Spacer -->\n    <span class=\"spacer\"></span>\n\n    <!-- Loading Indicator -->\n    <mat-spinner class=\"loading-indicator\" \n                 diameter=\"24\" \n                 strokeWidth=\"2\" \n                 *ngIf=\"isLoading\"></mat-spinner>\n\n    <!-- Notifications -->\n    <button mat-icon-button \n            class=\"notification-btn\"\n            (click)=\"navigateTo('/notifications')\"\n            [attr.aria-label]=\"translationService.instant('navigation.notifications')\">\n      <mat-icon [matBadge]=\"unreadNotifications\" \n                [matBadgeHidden]=\"unreadNotifications === 0\"\n                matBadgeColor=\"warn\">\n        notifications\n      </mat-icon>\n    </button>\n\n    <!-- Language Toggle -->\n    <button mat-icon-button \n            class=\"language-btn\"\n            (click)=\"toggleLanguage()\"\n            [attr.aria-label]=\"translationService.instant('common.changeLanguage')\">\n      <mat-icon>translate</mat-icon>\n      <span class=\"language-indicator\">{{ currentLanguage.toUpperCase() }}</span>\n    </button>\n\n    <!-- User Menu -->\n    <button mat-icon-button \n            [matMenuTriggerFor]=\"userMenu\"\n            class=\"user-menu-btn\"\n            [attr.aria-label]=\"translationService.instant('user.userMenu')\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n\n    <!-- User Menu Dropdown -->\n    <mat-menu #userMenu=\"matMenu\" class=\"user-menu\">\n      <div class=\"user-info\">\n        <div class=\"user-name\">{{ getUserDisplayName() }}</div>\n        <div class=\"user-role\">{{ getUserRoleDisplay() }}</div>\n        <div class=\"user-email\">{{ currentUser?.email }}</div>\n      </div>\n      <mat-divider></mat-divider>\n      <button mat-menu-item (click)=\"navigateTo('/profile')\">\n        <mat-icon>person</mat-icon>\n        <span>{{ translationService.instant('navigation.profile') }}</span>\n      </button>\n      <button mat-menu-item (click)=\"navigateTo('/settings')\">\n        <mat-icon>settings</mat-icon>\n        <span>{{ translationService.instant('navigation.settings') }}</span>\n      </button>\n      <mat-divider></mat-divider>\n      <button mat-menu-item (click)=\"logout()\" class=\"logout-btn\">\n        <mat-icon>exit_to_app</mat-icon>\n        <span>{{ translationService.instant('auth.logout') }}</span>\n      </button>\n    </mat-menu>\n\n  </mat-toolbar>\n\n  <!-- Main Content Area with Sidenav -->\n  <mat-sidenav-container class=\"app-sidenav-container\" \n                         [hasBackdrop]=\"isMobile\"\n                         *ngIf=\"isAuthenticated\">\n    \n    <!-- Side Navigation -->\n    <mat-sidenav class=\"app-sidenav\"\n                 [mode]=\"isMobile ? 'over' : 'side'\"\n                 [opened]=\"sidenavOpened\"\n                 [fixedInViewport]=\"true\"\n                 [fixedTopGap]=\"isMobile ? 0 : 64\">\n      \n      <!-- Navigation Menu -->\n      <mat-nav-list class=\"navigation-list\">\n        \n        <!-- Navigation Items -->\n        <ng-container *ngFor=\"let item of getNavigationItems()\">\n          <mat-list-item class=\"nav-item\"\n                         [class.active]=\"isRouteActive(item.route)\"\n                         (click)=\"navigateTo(item.route)\"\n                         *ngIf=\"!item.requiresAuth || isAuthenticated\">\n            <mat-icon matListIcon>{{ item.icon }}</mat-icon>\n            <span matLine>{{ translationService.instant(item.labelKey) }}</span>\n          </mat-list-item>\n        </ng-container>\n\n        <!-- Admin Section -->\n        <ng-container *ngIf=\"canAccessAdmin()\">\n          <mat-divider></mat-divider>\n          <h3 matSubheader class=\"section-header\">\n            {{ translationService.instant('navigation.admin') }}\n          </h3>\n          <mat-list-item class=\"nav-item admin-item\"\n                         [class.active]=\"isRouteActive('/admin')\"\n                         (click)=\"navigateTo('/admin')\">\n            <mat-icon matListIcon>admin_panel_settings</mat-icon>\n            <span matLine>{{ translationService.instant('navigation.admin') }}</span>\n          </mat-list-item>\n        </ng-container>\n\n      </mat-nav-list>\n\n      <!-- Footer in Sidenav -->\n      <div class=\"sidenav-footer\">\n        <div class=\"app-version\">\n          <small>v1.0.0</small>\n        </div>\n      </div>\n\n    </mat-sidenav>\n\n    <!-- Main Content -->\n    <mat-sidenav-content class=\"main-content\">\n      \n      <!-- Global Loading Overlay -->\n      <div class=\"global-loading-overlay\" *ngIf=\"isLoading\">\n        <div class=\"loading-content\">\n          <mat-spinner diameter=\"48\"></mat-spinner>\n          <p class=\"loading-text\">{{ translationService.instant('common.loading') }}</p>\n        </div>\n      </div>\n\n      <!-- Router Outlet for Page Content -->\n      <div class=\"page-content\">\n        <router-outlet></router-outlet>\n      </div>\n\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n\n  <!-- Login Layout (when not authenticated) -->\n  <div class=\"login-layout\" *ngIf=\"!isAuthenticated\">\n    <router-outlet></router-outlet>\n  </div>\n\n</div>\n\n<!-- PWA Update Notification -->\n<div class=\"pwa-update-notification\" *ngIf=\"false\">\n  <mat-card class=\"update-card\">\n    <mat-card-content>\n      <div class=\"update-message\">\n        <mat-icon>system_update</mat-icon>\n        <span>{{ translationService.instant('pwa.updateAvailable') }}</span>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\">\n        {{ translationService.instant('pwa.reload') }}\n      </button>\n      <button mat-button>\n        {{ translationService.instant('pwa.later') }}\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeTh from '@angular/common/locales/th';\n\n// Angular Material Modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\n\n// NGX Mask for input formatting\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n\n// App Components and Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Core Services and Interceptors\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\n\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n\n// Register locales for i18n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeTh, 'th');\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    \n    // Angular Material Modules\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatRippleModule,\n    MatDividerModule,\n    \n    // NGX Mask Directives\n    NgxMaskDirective,\n    NgxMaskPipe,\n    \n    // App Modules\n    SharedModule\n  ],\n  providers: [\n    // NGX Mask Provider\n    provideNgxMask(),\n    \n    // Locale provider - will be set dynamically based on user preference\n    {\n      provide: LOCALE_ID,\n      useValue: 'th-TH' // Default to Thai locale\n    },\n    // HTTP Interceptors\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor() {\n    // Set default locale to Thai\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = 'th';\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkAuth(state.url);\n  }\n\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkAuth(state.url);\n  }\n\n  private checkAuth(url: string): Observable<boolean> {\n    return this.authService.currentUser$.pipe(\n      take(1),\n      map(user => {\n        if (user) {\n          return true;\n        } else {\n          // Store the attempted URL for redirecting after login\n          this.router.navigate(['/auth/login'], { \n            queryParams: { returnUrl: url }\n          });\n          return false;\n        }\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkRole(route);\n  }\n\n  private checkRole(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.authService.currentUser$.pipe(\n      take(1),\n      map(user => {\n        if (!user) {\n          this.router.navigate(['/auth/login']);\n          return false;\n        }\n\n        const requiredRoles = route.data['roles'] as string[];\n        \n        if (!requiredRoles || requiredRoles.length === 0) {\n          return true; // No role requirement\n        }\n\n        const hasRequiredRole = this.authService.canAccessRoute(requiredRoles);\n        \n        if (!hasRequiredRole) {\n          this.notificationService.showError(\n            'คุณไม่มีสิทธิ์ในการเข้าถึงหน้านี้ / You don\\'t have permission to access this page'\n          );\n          this.router.navigate(['/dashboard']);\n          return false;\n        }\n\n        return true;\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject, EMPTY } from 'rxjs';\nimport { catchError, switchMap, filter, take, finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject = new BehaviorSubject<any>(null);\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Skip token attachment for authentication endpoints\n    if (this.isAuthEndpoint(req.url)) {\n      return next.handle(req);\n    }\n\n    const token = this.authService.getToken();\n    \n    // Add auth header if token exists\n    if (token) {\n      req = this.addTokenToRequest(req, token);\n    }\n\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        // Handle 401 Unauthorized errors\n        if (error.status === 401 && token && !this.isAuthEndpoint(req.url)) {\n          return this.handle401Error(req, next);\n        }\n\n        // Handle other errors\n        return throwError(() => error);\n      })\n    );\n  }\n\n  private handle401Error(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      const refreshToken = this.authService.getRefreshToken();\n      \n      if (refreshToken) {\n        return this.authService.refreshToken(refreshToken).pipe(\n          switchMap((response) => {\n            this.isRefreshing = false;\n            this.refreshTokenSubject.next(response.token);\n            \n            // Retry the failed request with new token\n            return next.handle(this.addTokenToRequest(req, response.token));\n          }),\n          catchError((error) => {\n            this.isRefreshing = false;\n            this.authService.logout();\n            this.router.navigate(['/auth/login']);\n            return throwError(() => error);\n          }),\n          finalize(() => {\n            this.isRefreshing = false;\n          })\n        );\n      } else {\n        // No refresh token available\n        this.isRefreshing = false;\n        this.authService.logout();\n        this.router.navigate(['/auth/login']);\n        return EMPTY;\n      }\n    } else {\n      // Token refresh is already in progress\n      return this.refreshTokenSubject.pipe(\n        filter(token => token !== null),\n        take(1),\n        switchMap(token => next.handle(this.addTokenToRequest(req, token)))\n      );\n    }\n  }\n\n  private addTokenToRequest(req: HttpRequest<any>, token: string): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n\n  private isAuthEndpoint(url: string): boolean {\n    const authEndpoints = [\n      '/auth/login',\n      '/auth/register',\n      '/auth/refresh-token',\n      '/auth/forgot-password',\n      '/auth/reset-password',\n      '/auth/verify-email'\n    ];\n\n    return authEndpoints.some(endpoint => url.includes(endpoint));\n  }\n}","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { NotificationService } from '../services/notification.service';\nimport { TranslationService } from '../services/translation.service';\nimport { environment } from '../../../environments/environment';\nimport { AppError, ErrorCode } from '../models/common.model';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  \n  constructor(private injector: Injector) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      // Retry failed requests (except for certain error types)\n      retry({\n        count: this.shouldRetry(req) ? environment.api.retryAttempts : 0,\n        delay: (error: HttpErrorResponse, retryCount: number) => {\n          // Exponential backoff\n          return new Promise(resolve => {\n            setTimeout(resolve, environment.api.retryDelay * Math.pow(2, retryCount - 1));\n          });\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        const appError = this.createAppError(error, req);\n        \n        // Log error in development\n        if (!environment.production) {\n          console.error('HTTP Error:', appError);\n        }\n\n        // Show user-friendly error message\n        this.handleUserNotification(appError);\n\n        return throwError(() => appError);\n      })\n    );\n  }\n\n  private shouldRetry(req: HttpRequest<any>): boolean {\n    // Don't retry for certain methods and endpoints\n    const nonRetryableMethods = ['POST', 'PUT', 'DELETE'];\n    const nonRetryableEndpoints = ['/auth/login', '/auth/register'];\n\n    return !nonRetryableMethods.includes(req.method.toUpperCase()) &&\n           !nonRetryableEndpoints.some(endpoint => req.url.includes(endpoint));\n  }\n\n  private createAppError(error: HttpErrorResponse, req: HttpRequest<any>): AppError {\n    let appError: AppError = {\n      code: ErrorCode.SERVER_ERROR,\n      message: 'An unexpected error occurred',\n      messageThai: 'เกิดข้อผิดพลาดที่ไม่คาดคิด',\n      timestamp: new Date(),\n      path: req.url,\n      method: req.method,\n      statusCode: error.status\n    };\n\n    if (error.error && typeof error.error === 'object') {\n      // Server returned structured error response\n      appError = {\n        ...appError,\n        code: error.error.code || this.getErrorCodeFromStatus(error.status),\n        message: error.error.message || appError.message,\n        messageThai: error.error.messageThai || appError.messageThai,\n        details: error.error.errors || error.error.details\n      };\n    } else {\n      // Handle different error types\n      switch (error.status) {\n        case 0:\n          appError.code = ErrorCode.NETWORK_ERROR;\n          appError.message = 'Network connection error';\n          appError.messageThai = 'เกิดข้อผิดพลาดในการเชื่อมต่อเครือข่าย';\n          break;\n        case 400:\n          appError.code = ErrorCode.VALIDATION_ERROR;\n          appError.message = 'Invalid request data';\n          appError.messageThai = 'ข้อมูลที่ส่งมาไม่ถูกต้อง';\n          break;\n        case 401:\n          appError.code = ErrorCode.UNAUTHORIZED;\n          appError.message = 'Authentication required';\n          appError.messageThai = 'จำเป็นต้องเข้าสู่ระบบ';\n          break;\n        case 403:\n          appError.code = ErrorCode.FORBIDDEN;\n          appError.message = 'Access denied';\n          appError.messageThai = 'ไม่มีสิทธิ์ในการเข้าถึง';\n          break;\n        case 404:\n          appError.code = ErrorCode.NOT_FOUND;\n          appError.message = 'Resource not found';\n          appError.messageThai = 'ไม่พบข้อมูลที่ต้องการ';\n          break;\n        case 409:\n          appError.code = ErrorCode.CONFLICT;\n          appError.message = 'Resource conflict';\n          appError.messageThai = 'ข้อมูลขัดแย้ง';\n          break;\n        case 422:\n          appError.code = ErrorCode.BUSINESS_RULE_VIOLATION;\n          appError.message = 'Business rule violation';\n          appError.messageThai = 'ข้อมูลไม่เป็นไปตามกฎเกณฑ์ทางธุรกิจ';\n          break;\n        case 408:\n        case 504:\n          appError.code = ErrorCode.TIMEOUT_ERROR;\n          appError.message = 'Request timeout';\n          appError.messageThai = 'การร้องขอหมดเวลา';\n          break;\n        default:\n          if (error.status >= 500) {\n            appError.code = ErrorCode.SERVER_ERROR;\n            appError.message = 'Server error';\n            appError.messageThai = 'เกิดข้อผิดพลาดที่เซิร์ฟเวอร์';\n          }\n      }\n    }\n\n    return appError;\n  }\n\n  private getErrorCodeFromStatus(status: number): ErrorCode {\n    switch (status) {\n      case 400: return ErrorCode.VALIDATION_ERROR;\n      case 401: return ErrorCode.UNAUTHORIZED;\n      case 403: return ErrorCode.FORBIDDEN;\n      case 404: return ErrorCode.NOT_FOUND;\n      case 409: return ErrorCode.CONFLICT;\n      case 422: return ErrorCode.BUSINESS_RULE_VIOLATION;\n      case 408:\n      case 504: return ErrorCode.TIMEOUT_ERROR;\n      default: \n        return status >= 500 ? ErrorCode.SERVER_ERROR : ErrorCode.VALIDATION_ERROR;\n    }\n  }\n\n  private handleUserNotification(error: AppError): void {\n    // Don't show notifications for certain error types\n    const silentErrors = [ErrorCode.UNAUTHORIZED];\n    \n    if (silentErrors.includes(error.code as ErrorCode)) {\n      return;\n    }\n\n    try {\n      // Get services lazily to avoid circular dependency\n      const notificationService = this.injector.get(NotificationService);\n      const translationService = this.injector.get(TranslationService);\n\n      // Show different notification types based on error severity\n      const isCurrentLanguageThai = translationService.currentLanguage === 'th';\n      const message = isCurrentLanguageThai && error.messageThai ? error.messageThai : error.message;\n\n      switch (error.code) {\n        case ErrorCode.NETWORK_ERROR:\n        case ErrorCode.TIMEOUT_ERROR:\n          notificationService.showError(message, {\n            duration: 5000,\n            action: 'Retry'\n          });\n          break;\n        case ErrorCode.VALIDATION_ERROR:\n          notificationService.showWarning(message, {\n            duration: 4000\n          });\n          break;\n        case ErrorCode.FORBIDDEN:\n        case ErrorCode.NOT_FOUND:\n          notificationService.showInfo(message, {\n            duration: 3000\n          });\n          break;\n        default:\n          notificationService.showError(message, {\n            duration: 4000\n          });\n      }\n    } catch (injectionError) {\n      // Fallback if services are not available\n      console.error('Error notification failed:', error.message, injectionError);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoadingService } from '../services/loading.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private loadingService: LoadingService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Skip loading indicator for certain requests\n    if (this.shouldSkipLoading(req)) {\n      return next.handle(req);\n    }\n\n    // Generate unique loading key based on request\n    const loadingKey = this.generateLoadingKey(req);\n    \n    // Start loading\n    this.loadingService.setLoading(loadingKey, true);\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        // Stop loading when request completes (success or error)\n        this.loadingService.setLoading(loadingKey, false);\n      })\n    );\n  }\n\n  private shouldSkipLoading(req: HttpRequest<any>): boolean {\n    // Skip loading for certain requests to avoid UI flickering\n    const skipLoadingEndpoints = [\n      '/auth/refresh-token',\n      '/notifications/count',\n      '/heartbeat',\n      '/health'\n    ];\n\n    // Skip if request has custom header to disable loading\n    if (req.headers.has('X-Skip-Loading')) {\n      return true;\n    }\n\n    // Skip for specific endpoints\n    return skipLoadingEndpoints.some(endpoint => req.url.includes(endpoint));\n  }\n\n  private generateLoadingKey(req: HttpRequest<any>): string {\n    // Create a unique key for the request\n    // This allows tracking multiple concurrent requests independently\n    const method = req.method;\n    const url = req.url.replace(/\\/\\d+/g, '/:id'); // Replace IDs with placeholder\n    \n    return `${method}:${url}`;\n  }\n}","// Common API Response interfaces\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message: string;\n  messageThai?: string;\n  errors?: ValidationError[];\n  timestamp: Date;\n  path: string;\n  status: number;\n}\n\nexport interface PaginatedResponse<T = any> {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  size: number;\n  number: number;\n  first: boolean;\n  last: boolean;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  messageThai?: string;\n  code: string;\n  rejectedValue?: any;\n}\n\n// Pagination and Sorting\nexport interface PageRequest {\n  page: number;\n  size: number;\n  sort?: SortRequest[];\n}\n\nexport interface SortRequest {\n  property: string;\n  direction: 'ASC' | 'DESC';\n}\n\n// Filter interfaces\nexport interface FilterCriteria {\n  field: string;\n  operator: FilterOperator;\n  value: any;\n  values?: any[]; // For IN, NOT_IN operators\n}\n\nexport enum FilterOperator {\n  EQUALS = 'EQUALS',\n  NOT_EQUALS = 'NOT_EQUALS',\n  GREATER_THAN = 'GREATER_THAN',\n  GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL',\n  LESS_THAN = 'LESS_THAN',\n  LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL',\n  LIKE = 'LIKE',\n  NOT_LIKE = 'NOT_LIKE',\n  IN = 'IN',\n  NOT_IN = 'NOT_IN',\n  IS_NULL = 'IS_NULL',\n  IS_NOT_NULL = 'IS_NOT_NULL',\n  BETWEEN = 'BETWEEN',\n  STARTS_WITH = 'STARTS_WITH',\n  ENDS_WITH = 'ENDS_WITH',\n  CONTAINS = 'CONTAINS'\n}\n\n// Search and filter request\nexport interface SearchRequest {\n  query?: string;\n  filters?: FilterCriteria[];\n  pagination: PageRequest;\n}\n\n// File upload interfaces\nexport interface FileUploadResponse {\n  id: string;\n  fileName: string;\n  originalFileName: string;\n  mimeType: string;\n  fileSize: number;\n  fileUrl: string;\n  thumbnailUrl?: string;\n  uploadedAt: Date;\n  uploadedBy: string;\n}\n\nexport interface FileUploadRequest {\n  file: File;\n  category?: string;\n  description?: string;\n  isPublic?: boolean;\n}\n\n// Document Status enum - shared between models\nexport enum DocumentStatus {\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  EXPIRED = 'EXPIRED'\n}\n\n// Notification interfaces\nexport interface Notification {\n  id: string;\n  userId: string;\n  type: NotificationType;\n  title: string;\n  titleThai?: string;\n  message: string;\n  messageThai?: string;\n  isRead: boolean;\n  priority: NotificationPriority;\n  relatedEntityId?: string;\n  relatedEntityType?: string;\n  actionUrl?: string;\n  createdAt: Date;\n  readAt?: Date;\n  expiresAt?: Date;\n}\n\nexport enum NotificationType {\n  POLICY_REMINDER = 'POLICY_REMINDER',\n  POLICY_RENEWAL = 'POLICY_RENEWAL',\n  POLICY_EXPIRY = 'POLICY_EXPIRY',\n  CLAIM_UPDATE = 'CLAIM_UPDATE',\n  CLAIM_APPROVED = 'CLAIM_APPROVED',\n  CLAIM_REJECTED = 'CLAIM_REJECTED',\n  PAYMENT_DUE = 'PAYMENT_DUE',\n  PAYMENT_RECEIVED = 'PAYMENT_RECEIVED',\n  SYSTEM_MAINTENANCE = 'SYSTEM_MAINTENANCE',\n  PROMOTIONAL = 'PROMOTIONAL',\n  ACCOUNT_UPDATE = 'ACCOUNT_UPDATE'\n}\n\nexport enum NotificationPriority {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  URGENT = 'URGENT'\n}\n\n// Geographic data for Thailand\nexport interface Province {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  region: ThaiRegion;\n  districts: District[];\n}\n\nexport interface District {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  provinceId: string;\n  subdistricts: Subdistrict[];\n}\n\nexport interface Subdistrict {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  districtId: string;\n  postalCodes: string[];\n}\n\nexport enum ThaiRegion {\n  NORTHERN = 'NORTHERN',\n  NORTHEASTERN = 'NORTHEASTERN', \n  CENTRAL = 'CENTRAL',\n  EASTERN = 'EASTERN',\n  WESTERN = 'WESTERN',\n  SOUTHERN = 'SOUTHERN'\n}\n\n// Audit trail\nexport interface AuditLog {\n  id: string;\n  entityType: string;\n  entityId: string;\n  action: AuditAction;\n  userId: string;\n  username: string;\n  userRole: string;\n  oldValue?: any;\n  newValue?: any;\n  timestamp: Date;\n  ipAddress: string;\n  userAgent: string;\n  sessionId: string;\n}\n\nexport enum AuditAction {\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  VIEW = 'VIEW',\n  EXPORT = 'EXPORT',\n  APPROVE = 'APPROVE',\n  REJECT = 'REJECT'\n}\n\n// System configuration\nexport interface SystemConfig {\n  key: string;\n  value: string;\n  description?: string;\n  category: string;\n  isPublic: boolean;\n  isEditable: boolean;\n  dataType: ConfigDataType;\n  validationRules?: ValidationRule[];\n  updatedAt: Date;\n  updatedBy: string;\n}\n\nexport interface ValidationRule {\n  type: ValidationType;\n  value?: any;\n  message: string;\n}\n\nexport enum ConfigDataType {\n  STRING = 'STRING',\n  INTEGER = 'INTEGER',\n  DECIMAL = 'DECIMAL',\n  BOOLEAN = 'BOOLEAN',\n  DATE = 'DATE',\n  JSON = 'JSON'\n}\n\nexport enum ValidationType {\n  REQUIRED = 'REQUIRED',\n  MIN_LENGTH = 'MIN_LENGTH',\n  MAX_LENGTH = 'MAX_LENGTH',\n  MIN_VALUE = 'MIN_VALUE',\n  MAX_VALUE = 'MAX_VALUE',\n  PATTERN = 'PATTERN',\n  EMAIL = 'EMAIL',\n  URL = 'URL'\n}\n\n// Dashboard and analytics\nexport interface DashboardStats {\n  totalPolicies: number;\n  activePolicies: number;\n  expiringSoon: number; // Next 30 days\n  totalClaims: number;\n  pendingClaims: number;\n  settledClaims: number;\n  totalPremiumCollected: number;\n  totalClaimsPaid: number;\n  customerCount: number;\n  newCustomersThisMonth: number;\n}\n\nexport interface ChartData {\n  labels: string[];\n  datasets: ChartDataset[];\n}\n\nexport interface ChartDataset {\n  label: string;\n  data: number[];\n  backgroundColor?: string | string[];\n  borderColor?: string | string[];\n  borderWidth?: number;\n}\n\n// Thai specific utilities\nexport interface ThaiNationalIdInfo {\n  isValid: boolean;\n  province?: string;\n  district?: string;\n  birthYear?: number;\n  gender?: 'MALE' | 'FEMALE';\n}\n\nexport interface ThaiPhoneNumber {\n  number: string;\n  isValid: boolean;\n  operator?: string;\n  type: 'MOBILE' | 'LANDLINE';\n}\n\n// Error handling\nexport interface AppError {\n  code: string;\n  message: string;\n  messageThai?: string;\n  details?: any;\n  timestamp: Date;\n  path?: string;\n  method?: string;\n  statusCode?: number;\n}\n\nexport enum ErrorCode {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  FORBIDDEN = 'FORBIDDEN',\n  NOT_FOUND = 'NOT_FOUND',\n  CONFLICT = 'CONFLICT',\n  SERVER_ERROR = 'SERVER_ERROR',\n  NETWORK_ERROR = 'NETWORK_ERROR',\n  TIMEOUT_ERROR = 'TIMEOUT_ERROR',\n  BUSINESS_RULE_VIOLATION = 'BUSINESS_RULE_VIOLATION'\n}\n\n// Application state\nexport interface LoadingState {\n  [key: string]: boolean;\n}\n\nexport interface ErrorState {\n  [key: string]: AppError | null;\n}\n\n// Language support\nexport interface TranslationKey {\n  en: string;\n  th: string;\n}\n\nexport interface LanguageOption {\n  code: 'th' | 'en';\n  name: string;\n  nativeName: string;\n  flag: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError, timer } from 'rxjs';\nimport { map, tap, catchError, switchMap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\nimport { \n  User, \n  LoginRequest, \n  LoginResponse, \n  RegisterRequest, \n  ResetPasswordRequest,\n  ChangePasswordRequest,\n  RefreshTokenRequest,\n  ApiResponse\n} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly apiUrl = `${environment.apiUrl}/auth`;\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\n  private tokenExpirationTimer?: any;\n\n  public currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) {\n    // Initialize user from localStorage if available\n    this.initializeFromStorage();\n  }\n\n  // Public getters\n  get currentUser(): User | null {\n    return this.currentUserSubject.value;\n  }\n\n  get isAuthenticated(): boolean {\n    return !!this.getToken() && !!this.currentUser;\n  }\n\n  get isAdmin(): boolean {\n    return this.currentUser?.role === 'ADMIN' || this.currentUser?.role === 'SUPER_ADMIN';\n  }\n\n  get userRole(): string | null {\n    return this.currentUser?.role || null;\n  }\n\n  // Authentication methods\n  login(credentials: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<ApiResponse<LoginResponse>>(`${this.apiUrl}/login`, credentials)\n      .pipe(\n        map(response => {\n          if (!response.success || !response.data) {\n            throw new Error(response.message || 'Login failed');\n          }\n          return response.data;\n        }),\n        tap(loginResponse => {\n          this.setSession(loginResponse);\n        }),\n        catchError(error => {\n          console.error('Login error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  register(userData: RegisterRequest): Observable<User> {\n    return this.http.post<ApiResponse<User>>(`${this.apiUrl}/register`, userData)\n      .pipe(\n        map(response => {\n          if (!response.success || !response.data) {\n            throw new Error(response.message || 'Registration failed');\n          }\n          return response.data;\n        }),\n        catchError(error => {\n          console.error('Registration error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  logout(): void {\n    this.clearSession();\n    this.currentUserSubject.next(null);\n    this.clearTokenExpirationTimer();\n    this.router.navigate(['/auth/login']);\n  }\n\n  refreshToken(refreshToken: string): Observable<LoginResponse> {\n    const request: RefreshTokenRequest = { refreshToken };\n    \n    return this.http.post<ApiResponse<LoginResponse>>(`${this.apiUrl}/refresh-token`, request)\n      .pipe(\n        map(response => {\n          if (!response.success || !response.data) {\n            throw new Error(response.message || 'Token refresh failed');\n          }\n          return response.data;\n        }),\n        tap(loginResponse => {\n          this.setSession(loginResponse);\n        }),\n        catchError(error => {\n          console.error('Token refresh error:', error);\n          this.logout();\n          return throwError(() => error);\n        })\n      );\n  }\n\n  forgotPassword(email: string): Observable<void> {\n    const request: ResetPasswordRequest = { email };\n    \n    return this.http.post<ApiResponse<void>>(`${this.apiUrl}/forgot-password`, request)\n      .pipe(\n        map(response => {\n          if (!response.success) {\n            throw new Error(response.message || 'Password reset request failed');\n          }\n        }),\n        catchError(error => {\n          console.error('Forgot password error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  resetPassword(token: string, newPassword: string): Observable<void> {\n    return this.http.post<ApiResponse<void>>(`${this.apiUrl}/reset-password`, {\n      token,\n      newPassword\n    })\n      .pipe(\n        map(response => {\n          if (!response.success) {\n            throw new Error(response.message || 'Password reset failed');\n          }\n        }),\n        catchError(error => {\n          console.error('Reset password error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  changePassword(request: ChangePasswordRequest): Observable<void> {\n    return this.http.post<ApiResponse<void>>(`${this.apiUrl}/change-password`, request)\n      .pipe(\n        map(response => {\n          if (!response.success) {\n            throw new Error(response.message || 'Password change failed');\n          }\n        }),\n        catchError(error => {\n          console.error('Change password error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  verifyEmail(token: string): Observable<void> {\n    return this.http.post<ApiResponse<void>>(`${this.apiUrl}/verify-email`, { token })\n      .pipe(\n        map(response => {\n          if (!response.success) {\n            throw new Error(response.message || 'Email verification failed');\n          }\n        }),\n        catchError(error => {\n          console.error('Email verification error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  resendVerificationEmail(): Observable<void> {\n    return this.http.post<ApiResponse<void>>(`${this.apiUrl}/resend-verification`, {})\n      .pipe(\n        map(response => {\n          if (!response.success) {\n            throw new Error(response.message || 'Resend verification failed');\n          }\n        }),\n        catchError(error => {\n          console.error('Resend verification error:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  // Token management\n  getToken(): string | null {\n    return localStorage.getItem(environment.storage.tokenKey);\n  }\n\n  getRefreshToken(): string | null {\n    return localStorage.getItem(`${environment.storage.tokenKey}_refresh`);\n  }\n\n  // Session management\n  private setSession(loginResponse: LoginResponse): void {\n    const { user, token, refreshToken, expiresAt } = loginResponse;\n    \n    // Store tokens\n    localStorage.setItem(environment.storage.tokenKey, token);\n    localStorage.setItem(`${environment.storage.tokenKey}_refresh`, refreshToken);\n    localStorage.setItem(environment.storage.userKey, JSON.stringify(user));\n    localStorage.setItem(`${environment.storage.tokenKey}_expires`, expiresAt.toString());\n    \n    // Update current user\n    this.currentUserSubject.next(user);\n    \n    // Set token expiration timer\n    this.setTokenExpirationTimer(expiresAt);\n  }\n\n  private clearSession(): void {\n    localStorage.removeItem(environment.storage.tokenKey);\n    localStorage.removeItem(`${environment.storage.tokenKey}_refresh`);\n    localStorage.removeItem(environment.storage.userKey);\n    localStorage.removeItem(`${environment.storage.tokenKey}_expires`);\n  }\n\n  private initializeFromStorage(): void {\n    try {\n      const userJson = localStorage.getItem(environment.storage.userKey);\n      const token = this.getToken();\n      const expiresAtStr = localStorage.getItem(`${environment.storage.tokenKey}_expires`);\n\n      if (userJson && token && expiresAtStr) {\n        const user = JSON.parse(userJson) as User;\n        const expiresAt = new Date(expiresAtStr);\n\n        // Check if token is still valid\n        if (expiresAt > new Date()) {\n          this.currentUserSubject.next(user);\n          this.setTokenExpirationTimer(expiresAt);\n        } else {\n          // Token expired, try to refresh\n          const refreshToken = this.getRefreshToken();\n          if (refreshToken) {\n            this.refreshToken(refreshToken).subscribe({\n              error: () => this.clearSession()\n            });\n          } else {\n            this.clearSession();\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error initializing auth from storage:', error);\n      this.clearSession();\n    }\n  }\n\n  private setTokenExpirationTimer(expirationDate: Date): void {\n    this.clearTokenExpirationTimer();\n    \n    const expiresInMs = expirationDate.getTime() - new Date().getTime();\n    \n    if (expiresInMs > 0) {\n      // Set timer to refresh token 5 minutes before expiration\n      const refreshTime = Math.max(expiresInMs - (5 * 60 * 1000), 60000); // At least 1 minute\n      \n      this.tokenExpirationTimer = timer(refreshTime).subscribe(() => {\n        const refreshToken = this.getRefreshToken();\n        if (refreshToken) {\n          this.refreshToken(refreshToken).subscribe({\n            error: () => this.logout()\n          });\n        } else {\n          this.logout();\n        }\n      });\n    }\n  }\n\n  private clearTokenExpirationTimer(): void {\n    if (this.tokenExpirationTimer) {\n      this.tokenExpirationTimer.unsubscribe();\n      this.tokenExpirationTimer = undefined;\n    }\n  }\n\n  // Utility methods\n  hasPermission(permission: string): boolean {\n    if (!this.currentUser) {\n      return false;\n    }\n\n    // Super admin has all permissions\n    if (this.currentUser.role === 'SUPER_ADMIN') {\n      return true;\n    }\n\n    // Add specific permission logic based on roles\n    switch (permission) {\n      case 'VIEW_ALL_POLICIES':\n      case 'VIEW_ALL_CLAIMS':\n      case 'MANAGE_USERS':\n        return this.currentUser.role === 'ADMIN';\n      \n      case 'CREATE_POLICY':\n      case 'VIEW_OWN_POLICIES':\n      case 'CREATE_CLAIM':\n      case 'VIEW_OWN_CLAIMS':\n        return true; // All authenticated users\n      \n      default:\n        return false;\n    }\n  }\n\n  canAccessRoute(requiredRoles: string[]): boolean {\n    if (!this.currentUser) {\n      return false;\n    }\n\n    return requiredRoles.includes(this.currentUser.role);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private loadingSubject = new BehaviorSubject<{[key: string]: boolean}>({});\n  \n  /**\n   * Observable that emits the current loading state\n   */\n  public loading$ = this.loadingSubject.asObservable();\n\n  /**\n   * Observable that emits true if any loading operation is active\n   */\n  public isLoading$ = this.loading$.pipe(\n    map(loadingStates => Object.values(loadingStates).some(isLoading => isLoading))\n  );\n\n  /**\n   * Set loading state for a specific key\n   * @param key - Unique identifier for the loading operation\n   * @param isLoading - Loading state\n   */\n  setLoading(key: string, isLoading: boolean): void {\n    const currentState = this.loadingSubject.value;\n    \n    if (isLoading) {\n      this.loadingSubject.next({\n        ...currentState,\n        [key]: true\n      });\n    } else {\n      const { [key]: removed, ...newState } = currentState;\n      this.loadingSubject.next(newState);\n    }\n  }\n\n  /**\n   * Get loading state for a specific key\n   * @param key - Unique identifier for the loading operation\n   */\n  isLoading(key: string): Observable<boolean> {\n    return this.loading$.pipe(\n      map(loadingStates => !!loadingStates[key])\n    );\n  }\n\n  /**\n   * Get current loading state for a specific key (synchronous)\n   * @param key - Unique identifier for the loading operation\n   */\n  isLoadingSync(key: string): boolean {\n    const currentState = this.loadingSubject.value;\n    return !!currentState[key];\n  }\n\n  /**\n   * Clear all loading states\n   */\n  clearAll(): void {\n    this.loadingSubject.next({});\n  }\n\n  /**\n   * Get all currently active loading keys\n   */\n  getActiveLoadingKeys(): string[] {\n    const currentState = this.loadingSubject.value;\n    return Object.keys(currentState).filter(key => currentState[key]);\n  }\n\n  /**\n   * Show loading for a specific operation with automatic cleanup\n   * @param key - Unique identifier for the loading operation\n   * @param operation - Promise or Observable to track\n   */\n  async trackOperation<T>(key: string, operation: Promise<T> | Observable<T>): Promise<T> {\n    this.setLoading(key, true);\n    \n    try {\n      if (operation instanceof Promise) {\n        const result = await operation;\n        return result;\n      } else {\n        // Handle Observable\n        return new Promise((resolve, reject) => {\n          operation.subscribe({\n            next: (value) => resolve(value),\n            error: (error) => reject(error),\n            complete: () => {} // Value should be emitted in next\n          });\n        });\n      }\n    } finally {\n      this.setLoading(key, false);\n    }\n  }\n\n  /**\n   * Show loading with a minimum display time to prevent flickering\n   * @param key - Unique identifier for the loading operation\n   * @param operation - Promise or Observable to track\n   * @param minDuration - Minimum time to show loading (in milliseconds)\n   */\n  async trackOperationWithMinDuration<T>(\n    key: string, \n    operation: Promise<T> | Observable<T>, \n    minDuration: number = 500\n  ): Promise<T> {\n    this.setLoading(key, true);\n    \n    const startTime = Date.now();\n    \n    try {\n      let result: T;\n      \n      if (operation instanceof Promise) {\n        result = await operation;\n      } else {\n        // Handle Observable\n        result = await new Promise((resolve, reject) => {\n          operation.subscribe({\n            next: (value) => resolve(value),\n            error: (error) => reject(error)\n          });\n        });\n      }\n      \n      // Ensure minimum duration\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime < minDuration) {\n        await new Promise(resolve => setTimeout(resolve, minDuration - elapsedTime));\n      }\n      \n      return result;\n    } finally {\n      this.setLoading(key, false);\n    }\n  }\n\n  /**\n   * Show global loading overlay\n   */\n  showGlobalLoading(): void {\n    this.setLoading('GLOBAL', true);\n  }\n\n  /**\n   * Hide global loading overlay\n   */\n  hideGlobalLoading(): void {\n    this.setLoading('GLOBAL', false);\n  }\n\n  /**\n   * Check if global loading is active\n   */\n  isGlobalLoading(): Observable<boolean> {\n    return this.isLoading('GLOBAL');\n  }\n\n  /**\n   * Show page loading\n   */\n  showPageLoading(page: string): void {\n    this.setLoading(`PAGE_${page}`, true);\n  }\n\n  /**\n   * Hide page loading\n   */\n  hidePageLoading(page: string): void {\n    this.setLoading(`PAGE_${page}`, false);\n  }\n\n  /**\n   * Check if specific page is loading\n   */\n  isPageLoading(page: string): Observable<boolean> {\n    return this.isLoading(`PAGE_${page}`);\n  }\n}","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { Notification, ApiResponse, PaginatedResponse, SearchRequest } from '../models/common.model';\n\nexport interface NotificationOptions extends MatSnackBarConfig {\n  type?: 'success' | 'error' | 'warning' | 'info';\n  action?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  private readonly apiUrl = `${environment.apiUrl}/notifications`;\n  private unreadCountSubject = new BehaviorSubject<number>(0);\n  \n  public unreadCount$ = this.unreadCountSubject.asObservable();\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) {\n    // Don't load unread count during initialization to avoid circular dependency\n    // It will be loaded when needed\n  }\n\n  // Toast notifications\n  showSuccess(message: string, options?: NotificationOptions): MatSnackBarRef<SimpleSnackBar> {\n    return this.showNotification(message, 'success', options);\n  }\n\n  showError(message: string, options?: NotificationOptions): MatSnackBarRef<SimpleSnackBar> {\n    return this.showNotification(message, 'error', options);\n  }\n\n  showWarning(message: string, options?: NotificationOptions): MatSnackBarRef<SimpleSnackBar> {\n    return this.showNotification(message, 'warning', options);\n  }\n\n  showInfo(message: string, options?: NotificationOptions): MatSnackBarRef<SimpleSnackBar> {\n    return this.showNotification(message, 'info', options);\n  }\n\n  private showNotification(\n    message: string, \n    type: 'success' | 'error' | 'warning' | 'info', \n    options?: NotificationOptions\n  ): MatSnackBarRef<SimpleSnackBar> {\n    const config: MatSnackBarConfig = {\n      duration: this.getDefaultDuration(type),\n      horizontalPosition: 'right',\n      verticalPosition: 'top',\n      panelClass: [`snackbar-${type}`, 'custom-snackbar'],\n      ...options\n    };\n\n    return this.snackBar.open(message, options?.action || 'ปิด', config);\n  }\n\n  private getDefaultDuration(type: string): number {\n    switch (type) {\n      case 'success': return 3000;\n      case 'error': return 5000;\n      case 'warning': return 4000;\n      case 'info': return 3000;\n      default: return 3000;\n    }\n  }\n\n  // Server-side notifications\n  getNotifications(searchRequest: SearchRequest): Observable<PaginatedResponse<Notification>> {\n    return this.http.post<ApiResponse<PaginatedResponse<Notification>>>(\n      `${this.apiUrl}/search`, \n      searchRequest\n    ).pipe(\n      map(response => {\n        if (!response.success || !response.data) {\n          throw new Error(response.message || 'Failed to load notifications');\n        }\n        return response.data;\n      })\n    );\n  }\n\n  getUnreadNotifications(): Observable<Notification[]> {\n    return this.http.get<ApiResponse<Notification[]>>(`${this.apiUrl}/unread`).pipe(\n      map(response => {\n        if (!response.success || !response.data) {\n          throw new Error(response.message || 'Failed to load unread notifications');\n        }\n        return response.data;\n      })\n    );\n  }\n\n  markAsRead(notificationId: string): Observable<void> {\n    return this.http.patch<ApiResponse<void>>(`${this.apiUrl}/${notificationId}/read`, {}).pipe(\n      map(response => {\n        if (!response.success) {\n          throw new Error(response.message || 'Failed to mark notification as read');\n        }\n      }),\n      tap(() => {\n        // Update unread count\n        this.updateUnreadCount(-1);\n      })\n    );\n  }\n\n  markAllAsRead(): Observable<void> {\n    return this.http.patch<ApiResponse<void>>(`${this.apiUrl}/mark-all-read`, {}).pipe(\n      map(response => {\n        if (!response.success) {\n          throw new Error(response.message || 'Failed to mark all notifications as read');\n        }\n      }),\n      tap(() => {\n        // Reset unread count\n        this.unreadCountSubject.next(0);\n      })\n    );\n  }\n\n  deleteNotification(notificationId: string): Observable<void> {\n    return this.http.delete<ApiResponse<void>>(`${this.apiUrl}/${notificationId}`).pipe(\n      map(response => {\n        if (!response.success) {\n          throw new Error(response.message || 'Failed to delete notification');\n        }\n      })\n    );\n  }\n\n  getUnreadCount(): Observable<number> {\n    return this.http.get<ApiResponse<{ count: number }>>(`${this.apiUrl}/unread-count`).pipe(\n      map(response => {\n        if (!response.success || !response.data) {\n          throw new Error(response.message || 'Failed to load unread count');\n        }\n        return response.data.count;\n      }),\n      tap(count => {\n        this.unreadCountSubject.next(count);\n      })\n    );\n  }\n\n  private loadUnreadCount(): void {\n    this.getUnreadCount().subscribe({\n      error: (error) => {\n        console.error('Failed to load unread notification count:', error);\n      }\n    });\n  }\n\n  private updateUnreadCount(delta: number): void {\n    const currentCount = this.unreadCountSubject.value;\n    const newCount = Math.max(0, currentCount + delta);\n    this.unreadCountSubject.next(newCount);\n  }\n\n  // Utility methods for common notification scenarios\n  showSaveSuccess(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('บันทึกข้อมูลเรียบร้อยแล้ว / Data saved successfully');\n  }\n\n  showDeleteSuccess(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('ลบข้อมูลเรียบร้อยแล้ว / Data deleted successfully');\n  }\n\n  showUpdateSuccess(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('อัปเดตข้อมูลเรียบร้อยแล้ว / Data updated successfully');\n  }\n\n  showValidationError(message?: string): MatSnackBarRef<SimpleSnackBar> {\n    return this.showError(message || 'กรุณาตรวจสอบข้อมูลที่กรอก / Please check the entered data');\n  }\n\n  showNetworkError(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showError('เกิดข้อผิดพลาดในการเชื่อมต่อ / Network connection error', {\n      action: 'ลองใหม่ / Retry',\n      duration: 0 // Don't auto-dismiss\n    });\n  }\n\n  showUnauthorizedError(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showError('กรุณาเข้าสู่ระบบใหม่ / Please login again', {\n      action: 'เข้าสู่ระบบ / Login'\n    });\n  }\n\n  showMaintenanceNotice(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showInfo('ระบบอยู่ในช่วงการบำรุงรักษา / System under maintenance', {\n      duration: 0,\n      action: 'ตกลง / OK'\n    });\n  }\n\n  // Policy-specific notifications\n  showPolicyCreated(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('สร้างกรมธรรม์เรียบร้อยแล้ว / Policy created successfully');\n  }\n\n  showPolicyUpdated(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('อัปเดตกรมธรรม์เรียบร้อยแล้ว / Policy updated successfully');\n  }\n\n  showClaimSubmitted(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('ยื่นเรื่องเคลมเรียบร้อยแล้ว / Claim submitted successfully');\n  }\n\n  showDocumentUploaded(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('อัปโหลดเอกสารเรียบร้อยแล้ว / Document uploaded successfully');\n  }\n\n  showPaymentProcessed(): MatSnackBarRef<SimpleSnackBar> {\n    return this.showSuccess('ดำเนินการชำระเงินเรียบร้อยแล้ว / Payment processed successfully');\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nexport type SupportedLanguage = 'th' | 'en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n  private currentLanguageSubject = new BehaviorSubject<SupportedLanguage>('th');\n  private translations = new Map<SupportedLanguage, any>();\n  private loadingTranslations = new Set<SupportedLanguage>();\n\n  public currentLanguage$ = this.currentLanguageSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.initializeLanguage();\n  }\n\n  get currentLanguage(): SupportedLanguage {\n    return this.currentLanguageSubject.value;\n  }\n\n  /**\n   * Set the current language and load translations if not already loaded\n   */\n  setLanguage(language: SupportedLanguage): Observable<any> {\n    if (language === this.currentLanguage) {\n      return of(this.translations.get(language) || {});\n    }\n\n    return this.loadTranslations(language).pipe(\n      tap(() => {\n        this.currentLanguageSubject.next(language);\n        this.saveLanguagePreference(language);\n        this.updateDocumentLanguage(language);\n      })\n    );\n  }\n\n  /**\n   * Get translation for a key\n   */\n  translate(key: string, params?: { [key: string]: any }): string {\n    const currentTranslations = this.translations.get(this.currentLanguage) || {};\n    let translation = this.getNestedValue(currentTranslations, key);\n\n    if (!translation) {\n      // Fallback to English if Thai translation not found\n      if (this.currentLanguage === 'th') {\n        const englishTranslations = this.translations.get('en') || {};\n        translation = this.getNestedValue(englishTranslations, key);\n      }\n      \n      // If still not found, return the key itself\n      if (!translation) {\n        console.warn(`Translation not found for key: ${key}`);\n        return key;\n      }\n    }\n\n    // Replace parameters in translation\n    if (params && typeof translation === 'string') {\n      Object.keys(params).forEach(param => {\n        const placeholder = new RegExp(`{{\\\\s*${param}\\\\s*}}`, 'g');\n        translation = translation.replace(placeholder, params[param]);\n      });\n    }\n\n    return translation;\n  }\n\n  /**\n   * Get translation as observable (useful for templates)\n   */\n  get(key: string, params?: { [key: string]: any }): Observable<string> {\n    return this.currentLanguage$.pipe(\n      map(() => this.translate(key, params))\n    );\n  }\n\n  /**\n   * Get instant translation (synchronous)\n   */\n  instant(key: string, params?: { [key: string]: any }): string {\n    return this.translate(key, params);\n  }\n\n  /**\n   * Load translations for a specific language\n   */\n  private loadTranslations(language: SupportedLanguage): Observable<any> {\n    // Avoid duplicate loading\n    if (this.loadingTranslations.has(language)) {\n      return new BehaviorSubject(this.translations.get(language) || {}).asObservable();\n    }\n\n    // Return cached translations if available\n    if (this.translations.has(language)) {\n      return of(this.translations.get(language));\n    }\n\n    this.loadingTranslations.add(language);\n\n    return this.http.get(`/assets/i18n/${language}.json`).pipe(\n      tap(translations => {\n        this.translations.set(language, translations);\n        this.loadingTranslations.delete(language);\n      }),\n      catchError(error => {\n        console.error(`Failed to load translations for ${language}:`, error);\n        this.loadingTranslations.delete(language);\n        \n        // Return empty object as fallback\n        const fallbackTranslations = {};\n        this.translations.set(language, fallbackTranslations);\n        return of(fallbackTranslations);\n      })\n    );\n  }\n\n  /**\n   * Initialize language from localStorage or browser preference\n   */\n  private initializeLanguage(): void {\n    const savedLanguage = localStorage.getItem(environment.storage.languageKey);\n    const browserLanguage = this.getBrowserLanguage();\n    const defaultLanguage = environment.defaultLanguage as SupportedLanguage;\n\n    let targetLanguage: SupportedLanguage;\n\n    if (savedLanguage && this.isSupportedLanguage(savedLanguage)) {\n      targetLanguage = savedLanguage as SupportedLanguage;\n    } else if (this.isSupportedLanguage(browserLanguage)) {\n      targetLanguage = browserLanguage as SupportedLanguage;\n    } else {\n      targetLanguage = defaultLanguage;\n    }\n\n    // Load initial translations\n    this.loadTranslations(targetLanguage).subscribe(() => {\n      this.currentLanguageSubject.next(targetLanguage);\n      this.updateDocumentLanguage(targetLanguage);\n    });\n  }\n\n  /**\n   * Get browser language\n   */\n  private getBrowserLanguage(): string {\n    if (typeof navigator !== 'undefined') {\n      return navigator.language?.split('-')[0] || 'en';\n    }\n    return 'en';\n  }\n\n  /**\n   * Check if language is supported\n   */\n  private isSupportedLanguage(language: string): boolean {\n    return environment.supportedLanguages.includes(language);\n  }\n\n  /**\n   * Save language preference to localStorage\n   */\n  private saveLanguagePreference(language: SupportedLanguage): void {\n    localStorage.setItem(environment.storage.languageKey, language);\n  }\n\n  /**\n   * Update document language attribute and direction\n   */\n  private updateDocumentLanguage(language: SupportedLanguage): void {\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = language;\n      // Thai is LTR, but in case we add RTL languages in the future\n      document.documentElement.dir = 'ltr';\n    }\n  }\n\n  /**\n   * Get nested value from object using dot notation\n   */\n  private getNestedValue(obj: any, key: string): any {\n    return key.split('.').reduce((current, prop) => {\n      return current?.[prop];\n    }, obj);\n  }\n\n  /**\n   * Toggle between Thai and English\n   */\n  toggleLanguage(): Observable<any> {\n    const newLanguage: SupportedLanguage = this.currentLanguage === 'th' ? 'en' : 'th';\n    return this.setLanguage(newLanguage);\n  }\n\n  /**\n   * Get all supported languages\n   */\n  getSupportedLanguages(): Array<{ code: SupportedLanguage; name: string; nativeName: string }> {\n    return [\n      { code: 'th', name: 'Thai', nativeName: 'ไทย' },\n      { code: 'en', name: 'English', nativeName: 'English' }\n    ];\n  }\n\n  /**\n   * Check if current language is Thai\n   */\n  isThaiLanguage(): boolean {\n    return this.currentLanguage === 'th';\n  }\n\n  /**\n   * Check if current language is English\n   */\n  isEnglishLanguage(): boolean {\n    return this.currentLanguage === 'en';\n  }\n\n  /**\n   * Format number according to current locale\n   */\n  formatNumber(value: number, options?: Intl.NumberFormatOptions): string {\n    const locale = this.currentLanguage === 'th' ? 'th-TH' : 'en-US';\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n\n  /**\n   * Format currency in Thai Baht\n   */\n  formatCurrency(value: number): string {\n    const locale = this.currentLanguage === 'th' ? 'th-TH' : 'en-US';\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: 'THB',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(value);\n  }\n\n  /**\n   * Format date according to current locale\n   */\n  formatDate(date: Date | string, options?: Intl.DateTimeFormatOptions): string {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    const locale = this.currentLanguage === 'th' ? 'th-TH' : 'en-US';\n    \n    const defaultOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n\n    return new Intl.DateTimeFormat(locale, { ...defaultOptions, ...options }).format(dateObj);\n  }\n\n  /**\n   * Format date time according to current locale\n   */\n  formatDateTime(date: Date | string, options?: Intl.DateTimeFormatOptions): string {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    const locale = this.currentLanguage === 'th' ? 'th-TH' : 'en-US';\n    \n    const defaultOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n\n    return new Intl.DateTimeFormat(locale, { ...defaultOptions, ...options }).format(dateObj);\n  }\n}","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ConfirmDialogData {\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  type?: 'warning' | 'danger' | 'info';\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  template: `\n    <div class=\"confirm-dialog\" [ngClass]=\"'dialog-' + data.type\">\n      <h2 mat-dialog-title class=\"dialog-title\">\n        <mat-icon [ngSwitch]=\"data.type\">\n          <ng-container *ngSwitchCase=\"'warning'\">warning</ng-container>\n          <ng-container *ngSwitchCase=\"'danger'\">error</ng-container>\n          <ng-container *ngSwitchDefault>info</ng-container>\n        </mat-icon>\n        {{ data.title }}\n      </h2>\n      \n      <mat-dialog-content class=\"dialog-content\">\n        <p [innerHTML]=\"data.message\"></p>\n      </mat-dialog-content>\n      \n      <mat-dialog-actions class=\"dialog-actions\">\n        <button mat-button (click)=\"onCancel()\">\n          {{ data.cancelText || 'ยกเลิก' }}\n        </button>\n        <button mat-raised-button \n                [color]=\"data.type === 'danger' ? 'warn' : 'primary'\"\n                (click)=\"onConfirm()\">\n          {{ data.confirmText || 'ยืนยัน' }}\n        </button>\n      </mat-dialog-actions>\n    </div>\n  `,\n  styles: [`\n    .confirm-dialog {\n      min-width: 320px;\n      max-width: 500px;\n    }\n    \n    .dialog-title {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      margin-bottom: 16px;\n    }\n    \n    .dialog-content {\n      margin-bottom: 16px;\n      line-height: 1.5;\n    }\n    \n    .dialog-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 8px;\n    }\n    \n    .dialog-warning .mat-icon { color: #ff9800; }\n    .dialog-danger .mat-icon { color: #f44336; }\n    .dialog-info .mat-icon { color: #2196f3; }\n  `]\n})\nexport class ConfirmDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData\n  ) {\n    this.data.type = this.data.type || 'info';\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-data-table',\n  template: `<div>Data Table Component</div>`\n})\nexport class DataTableComponent { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-state',\n  template: `<div>Empty State Component</div>`\n})\nexport class EmptyStateComponent { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-file-upload',\n  template: `<div>File Upload Component</div>`\n})\nexport class FileUploadComponent { }","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  template: `\n    <div class=\"loading-container\" [style.height]=\"height\">\n      <mat-spinner [diameter]=\"diameter\" [strokeWidth]=\"strokeWidth\"></mat-spinner>\n      <p class=\"loading-message\" *ngIf=\"message\">{{ message }}</p>\n    </div>\n  `,\n  styles: [`\n    .loading-container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 20px;\n    }\n    \n    .loading-message {\n      margin-top: 16px;\n      color: #666;\n      font-size: 14px;\n      text-align: center;\n    }\n  `]\n})\nexport class LoadingSpinnerComponent {\n  @Input() diameter: number = 40;\n  @Input() strokeWidth: number = 4;\n  @Input() message: string = '';\n  @Input() height: string = 'auto';\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  template: `<div>Page Header Component</div>`\n})\nexport class PageHeaderComponent { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-status-chip',\n  template: `<div>Status Chip Component</div>`\n})\nexport class StatusChipComponent { }","import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n  constructor(private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.elementRef.nativeElement.focus();\n    }, 0);\n  }\n}","import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appClickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output() clickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target: any): void {\n    const clickedInside = this.elementRef.nativeElement.contains(target);\n    if (!clickedInside) {\n      this.clickOutside.emit();\n    }\n  }\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appNumericOnly]'\n})\nexport class NumericOnlyDirective {\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): boolean {\n    // Allow backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].indexOf(event.keyCode) !== -1 ||\n        // Allow Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+X\n        (event.keyCode === 65 && event.ctrlKey) ||\n        (event.keyCode === 67 && event.ctrlKey) ||\n        (event.keyCode === 86 && event.ctrlKey) ||\n        (event.keyCode === 88 && event.ctrlKey) ||\n        // Allow home, end, left, right\n        (event.keyCode >= 35 && event.keyCode <= 39)) {\n      return true;\n    }\n    \n    // Ensure it's a number and stop keypress\n    if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && \n        (event.keyCode < 96 || event.keyCode > 105)) {\n      event.preventDefault();\n      return false;\n    }\n    \n    return true;\n  }\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appThaiNationalId]'\n})\nexport class ThaiNationalIdDirective {\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('input', ['$event'])\n  onInput(event: any): void {\n    let value = event.target.value.replace(/\\D/g, '');\n    \n    // Limit to 13 digits\n    if (value.length > 13) {\n      value = value.substring(0, 13);\n    }\n    \n    // Format as 1-2345-67890-12-3\n    if (value.length > 0) {\n      if (value.length <= 1) {\n        value = value;\n      } else if (value.length <= 5) {\n        value = value.substring(0, 1) + '-' + value.substring(1);\n      } else if (value.length <= 10) {\n        value = value.substring(0, 1) + '-' + value.substring(1, 5) + '-' + value.substring(5);\n      } else if (value.length <= 12) {\n        value = value.substring(0, 1) + '-' + value.substring(1, 5) + '-' + value.substring(5, 10) + '-' + value.substring(10);\n      } else {\n        value = value.substring(0, 1) + '-' + value.substring(1, 5) + '-' + value.substring(5, 10) + '-' + value.substring(10, 12) + '-' + value.substring(12);\n      }\n    }\n    \n    event.target.value = value;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatNationalId'\n})\nexport class FormatNationalIdPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    \n    // Format Thai National ID: 1-2345-67890-12-3\n    const cleanValue = value.replace(/\\D/g, '');\n    if (cleanValue.length === 13) {\n      return cleanValue.replace(/(\\d{1})(\\d{4})(\\d{5})(\\d{2})(\\d{1})/, '$1-$2-$3-$4-$5');\n    }\n    return value;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatPhone'\n})\nexport class FormatPhonePipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    \n    // Format Thai phone: 012-345-6789\n    const cleanValue = value.replace(/\\D/g, '');\n    if (cleanValue.length === 10) {\n      return cleanValue.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1-$2-$3');\n    }\n    return value;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../../core/services/translation.service';\n\n@Pipe({\n  name: 'thaiCurrency'\n})\nexport class ThaiCurrencyPipe implements PipeTransform {\n  constructor(private translationService: TranslationService) {}\n\n  transform(value: number | string | null | undefined): string {\n    if (value === null || value === undefined || value === '') {\n      return '';\n    }\n\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    \n    if (isNaN(numValue)) {\n      return '';\n    }\n\n    return this.translationService.formatCurrency(numValue);\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'thaiDate'\n})\nexport class ThaiDatePipe implements PipeTransform {\n  transform(value: any): string {\n    return value ? new Date(value).toLocaleDateString('th-TH') : '';\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'thaiNumber'\n})\nexport class ThaiNumberPipe implements PipeTransform {\n  transform(value: any): string {\n    return value ? Number(value).toLocaleString('th-TH') : '';\n  }\n}","import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { TranslationService } from '../../core/services/translation.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private lastKey: string = '';\n  private lastValue: string = '';\n\n  constructor(private translationService: TranslationService) {\n    // Subscribe to language changes to trigger updates\n    this.translationService.currentLanguage$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.lastKey = ''; // Reset to trigger retranslation\n      });\n  }\n\n  transform(key: string, params?: { [key: string]: any }): string {\n    if (!key) return '';\n\n    // Check if we need to retranslate\n    const cacheKey = key + JSON.stringify(params || {});\n    if (this.lastKey !== cacheKey) {\n      this.lastKey = cacheKey;\n      this.lastValue = this.translationService.translate(key, params);\n    }\n\n    return this.lastValue;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Angular Material Modules\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n// NGX Mask for input formatting\nimport { NgxMaskDirective, NgxMaskPipe } from 'ngx-mask';\n\n// Shared Components\nimport { LoadingSpinnerComponent } from './components/loading-spinner/loading-spinner.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { PageHeaderComponent } from './components/page-header/page-header.component';\nimport { EmptyStateComponent } from './components/empty-state/empty-state.component';\nimport { StatusChipComponent } from './components/status-chip/status-chip.component';\n\n// Shared Pipes\nimport { TranslatePipe } from './pipes/translate.pipe';\nimport { ThaiDatePipe } from './pipes/thai-date.pipe';\nimport { ThaiCurrencyPipe } from './pipes/thai-currency.pipe';\nimport { ThaiNumberPipe } from './pipes/thai-number.pipe';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { FormatNationalIdPipe } from './pipes/format-national-id.pipe';\nimport { FormatPhonePipe } from './pipes/format-phone.pipe';\n\n// Shared Directives\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { ClickOutsideDirective } from './directives/click-outside.directive';\nimport { NumericOnlyDirective } from './directives/numeric-only.directive';\nimport { ThaiNationalIdDirective } from './directives/thai-national-id.directive';\n\nconst MATERIAL_MODULES = [\n  MatButtonModule,\n  MatIconModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatChipsModule,\n  MatMenuModule,\n  MatTooltipModule,\n  MatProgressBarModule\n];\n\nconst SHARED_COMPONENTS = [\n  LoadingSpinnerComponent,\n  ConfirmDialogComponent,\n  FileUploadComponent,\n  DataTableComponent,\n  PageHeaderComponent,\n  EmptyStateComponent,\n  StatusChipComponent\n];\n\nconst SHARED_PIPES = [\n  TranslatePipe,\n  ThaiDatePipe,\n  ThaiCurrencyPipe,\n  ThaiNumberPipe,\n  SafeHtmlPipe,\n  FormatNationalIdPipe,\n  FormatPhonePipe\n];\n\nconst SHARED_DIRECTIVES = [\n  AutofocusDirective,\n  ClickOutsideDirective,\n  NumericOnlyDirective,\n  ThaiNationalIdDirective\n];\n\n@NgModule({\n  declarations: [\n    ...SHARED_COMPONENTS,\n    ...SHARED_PIPES,\n    ...SHARED_DIRECTIVES\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n    ...MATERIAL_MODULES\n  ],\n  exports: [\n    // Angular modules\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    \n    // Material modules\n    ...MATERIAL_MODULES,\n    \n    // NGX modules\n    NgxMaskDirective,\n    NgxMaskPipe,\n    \n    // Shared components, pipes, and directives\n    ...SHARED_COMPONENTS,\n    ...SHARED_PIPES,\n    ...SHARED_DIRECTIVES\n  ]\n})\nexport class SharedModule { }","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  version: '1.0.0',\n  appName: 'Thai Auto Insurance',\n  supportedLanguages: ['th', 'en'],\n  defaultLanguage: 'th',\n  features: {\n    enablePWA: false,\n    enableAnalytics: false,\n    enableServiceWorker: false,\n    enableDebugMode: true,\n    enableMockData: true\n  },\n  external: {\n    googleMapsApiKey: '', // Set via environment variable\n    firebaseConfig: null, // Optional: for push notifications\n    sentryDsn: '' // Optional: for error tracking\n  },\n  api: {\n    timeout: 30000,\n    retryAttempts: 3,\n    retryDelay: 1000\n  },\n  storage: {\n    tokenKey: 'thai_auto_insurance_token',\n    userKey: 'thai_auto_insurance_user',\n    languageKey: 'thai_auto_insurance_lang'\n  }\n};","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { enableProdMode } from '@angular/core';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  ngZoneEventCoalescing: true\n})\n  .catch(err => console.error('Error starting the application:', err));"],"names":["RouterModule","AuthGuard","RoleGuard","routes","path","redirectTo","pathMatch","loadChildren","then","m","AuthModule","DashboardModule","canActivate","CustomerModule","PolicyModule","ClaimsModule","AdminModule","data","roles","AppRoutingModule","forRoot","enableTracing","preloadingStrategy","undefined","scrollPositionRestoration","useHash","imports","i1","exports","NavigationEnd","Subject","takeUntil","filter","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","AppComponent_mat_toolbar_1_Template_button_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","toggleSidenav","ɵɵtext","ɵɵelementEnd","AppComponent_mat_toolbar_1_Template_div_click_4_listener","navigateTo","ɵɵtemplate","AppComponent_mat_toolbar_1_mat_spinner_10_Template","AppComponent_mat_toolbar_1_Template_button_click_11_listener","AppComponent_mat_toolbar_1_Template_button_click_14_listener","toggleLanguage","AppComponent_mat_toolbar_1_Template_button_click_32_listener","AppComponent_mat_toolbar_1_Template_button_click_37_listener","AppComponent_mat_toolbar_1_Template_button_click_43_listener","logout","ɵɵadvance","ɵɵtextInterpolate","translationService","instant","ɵɵproperty","isLoading","unreadNotifications","currentLanguage","toUpperCase","userMenu_r3","getUserDisplayName","getUserRoleDisplay","currentUser","email","AppComponent_mat_sidenav_container_2_ng_container_3_mat_list_item_1_Template_mat_list_item_click_0_listener","_r4","item_r5","$implicit","route","ɵɵclassProp","isRouteActive","icon","labelKey","ɵɵelementContainerStart","AppComponent_mat_sidenav_container_2_ng_container_3_mat_list_item_1_Template","requiresAuth","isAuthenticated","AppComponent_mat_sidenav_container_2_ng_container_4_Template_mat_list_item_click_4_listener","_r6","ɵɵtextInterpolate1","AppComponent_mat_sidenav_container_2_ng_container_3_Template","AppComponent_mat_sidenav_container_2_ng_container_4_Template","AppComponent_mat_sidenav_container_2_div_10_Template","isMobile","sidenavOpened","getNavigationItems","canAccessAdmin","AppComponent","constructor","authService","loadingService","notificationService","router","changeDetectorRef","media","destroy$","title","mobileQuery","matchMedia","mobileQueryListener","matches","detectChanges","addListener","ngOnInit","initializeApp","setupSubscriptions","setupRouterEvents","ngOnDestroy","next","complete","removeListener","setLanguage","subscribe","error","console","currentUser$","pipe","user","isLoading$","loading","currentLanguage$","language","unreadCount$","count","events","event","updatePageTitle","url","titleKey","includes","translatedTitle","document","navigate","isAdmin","startsWith","firstNameThai","lastNameThai","firstName","lastName","role","ɵɵdirectiveInject","AuthService","i2","LoadingService","i3","TranslationService","i4","NotificationService","i5","Router","ChangeDetectorRef","i6","MediaMatcher","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_mat_toolbar_1_Template","AppComponent_mat_sidenav_container_2_Template","AppComponent_div_3_Template","AppComponent_div_4_Template","LOCALE_ID","BrowserModule","BrowserAnimationsModule","HttpClientModule","HTTP_INTERCEPTORS","ReactiveFormsModule","FormsModule","registerLocaleData","localeEn","localeTh","MatToolbarModule","MatSidenavModule","MatButtonModule","MatIconModule","MatListModule","MatCardModule","MatInputModule","MatFormFieldModule","MatCheckboxModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatProgressSpinnerModule","MatSnackBarModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatMenuModule","MatTabsModule","MatChipsModule","MatBadgeModule","MatStepperModule","MatExpansionModule","MatProgressBarModule","MatSlideToggleModule","MatRadioModule","MatAutocompleteModule","MatBottomSheetModule","MatRippleModule","MatDividerModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","AuthInterceptor","ErrorInterceptor","LoadingInterceptor","SharedModule","AppModule","documentElement","lang","bootstrap","provide","useValue","useClass","multi","declarations","map","take","state","checkAuth","canActivateChild","childRoute","queryParams","returnUrl","ɵɵinject","factory","ɵfac","providedIn","checkRole","requiredRoles","length","hasRequiredRole","canAccessRoute","showError","throwError","BehaviorSubject","EMPTY","catchError","switchMap","finalize","isRefreshing","refreshTokenSubject","intercept","req","isAuthEndpoint","handle","token","getToken","addTokenToRequest","status","handle401Error","refreshToken","getRefreshToken","response","clone","setHeaders","authEndpoints","some","endpoint","retry","environment","ErrorCode","injector","shouldRetry","api","retryAttempts","delay","retryCount","Promise","resolve","setTimeout","retryDelay","Math","pow","appError","createAppError","production","handleUserNotification","nonRetryableMethods","nonRetryableEndpoints","method","code","SERVER_ERROR","message","messageThai","timestamp","Date","statusCode","getErrorCodeFromStatus","details","errors","NETWORK_ERROR","VALIDATION_ERROR","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","CONFLICT","BUSINESS_RULE_VIOLATION","TIMEOUT_ERROR","silentErrors","get","isCurrentLanguageThai","duration","action","showWarning","showInfo","injectionError","Injector","shouldSkipLoading","loadingKey","generateLoadingKey","setLoading","skipLoadingEndpoints","headers","has","replace","FilterOperator","DocumentStatus","NotificationType","NotificationPriority","ThaiRegion","AuditAction","ConfigDataType","ValidationType","timer","tap","http","apiUrl","currentUserSubject","asObservable","initializeFromStorage","value","userRole","login","credentials","post","success","Error","loginResponse","setSession","register","userData","clearSession","clearTokenExpirationTimer","request","forgotPassword","resetPassword","newPassword","changePassword","verifyEmail","resendVerificationEmail","localStorage","getItem","storage","tokenKey","expiresAt","setItem","userKey","JSON","stringify","toString","setTokenExpirationTimer","removeItem","userJson","expiresAtStr","parse","expirationDate","expiresInMs","getTime","refreshTime","max","tokenExpirationTimer","unsubscribe","hasPermission","permission","HttpClient","loadingSubject","loading$","loadingStates","Object","values","key","currentState","removed","newState","isLoadingSync","clearAll","getActiveLoadingKeys","keys","trackOperation","operation","_this","_asyncToGenerator","result","reject","trackOperationWithMinDuration","_x","_x2","_this2","minDuration","startTime","now","elapsedTime","apply","arguments","showGlobalLoading","hideGlobalLoading","isGlobalLoading","showPageLoading","page","hidePageLoading","isPageLoading","MatSnackBarConfig","snackBar","unreadCountSubject","showSuccess","options","showNotification","type","config","getDefaultDuration","horizontalPosition","verticalPosition","panelClass","open","getNotifications","searchRequest","getUnreadNotifications","markAsRead","notificationId","patch","updateUnreadCount","markAllAsRead","deleteNotification","delete","getUnreadCount","loadUnreadCount","delta","currentCount","newCount","showSaveSuccess","showDeleteSuccess","showUpdateSuccess","showValidationError","showNetworkError","showUnauthorizedError","showMaintenanceNotice","showPolicyCreated","showPolicyUpdated","showClaimSubmitted","showDocumentUploaded","showPaymentProcessed","MatSnackBar","of","currentLanguageSubject","translations","Map","loadingTranslations","Set","initializeLanguage","loadTranslations","saveLanguagePreference","updateDocumentLanguage","translate","params","currentTranslations","translation","getNestedValue","englishTranslations","warn","forEach","param","placeholder","RegExp","add","set","fallbackTranslations","savedLanguage","languageKey","browserLanguage","getBrowserLanguage","defaultLanguage","targetLanguage","isSupportedLanguage","navigator","split","supportedLanguages","dir","obj","reduce","current","prop","newLanguage","getSupportedLanguages","name","nativeName","isThaiLanguage","isEnglishLanguage","formatNumber","locale","Intl","NumberFormat","format","formatCurrency","style","currency","minimumFractionDigits","maximumFractionDigits","formatDate","date","dateObj","defaultOptions","year","month","day","DateTimeFormat","formatDateTime","hour","minute","MAT_DIALOG_DATA","ConfirmDialogComponent","dialogRef","onConfirm","close","onCancel","MatDialogRef","ConfirmDialogComponent_Template","ConfirmDialogComponent_ng_container_3_Template","ConfirmDialogComponent_ng_container_4_Template","ConfirmDialogComponent_ng_container_5_Template","ConfirmDialogComponent_Template_button_click_10_listener","ConfirmDialogComponent_Template_button_click_12_listener","ɵɵsanitizeHtml","cancelText","confirmText","DataTableComponent","DataTableComponent_Template","EmptyStateComponent","EmptyStateComponent_Template","FileUploadComponent","FileUploadComponent_Template","ctx_r0","LoadingSpinnerComponent","diameter","strokeWidth","height","inputs","LoadingSpinnerComponent_Template","LoadingSpinnerComponent_p_2_Template","ɵɵstyleProp","PageHeaderComponent","PageHeaderComponent_Template","StatusChipComponent","StatusChipComponent_Template","AutofocusDirective","elementRef","ngAfterViewInit","nativeElement","focus","ElementRef","EventEmitter","ClickOutsideDirective","clickOutside","onClick","target","clickedInside","contains","emit","hostBindings","ClickOutsideDirective_HostBindings","ClickOutsideDirective_click_HostBindingHandler","$event","ɵɵresolveDocument","NumericOnlyDirective","onKeyDown","indexOf","keyCode","ctrlKey","shiftKey","preventDefault","NumericOnlyDirective_HostBindings","NumericOnlyDirective_keydown_HostBindingHandler","ThaiNationalIdDirective","onInput","substring","ThaiNationalIdDirective_HostBindings","ThaiNationalIdDirective_input_HostBindingHandler","FormatNationalIdPipe","transform","cleanValue","pure","FormatPhonePipe","SafeHtmlPipe","sanitizer","bypassSecurityTrustHtml","DomSanitizer","ThaiCurrencyPipe","numValue","parseFloat","isNaN","ThaiDatePipe","toLocaleDateString","ThaiNumberPipe","Number","toLocaleString","TranslatePipe","lastKey","lastValue","cacheKey","CommonModule","MatTooltipModule","MATERIAL_MODULES","SHARED_COMPONENTS","SHARED_PIPES","SHARED_DIRECTIVES","version","appName","features","enablePWA","enableAnalytics","enableServiceWorker","enableDebugMode","enableMockData","external","googleMapsApiKey","firebaseConfig","sentryDsn","timeout","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","ngZoneEventCoalescing","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}