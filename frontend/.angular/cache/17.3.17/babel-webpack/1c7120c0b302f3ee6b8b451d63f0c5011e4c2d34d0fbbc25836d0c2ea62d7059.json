{"ast":null,"code":"import { LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeTh from '@angular/common/locales/th';\n// Angular Material Modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\n// NGX Mask for input formatting\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n// App Components and Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// Core Services and Interceptors\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\nimport * as i0 from \"@angular/core\";\n// Register locales for i18n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeTh, 'th');\nexport class AppModule {\n  constructor() {\n    // Set default locale to Thai\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = 'th';\n    }\n  }\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [\n      // NGX Mask Provider\n      provideNgxMask(),\n      // Locale provider - will be set dynamically based on user preference\n      {\n        provide: LOCALE_ID,\n        useValue: 'th-TH' // Default to Thai locale\n      },\n      // HTTP Interceptors\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ErrorInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: LoadingInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, AppRoutingModule, BrowserAnimationsModule, HttpClientModule, ReactiveFormsModule, FormsModule,\n      // Angular Material Modules\n      MatToolbarModule, MatSidenavModule, MatButtonModule, MatIconModule, MatListModule, MatCardModule, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule, MatDialogModule, MatMenuModule, MatTabsModule, MatChipsModule, MatBadgeModule, MatStepperModule, MatExpansionModule, MatProgressBarModule, MatSlideToggleModule, MatRadioModule, MatAutocompleteModule, MatBottomSheetModule, MatRippleModule, MatDividerModule,\n      // App Modules\n      SharedModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, BrowserAnimationsModule, HttpClientModule, ReactiveFormsModule, FormsModule,\n    // Angular Material Modules\n    MatToolbarModule, MatSidenavModule, MatButtonModule, MatIconModule, MatListModule, MatCardModule, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule, MatDialogModule, MatMenuModule, MatTabsModule, MatChipsModule, MatBadgeModule, MatStepperModule, MatExpansionModule, MatProgressBarModule, MatSlideToggleModule, MatRadioModule, MatAutocompleteModule, MatBottomSheetModule, MatRippleModule, MatDividerModule,\n    // NGX Mask Directives\n    NgxMaskDirective, NgxMaskPipe,\n    // App Modules\n    SharedModule]\n  });\n})();","map":{"version":3,"names":["LOCALE_ID","BrowserModule","BrowserAnimationsModule","HttpClientModule","HTTP_INTERCEPTORS","ReactiveFormsModule","FormsModule","registerLocaleData","localeEn","localeTh","MatToolbarModule","MatSidenavModule","MatButtonModule","MatIconModule","MatListModule","MatCardModule","MatInputModule","MatFormFieldModule","MatCheckboxModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatProgressSpinnerModule","MatSnackBarModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatMenuModule","MatTabsModule","MatChipsModule","MatBadgeModule","MatStepperModule","MatExpansionModule","MatProgressBarModule","MatSlideToggleModule","MatRadioModule","MatAutocompleteModule","MatBottomSheetModule","MatRippleModule","MatDividerModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","AppRoutingModule","AppComponent","AuthInterceptor","ErrorInterceptor","LoadingInterceptor","SharedModule","AppModule","constructor","document","documentElement","lang","bootstrap","provide","useValue","useClass","multi","imports","declarations"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/app.module.ts"],"sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeTh from '@angular/common/locales/th';\n\n// Angular Material Modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\n\n// NGX Mask for input formatting\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n\n// App Components and Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Core Services and Interceptors\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\n\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n\n// Register locales for i18n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeTh, 'th');\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    \n    // Angular Material Modules\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatRippleModule,\n    MatDividerModule,\n    \n    // NGX Mask Directives\n    NgxMaskDirective,\n    NgxMaskPipe,\n    \n    // App Modules\n    SharedModule\n  ],\n  providers: [\n    // NGX Mask Provider\n    provideNgxMask(),\n    \n    // Locale provider - will be set dynamically based on user preference\n    {\n      provide: LOCALE_ID,\n      useValue: 'th-TH' // Default to Thai locale\n    },\n    // HTTP Interceptors\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor() {\n    // Set default locale to Thai\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = 'th';\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}