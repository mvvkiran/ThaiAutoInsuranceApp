{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/translation.service\";\nexport class TranslatePipe {\n  constructor(translationService) {\n    this.translationService = translationService;\n    this.destroy$ = new Subject();\n    this.lastKey = '';\n    this.lastValue = '';\n    // Subscribe to language changes to trigger updates\n    this.translationService.currentLanguage$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.lastKey = ''; // Reset to trigger retranslation\n    });\n  }\n  transform(key, params) {\n    if (!key) return '';\n    // Check if we need to retranslate\n    const cacheKey = key + JSON.stringify(params || {});\n    if (this.lastKey !== cacheKey) {\n      this.lastKey = cacheKey;\n      this.lastValue = this.translationService.translate(key, params);\n    }\n    return this.lastValue;\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  static {\n    this.ɵfac = function TranslatePipe_Factory(t) {\n      return new (t || TranslatePipe)(i0.ɵɵdirectiveInject(i1.TranslationService, 16));\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"translate\",\n      type: TranslatePipe,\n      pure: false\n    });\n  }\n}","map":{"version":3,"names":["Subject","takeUntil","TranslatePipe","constructor","translationService","destroy$","lastKey","lastValue","currentLanguage$","pipe","subscribe","transform","key","params","cacheKey","JSON","stringify","translate","ngOnDestroy","next","complete","i0","ɵɵdirectiveInject","i1","TranslationService","pure"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/shared/pipes/translate.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { TranslationService } from '../../core/services/translation.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private lastKey: string = '';\n  private lastValue: string = '';\n\n  constructor(private translationService: TranslationService) {\n    // Subscribe to language changes to trigger updates\n    this.translationService.currentLanguage$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.lastKey = ''; // Reset to trigger retranslation\n      });\n  }\n\n  transform(key: string, params?: { [key: string]: any }): string {\n    if (!key) return '';\n\n    // Check if we need to retranslate\n    const cacheKey = key + JSON.stringify(params || {});\n    if (this.lastKey !== cacheKey) {\n      this.lastKey = cacheKey;\n      this.lastValue = this.translationService.translate(key, params);\n    }\n\n    return this.lastValue;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}"],"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;AAC9B,SAASC,SAAS,QAAQ,gBAAgB;;;AAM1C,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,kBAAsC;IAAtC,KAAAA,kBAAkB,GAAlBA,kBAAkB;IAJ9B,KAAAC,QAAQ,GAAG,IAAIL,OAAO,EAAQ;IAC9B,KAAAM,OAAO,GAAW,EAAE;IACpB,KAAAC,SAAS,GAAW,EAAE;IAG5B;IACA,IAAI,CAACH,kBAAkB,CAACI,gBAAgB,CACrCC,IAAI,CAACR,SAAS,CAAC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAC9BK,SAAS,CAAC,MAAK;MACd,IAAI,CAACJ,OAAO,GAAG,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC;EACN;EAEAK,SAASA,CAACC,GAAW,EAAEC,MAA+B;IACpD,IAAI,CAACD,GAAG,EAAE,OAAO,EAAE;IAEnB;IACA,MAAME,QAAQ,GAAGF,GAAG,GAAGG,IAAI,CAACC,SAAS,CAACH,MAAM,IAAI,EAAE,CAAC;IACnD,IAAI,IAAI,CAACP,OAAO,KAAKQ,QAAQ,EAAE;MAC7B,IAAI,CAACR,OAAO,GAAGQ,QAAQ;MACvB,IAAI,CAACP,SAAS,GAAG,IAAI,CAACH,kBAAkB,CAACa,SAAS,CAACL,GAAG,EAAEC,MAAM,CAAC;;IAGjE,OAAO,IAAI,CAACN,SAAS;EACvB;EAEAW,WAAWA,CAAA;IACT,IAAI,CAACb,QAAQ,CAACc,IAAI,EAAE;IACpB,IAAI,CAACd,QAAQ,CAACe,QAAQ,EAAE;EAC1B;;;uBA9BWlB,aAAa,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;;YAAbtB,aAAa;MAAAuB,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}