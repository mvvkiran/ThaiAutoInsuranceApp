{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/notification.service\";\nexport class RoleGuard {\n  constructor(authService, router, notificationService) {\n    this.authService = authService;\n    this.router = router;\n    this.notificationService = notificationService;\n  }\n  canActivate(route, state) {\n    return this.checkRole(route);\n  }\n  checkRole(route) {\n    return this.authService.currentUser$.pipe(take(1), map(user => {\n      if (!user) {\n        this.router.navigate(['/auth/login']);\n        return false;\n      }\n      const requiredRoles = route.data['roles'];\n      if (!requiredRoles || requiredRoles.length === 0) {\n        return true; // No role requirement\n      }\n      const hasRequiredRole = this.authService.canAccessRoute(requiredRoles);\n      if (!hasRequiredRole) {\n        this.notificationService.showError('คุณไม่มีสิทธิ์ในการเข้าถึงหน้านี้ / You don\\'t have permission to access this page');\n        this.router.navigate(['/dashboard']);\n        return false;\n      }\n      return true;\n    }));\n  }\n  static {\n    this.ɵfac = function RoleGuard_Factory(t) {\n      return new (t || RoleGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotificationService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleGuard,\n      factory: RoleGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["map","take","RoleGuard","constructor","authService","router","notificationService","canActivate","route","state","checkRole","currentUser$","pipe","user","navigate","requiredRoles","data","length","hasRequiredRole","canAccessRoute","showError","i0","ɵɵinject","i1","AuthService","i2","Router","i3","NotificationService","factory","ɵfac","providedIn"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/core/guards/role.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkRole(route);\n  }\n\n  private checkRole(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.authService.currentUser$.pipe(\n      take(1),\n      map(user => {\n        if (!user) {\n          this.router.navigate(['/auth/login']);\n          return false;\n        }\n\n        const requiredRoles = route.data['roles'] as string[];\n        \n        if (!requiredRoles || requiredRoles.length === 0) {\n          return true; // No role requirement\n        }\n\n        const hasRequiredRole = this.authService.canAccessRoute(requiredRoles);\n        \n        if (!hasRequiredRole) {\n          this.notificationService.showError(\n            'คุณไม่มีสิทธิ์ในการเข้าถึงหน้านี้ / You don\\'t have permission to access this page'\n          );\n          this.router.navigate(['/dashboard']);\n          return false;\n        }\n\n        return true;\n      })\n    );\n  }\n}"],"mappings":"AAGA,SAASA,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;;;AAO1C,OAAM,MAAOC,SAAS;EAEpBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,mBAAwC;IAFxC,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,mBAAmB,GAAnBA,mBAAmB;EAC1B;EAEHC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;EAC9B;EAEQE,SAASA,CAACF,KAA6B;IAC7C,OAAO,IAAI,CAACJ,WAAW,CAACO,YAAY,CAACC,IAAI,CACvCX,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAACa,IAAI,IAAG;MACT,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO,KAAK;;MAGd,MAAMC,aAAa,GAAGP,KAAK,CAACQ,IAAI,CAAC,OAAO,CAAa;MAErD,IAAI,CAACD,aAAa,IAAIA,aAAa,CAACE,MAAM,KAAK,CAAC,EAAE;QAChD,OAAO,IAAI,CAAC,CAAC;;MAGf,MAAMC,eAAe,GAAG,IAAI,CAACd,WAAW,CAACe,cAAc,CAACJ,aAAa,CAAC;MAEtE,IAAI,CAACG,eAAe,EAAE;QACpB,IAAI,CAACZ,mBAAmB,CAACc,SAAS,CAChC,oFAAoF,CACrF;QACD,IAAI,CAACf,MAAM,CAACS,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACpC,OAAO,KAAK;;MAGd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;;;uBA3CWZ,SAAS,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,mBAAA;IAAA;EAAA;;;aAAT1B,SAAS;MAAA2B,OAAA,EAAT3B,SAAS,CAAA4B,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}