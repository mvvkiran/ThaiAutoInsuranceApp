{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class PolicyService {\n  constructor() {\n    this.policiesSubject = new BehaviorSubject(this.getInitialPolicies());\n    this.policies$ = this.policiesSubject.asObservable();\n  }\n  getPolicies() {\n    return this.policies$;\n  }\n  getCurrentPolicies() {\n    return this.policiesSubject.value;\n  }\n  addPolicy(policyData) {\n    const currentPolicies = this.getCurrentPolicies();\n    // Generate policy number\n    const policyNumber = this.generatePolicyNumber();\n    // Create new policy object\n    const newPolicy = {\n      id: this.generateId(),\n      policyNumber: policyNumber,\n      licensePlate: policyData.licensePlate,\n      vehicleMake: this.capitalizeFirst(policyData.vehicleMake),\n      vehicleModel: policyData.vehicleModel,\n      year: parseInt(policyData.year),\n      coverageType: this.formatCoverageType(policyData.coverageType),\n      coverageAmount: parseInt(policyData.coverageAmount),\n      premium: Math.round(policyData.premium),\n      status: 'PENDING',\n      startDate: new Date(),\n      endDate: new Date(new Date().setFullYear(new Date().getFullYear() + 1)),\n      holderName: 'ผู้เอาประกันใหม่' // Default holder name in Thai\n    };\n    // Add to policies list\n    const updatedPolicies = [...currentPolicies, newPolicy];\n    this.policiesSubject.next(updatedPolicies);\n    return newPolicy;\n  }\n  updatePolicy(updatedPolicy) {\n    const currentPolicies = this.getCurrentPolicies();\n    const index = currentPolicies.findIndex(p => p.id === updatedPolicy.id);\n    if (index !== -1) {\n      currentPolicies[index] = updatedPolicy;\n      this.policiesSubject.next([...currentPolicies]);\n    }\n  }\n  deletePolicy(policyId) {\n    const currentPolicies = this.getCurrentPolicies();\n    const updatedPolicies = currentPolicies.filter(p => p.id !== policyId);\n    this.policiesSubject.next(updatedPolicies);\n  }\n  generatePolicyNumber() {\n    const year = new Date().getFullYear();\n    const randomNum = Math.floor(Math.random() * 900) + 100; // 3 digit random number\n    return `POL-${year}-${randomNum.toString().padStart(3, '0')}`;\n  }\n  generateId() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n  capitalizeFirst(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  formatCoverageType(type) {\n    return type === 'third_party' ? 'Third Party' : 'Comprehensive';\n  }\n  getInitialPolicies() {\n    return [{\n      id: '1',\n      policyNumber: 'POL-2024-001',\n      licensePlate: 'กก-1234 กรุงเทพมหานคร',\n      vehicleMake: 'Toyota',\n      vehicleModel: 'Camry',\n      year: 2022,\n      coverageType: 'Comprehensive',\n      coverageAmount: 3000000,\n      premium: 53000,\n      status: 'ACTIVE',\n      startDate: new Date('2024-01-15'),\n      endDate: new Date('2025-01-14'),\n      holderName: 'สมชาย ใจดี'\n    }, {\n      id: '2',\n      policyNumber: 'POL-2024-002',\n      licensePlate: 'ขข-5678 กรุงเทพมหานคร',\n      vehicleMake: 'Honda',\n      vehicleModel: 'Civic',\n      year: 2021,\n      coverageType: 'Third Party',\n      coverageAmount: 1000000,\n      premium: 20000,\n      status: 'ACTIVE',\n      startDate: new Date('2024-03-01'),\n      endDate: new Date('2025-02-28'),\n      holderName: 'วิไล สวยงาม'\n    }, {\n      id: '3',\n      policyNumber: 'POL-2024-003',\n      licensePlate: 'คค-9999 นนทบุรี',\n      vehicleMake: 'Nissan',\n      vehicleModel: 'Almera',\n      year: 2019,\n      coverageType: 'Comprehensive',\n      coverageAmount: 2000000,\n      premium: 42000,\n      status: 'PENDING',\n      startDate: new Date('2024-08-15'),\n      endDate: new Date('2025-08-14'),\n      holderName: 'ประยุทธ มั่นคง'\n    }];\n  }\n  static {\n    this.ɵfac = function PolicyService_Factory(t) {\n      return new (t || PolicyService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PolicyService,\n      factory: PolicyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","PolicyService","constructor","policiesSubject","getInitialPolicies","policies$","asObservable","getPolicies","getCurrentPolicies","value","addPolicy","policyData","currentPolicies","policyNumber","generatePolicyNumber","newPolicy","id","generateId","licensePlate","vehicleMake","capitalizeFirst","vehicleModel","year","parseInt","coverageType","formatCoverageType","coverageAmount","premium","Math","round","status","startDate","Date","endDate","setFullYear","getFullYear","holderName","updatedPolicies","next","updatePolicy","updatedPolicy","index","findIndex","p","deletePolicy","policyId","filter","randomNum","floor","random","toString","padStart","substr","str","charAt","toUpperCase","slice","type","factory","ɵfac","providedIn"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/features/policy/policy.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\n\nexport interface Policy {\n  id: string;\n  policyNumber: string;\n  licensePlate: string;\n  vehicleMake: string;\n  vehicleModel: string;\n  year: number;\n  coverageType: string;\n  coverageAmount: number;\n  premium: number;\n  status: 'ACTIVE' | 'EXPIRED' | 'PENDING' | 'CANCELLED';\n  startDate: Date;\n  endDate: Date;\n  holderName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n  private policiesSubject = new BehaviorSubject<Policy[]>(this.getInitialPolicies());\n  public policies$ = this.policiesSubject.asObservable();\n\n  constructor() {}\n\n  getPolicies(): Observable<Policy[]> {\n    return this.policies$;\n  }\n\n  getCurrentPolicies(): Policy[] {\n    return this.policiesSubject.value;\n  }\n\n  addPolicy(policyData: any): Policy {\n    const currentPolicies = this.getCurrentPolicies();\n    \n    // Generate policy number\n    const policyNumber = this.generatePolicyNumber();\n    \n    // Create new policy object\n    const newPolicy: Policy = {\n      id: this.generateId(),\n      policyNumber: policyNumber,\n      licensePlate: policyData.licensePlate,\n      vehicleMake: this.capitalizeFirst(policyData.vehicleMake),\n      vehicleModel: policyData.vehicleModel,\n      year: parseInt(policyData.year),\n      coverageType: this.formatCoverageType(policyData.coverageType),\n      coverageAmount: parseInt(policyData.coverageAmount),\n      premium: Math.round(policyData.premium),\n      status: 'PENDING',\n      startDate: new Date(),\n      endDate: new Date(new Date().setFullYear(new Date().getFullYear() + 1)),\n      holderName: 'ผู้เอาประกันใหม่' // Default holder name in Thai\n    };\n\n    // Add to policies list\n    const updatedPolicies = [...currentPolicies, newPolicy];\n    this.policiesSubject.next(updatedPolicies);\n    \n    return newPolicy;\n  }\n\n  updatePolicy(updatedPolicy: Policy): void {\n    const currentPolicies = this.getCurrentPolicies();\n    const index = currentPolicies.findIndex(p => p.id === updatedPolicy.id);\n    if (index !== -1) {\n      currentPolicies[index] = updatedPolicy;\n      this.policiesSubject.next([...currentPolicies]);\n    }\n  }\n\n  deletePolicy(policyId: string): void {\n    const currentPolicies = this.getCurrentPolicies();\n    const updatedPolicies = currentPolicies.filter(p => p.id !== policyId);\n    this.policiesSubject.next(updatedPolicies);\n  }\n\n  private generatePolicyNumber(): string {\n    const year = new Date().getFullYear();\n    const randomNum = Math.floor(Math.random() * 900) + 100; // 3 digit random number\n    return `POL-${year}-${randomNum.toString().padStart(3, '0')}`;\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  private capitalizeFirst(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private formatCoverageType(type: string): string {\n    return type === 'third_party' ? 'Third Party' : 'Comprehensive';\n  }\n\n  private getInitialPolicies(): Policy[] {\n    return [\n      {\n        id: '1',\n        policyNumber: 'POL-2024-001',\n        licensePlate: 'กก-1234 กรุงเทพมหานคร',\n        vehicleMake: 'Toyota',\n        vehicleModel: 'Camry',\n        year: 2022,\n        coverageType: 'Comprehensive',\n        coverageAmount: 3000000,\n        premium: 53000,\n        status: 'ACTIVE',\n        startDate: new Date('2024-01-15'),\n        endDate: new Date('2025-01-14'),\n        holderName: 'สมชาย ใจดี'\n      },\n      {\n        id: '2',\n        policyNumber: 'POL-2024-002',\n        licensePlate: 'ขข-5678 กรุงเทพมหานคร',\n        vehicleMake: 'Honda',\n        vehicleModel: 'Civic',\n        year: 2021,\n        coverageType: 'Third Party',\n        coverageAmount: 1000000,\n        premium: 20000,\n        status: 'ACTIVE',\n        startDate: new Date('2024-03-01'),\n        endDate: new Date('2025-02-28'),\n        holderName: 'วิไล สวยงาม'\n      },\n      {\n        id: '3',\n        policyNumber: 'POL-2024-003',\n        licensePlate: 'คค-9999 นนทบุรี',\n        vehicleMake: 'Nissan',\n        vehicleModel: 'Almera',\n        year: 2019,\n        coverageType: 'Comprehensive',\n        coverageAmount: 2000000,\n        premium: 42000,\n        status: 'PENDING',\n        startDate: new Date('2024-08-15'),\n        endDate: new Date('2025-08-14'),\n        holderName: 'ประยุทธ มั่นคง'\n      }\n    ];\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}