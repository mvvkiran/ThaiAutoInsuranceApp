{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeTh from '@angular/common/locales/th';\n// Angular Material Modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatRippleModule } from '@angular/material/core';\n// App Components and Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// Core Services and Interceptors\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n// Register locales for i18n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeTh, 'th');\nlet AppModule = class AppModule {\n  constructor() {\n    // Set default locale to Thai\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = 'th';\n    }\n  }\n};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, BrowserAnimationsModule, HttpClientModule, ReactiveFormsModule, FormsModule,\n  // Angular Material Modules\n  MatToolbarModule, MatSidenavModule, MatButtonModule, MatIconModule, MatListModule, MatCardModule, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule, MatDialogModule, MatMenuModule, MatTabsModule, MatChipsModule, MatBadgeModule, MatStepperModule, MatExpansionModule, MatProgressBarModule, MatSlideToggleModule, MatRadioModule, MatAutocompleteModule, MatBottomSheetModule, MatRippleModule,\n  // NGX Modules\n  NgxMaskModule.forRoot(),\n  // App Modules\n  SharedModule],\n  providers: [\n  // Locale provider - will be set dynamically based on user preference\n  {\n    provide: LOCALE_ID,\n    useValue: 'th-TH' // Default to Thai locale\n  },\n  // HTTP Interceptors\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"names":["NgModule","LOCALE_ID","BrowserModule","BrowserAnimationsModule","HttpClientModule","HTTP_INTERCEPTORS","ReactiveFormsModule","FormsModule","registerLocaleData","localeEn","localeTh","MatToolbarModule","MatSidenavModule","MatButtonModule","MatIconModule","MatListModule","MatCardModule","MatInputModule","MatFormFieldModule","MatCheckboxModule","MatSelectModule","MatDatepickerModule","MatNativeDateModule","MatProgressSpinnerModule","MatSnackBarModule","MatTableModule","MatPaginatorModule","MatSortModule","MatDialogModule","MatMenuModule","MatTabsModule","MatChipsModule","MatBadgeModule","MatStepperModule","MatExpansionModule","MatProgressBarModule","MatSlideToggleModule","MatRadioModule","MatAutocompleteModule","MatBottomSheetModule","MatRippleModule","AppRoutingModule","AppComponent","AuthInterceptor","ErrorInterceptor","LoadingInterceptor","SharedModule","AppModule","constructor","document","documentElement","lang","__decorate","declarations","imports","NgxMaskModule","forRoot","providers","provide","useValue","useClass","multi","bootstrap"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/app.module.ts"],"sourcesContent":["import { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { registerLocaleData } from '@angular/common';\nimport localeEn from '@angular/common/locales/en';\nimport localeTh from '@angular/common/locales/th';\n\n// Angular Material Modules\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatRippleModule } from '@angular/material/core';\n\n// NGX Mask for input formatting\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n\n// App Components and Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Core Services and Interceptors\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { LoadingInterceptor } from './core/interceptors/loading.interceptor';\n\n// Shared Module\nimport { SharedModule } from './shared/shared.module';\n\n// Register locales for i18n\nregisterLocaleData(localeEn, 'en');\nregisterLocaleData(localeTh, 'th');\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    \n    // Angular Material Modules\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatStepperModule,\n    MatExpansionModule,\n    MatProgressBarModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatAutocompleteModule,\n    MatBottomSheetModule,\n    MatRippleModule,\n    \n    // NGX Modules\n    NgxMaskModule.forRoot(),\n    \n    // App Modules\n    SharedModule\n  ],\n  providers: [\n    // Locale provider - will be set dynamically based on user preference\n    {\n      provide: LOCALE_ID,\n      useValue: 'th-TH' // Default to Thai locale\n    },\n    // HTTP Interceptors\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor() {\n    // Set default locale to Thai\n    if (typeof document !== 'undefined') {\n      document.documentElement.lang = 'th';\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}