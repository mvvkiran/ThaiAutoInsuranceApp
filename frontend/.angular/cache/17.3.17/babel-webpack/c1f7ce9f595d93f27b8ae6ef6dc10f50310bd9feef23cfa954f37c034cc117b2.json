{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FormatNationalIdPipe {\n  transform(value) {\n    if (!value) return '';\n    // Format Thai National ID: 1-2345-67890-12-3\n    const cleanValue = value.replace(/\\D/g, '');\n    if (cleanValue.length === 13) {\n      return cleanValue.replace(/(\\d{1})(\\d{4})(\\d{5})(\\d{2})(\\d{1})/, '$1-$2-$3-$4-$5');\n    }\n    return value;\n  }\n  static {\n    this.ɵfac = function FormatNationalIdPipe_Factory(t) {\n      return new (t || FormatNationalIdPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"formatNationalId\",\n      type: FormatNationalIdPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["FormatNationalIdPipe","transform","value","cleanValue","replace","length","pure"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/shared/pipes/format-national-id.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatNationalId'\n})\nexport class FormatNationalIdPipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return '';\n    \n    // Format Thai National ID: 1-2345-67890-12-3\n    const cleanValue = value.replace(/\\D/g, '');\n    if (cleanValue.length === 13) {\n      return cleanValue.replace(/(\\d{1})(\\d{4})(\\d{5})(\\d{2})(\\d{1})/, '$1-$2-$3-$4-$5');\n    }\n    return value;\n  }\n}"],"mappings":";AAKA,OAAM,MAAOA,oBAAoB;EAC/BC,SAASA,CAACC,KAAa;IACrB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IAErB;IACA,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC3C,IAAID,UAAU,CAACE,MAAM,KAAK,EAAE,EAAE;MAC5B,OAAOF,UAAU,CAACC,OAAO,CAAC,qCAAqC,EAAE,gBAAgB,CAAC;;IAEpF,OAAOF,KAAK;EACd;;;uBAVWF,oBAAoB;IAAA;EAAA;;;;YAApBA,oBAAoB;MAAAM,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}