{"ast":null,"code":"export var FilterOperator;\n(function (FilterOperator) {\n  FilterOperator[\"EQUALS\"] = \"EQUALS\";\n  FilterOperator[\"NOT_EQUALS\"] = \"NOT_EQUALS\";\n  FilterOperator[\"GREATER_THAN\"] = \"GREATER_THAN\";\n  FilterOperator[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n  FilterOperator[\"LESS_THAN\"] = \"LESS_THAN\";\n  FilterOperator[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n  FilterOperator[\"LIKE\"] = \"LIKE\";\n  FilterOperator[\"NOT_LIKE\"] = \"NOT_LIKE\";\n  FilterOperator[\"IN\"] = \"IN\";\n  FilterOperator[\"NOT_IN\"] = \"NOT_IN\";\n  FilterOperator[\"IS_NULL\"] = \"IS_NULL\";\n  FilterOperator[\"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n  FilterOperator[\"BETWEEN\"] = \"BETWEEN\";\n  FilterOperator[\"STARTS_WITH\"] = \"STARTS_WITH\";\n  FilterOperator[\"ENDS_WITH\"] = \"ENDS_WITH\";\n  FilterOperator[\"CONTAINS\"] = \"CONTAINS\";\n})(FilterOperator || (FilterOperator = {}));\n// Document Status enum - shared between models\nexport var DocumentStatus;\n(function (DocumentStatus) {\n  DocumentStatus[\"PENDING\"] = \"PENDING\";\n  DocumentStatus[\"APPROVED\"] = \"APPROVED\";\n  DocumentStatus[\"REJECTED\"] = \"REJECTED\";\n  DocumentStatus[\"EXPIRED\"] = \"EXPIRED\";\n})(DocumentStatus || (DocumentStatus = {}));\nexport var NotificationType;\n(function (NotificationType) {\n  NotificationType[\"POLICY_REMINDER\"] = \"POLICY_REMINDER\";\n  NotificationType[\"POLICY_RENEWAL\"] = \"POLICY_RENEWAL\";\n  NotificationType[\"POLICY_EXPIRY\"] = \"POLICY_EXPIRY\";\n  NotificationType[\"CLAIM_UPDATE\"] = \"CLAIM_UPDATE\";\n  NotificationType[\"CLAIM_APPROVED\"] = \"CLAIM_APPROVED\";\n  NotificationType[\"CLAIM_REJECTED\"] = \"CLAIM_REJECTED\";\n  NotificationType[\"PAYMENT_DUE\"] = \"PAYMENT_DUE\";\n  NotificationType[\"PAYMENT_RECEIVED\"] = \"PAYMENT_RECEIVED\";\n  NotificationType[\"SYSTEM_MAINTENANCE\"] = \"SYSTEM_MAINTENANCE\";\n  NotificationType[\"PROMOTIONAL\"] = \"PROMOTIONAL\";\n  NotificationType[\"ACCOUNT_UPDATE\"] = \"ACCOUNT_UPDATE\";\n})(NotificationType || (NotificationType = {}));\nexport var NotificationPriority;\n(function (NotificationPriority) {\n  NotificationPriority[\"LOW\"] = \"LOW\";\n  NotificationPriority[\"MEDIUM\"] = \"MEDIUM\";\n  NotificationPriority[\"HIGH\"] = \"HIGH\";\n  NotificationPriority[\"URGENT\"] = \"URGENT\";\n})(NotificationPriority || (NotificationPriority = {}));\nexport var ThaiRegion;\n(function (ThaiRegion) {\n  ThaiRegion[\"NORTHERN\"] = \"NORTHERN\";\n  ThaiRegion[\"NORTHEASTERN\"] = \"NORTHEASTERN\";\n  ThaiRegion[\"CENTRAL\"] = \"CENTRAL\";\n  ThaiRegion[\"EASTERN\"] = \"EASTERN\";\n  ThaiRegion[\"WESTERN\"] = \"WESTERN\";\n  ThaiRegion[\"SOUTHERN\"] = \"SOUTHERN\";\n})(ThaiRegion || (ThaiRegion = {}));\nexport var AuditAction;\n(function (AuditAction) {\n  AuditAction[\"CREATE\"] = \"CREATE\";\n  AuditAction[\"UPDATE\"] = \"UPDATE\";\n  AuditAction[\"DELETE\"] = \"DELETE\";\n  AuditAction[\"LOGIN\"] = \"LOGIN\";\n  AuditAction[\"LOGOUT\"] = \"LOGOUT\";\n  AuditAction[\"VIEW\"] = \"VIEW\";\n  AuditAction[\"EXPORT\"] = \"EXPORT\";\n  AuditAction[\"APPROVE\"] = \"APPROVE\";\n  AuditAction[\"REJECT\"] = \"REJECT\";\n})(AuditAction || (AuditAction = {}));\nexport var ConfigDataType;\n(function (ConfigDataType) {\n  ConfigDataType[\"STRING\"] = \"STRING\";\n  ConfigDataType[\"INTEGER\"] = \"INTEGER\";\n  ConfigDataType[\"DECIMAL\"] = \"DECIMAL\";\n  ConfigDataType[\"BOOLEAN\"] = \"BOOLEAN\";\n  ConfigDataType[\"DATE\"] = \"DATE\";\n  ConfigDataType[\"JSON\"] = \"JSON\";\n})(ConfigDataType || (ConfigDataType = {}));\nexport var ValidationType;\n(function (ValidationType) {\n  ValidationType[\"REQUIRED\"] = \"REQUIRED\";\n  ValidationType[\"MIN_LENGTH\"] = \"MIN_LENGTH\";\n  ValidationType[\"MAX_LENGTH\"] = \"MAX_LENGTH\";\n  ValidationType[\"MIN_VALUE\"] = \"MIN_VALUE\";\n  ValidationType[\"MAX_VALUE\"] = \"MAX_VALUE\";\n  ValidationType[\"PATTERN\"] = \"PATTERN\";\n  ValidationType[\"EMAIL\"] = \"EMAIL\";\n  ValidationType[\"URL\"] = \"URL\";\n})(ValidationType || (ValidationType = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[\"VALIDATION_ERROR\"] = \"VALIDATION_ERROR\";\n  ErrorCode[\"UNAUTHORIZED\"] = \"UNAUTHORIZED\";\n  ErrorCode[\"FORBIDDEN\"] = \"FORBIDDEN\";\n  ErrorCode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n  ErrorCode[\"CONFLICT\"] = \"CONFLICT\";\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  ErrorCode[\"TIMEOUT_ERROR\"] = \"TIMEOUT_ERROR\";\n  ErrorCode[\"BUSINESS_RULE_VIOLATION\"] = \"BUSINESS_RULE_VIOLATION\";\n})(ErrorCode || (ErrorCode = {}));","map":{"version":3,"names":["FilterOperator","DocumentStatus","NotificationType","NotificationPriority","ThaiRegion","AuditAction","ConfigDataType","ValidationType","ErrorCode"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/core/models/common.model.ts"],"sourcesContent":["// Common API Response interfaces\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message: string;\n  messageThai?: string;\n  errors?: ValidationError[];\n  timestamp: Date;\n  path: string;\n  status: number;\n}\n\nexport interface PaginatedResponse<T = any> {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  size: number;\n  number: number;\n  first: boolean;\n  last: boolean;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  messageThai?: string;\n  code: string;\n  rejectedValue?: any;\n}\n\n// Pagination and Sorting\nexport interface PageRequest {\n  page: number;\n  size: number;\n  sort?: SortRequest[];\n}\n\nexport interface SortRequest {\n  property: string;\n  direction: 'ASC' | 'DESC';\n}\n\n// Filter interfaces\nexport interface FilterCriteria {\n  field: string;\n  operator: FilterOperator;\n  value: any;\n  values?: any[]; // For IN, NOT_IN operators\n}\n\nexport enum FilterOperator {\n  EQUALS = 'EQUALS',\n  NOT_EQUALS = 'NOT_EQUALS',\n  GREATER_THAN = 'GREATER_THAN',\n  GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL',\n  LESS_THAN = 'LESS_THAN',\n  LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL',\n  LIKE = 'LIKE',\n  NOT_LIKE = 'NOT_LIKE',\n  IN = 'IN',\n  NOT_IN = 'NOT_IN',\n  IS_NULL = 'IS_NULL',\n  IS_NOT_NULL = 'IS_NOT_NULL',\n  BETWEEN = 'BETWEEN',\n  STARTS_WITH = 'STARTS_WITH',\n  ENDS_WITH = 'ENDS_WITH',\n  CONTAINS = 'CONTAINS'\n}\n\n// Search and filter request\nexport interface SearchRequest {\n  query?: string;\n  filters?: FilterCriteria[];\n  pagination: PageRequest;\n}\n\n// File upload interfaces\nexport interface FileUploadResponse {\n  id: string;\n  fileName: string;\n  originalFileName: string;\n  mimeType: string;\n  fileSize: number;\n  fileUrl: string;\n  thumbnailUrl?: string;\n  uploadedAt: Date;\n  uploadedBy: string;\n}\n\nexport interface FileUploadRequest {\n  file: File;\n  category?: string;\n  description?: string;\n  isPublic?: boolean;\n}\n\n// Document Status enum - shared between models\nexport enum DocumentStatus {\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  EXPIRED = 'EXPIRED'\n}\n\n// Notification interfaces\nexport interface Notification {\n  id: string;\n  userId: string;\n  type: NotificationType;\n  title: string;\n  titleThai?: string;\n  message: string;\n  messageThai?: string;\n  isRead: boolean;\n  priority: NotificationPriority;\n  relatedEntityId?: string;\n  relatedEntityType?: string;\n  actionUrl?: string;\n  createdAt: Date;\n  readAt?: Date;\n  expiresAt?: Date;\n}\n\nexport enum NotificationType {\n  POLICY_REMINDER = 'POLICY_REMINDER',\n  POLICY_RENEWAL = 'POLICY_RENEWAL',\n  POLICY_EXPIRY = 'POLICY_EXPIRY',\n  CLAIM_UPDATE = 'CLAIM_UPDATE',\n  CLAIM_APPROVED = 'CLAIM_APPROVED',\n  CLAIM_REJECTED = 'CLAIM_REJECTED',\n  PAYMENT_DUE = 'PAYMENT_DUE',\n  PAYMENT_RECEIVED = 'PAYMENT_RECEIVED',\n  SYSTEM_MAINTENANCE = 'SYSTEM_MAINTENANCE',\n  PROMOTIONAL = 'PROMOTIONAL',\n  ACCOUNT_UPDATE = 'ACCOUNT_UPDATE'\n}\n\nexport enum NotificationPriority {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  URGENT = 'URGENT'\n}\n\n// Geographic data for Thailand\nexport interface Province {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  region: ThaiRegion;\n  districts: District[];\n}\n\nexport interface District {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  provinceId: string;\n  subdistricts: Subdistrict[];\n}\n\nexport interface Subdistrict {\n  id: string;\n  name: string;\n  nameEnglish: string;\n  code: string;\n  districtId: string;\n  postalCodes: string[];\n}\n\nexport enum ThaiRegion {\n  NORTHERN = 'NORTHERN',\n  NORTHEASTERN = 'NORTHEASTERN', \n  CENTRAL = 'CENTRAL',\n  EASTERN = 'EASTERN',\n  WESTERN = 'WESTERN',\n  SOUTHERN = 'SOUTHERN'\n}\n\n// Audit trail\nexport interface AuditLog {\n  id: string;\n  entityType: string;\n  entityId: string;\n  action: AuditAction;\n  userId: string;\n  username: string;\n  userRole: string;\n  oldValue?: any;\n  newValue?: any;\n  timestamp: Date;\n  ipAddress: string;\n  userAgent: string;\n  sessionId: string;\n}\n\nexport enum AuditAction {\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  VIEW = 'VIEW',\n  EXPORT = 'EXPORT',\n  APPROVE = 'APPROVE',\n  REJECT = 'REJECT'\n}\n\n// System configuration\nexport interface SystemConfig {\n  key: string;\n  value: string;\n  description?: string;\n  category: string;\n  isPublic: boolean;\n  isEditable: boolean;\n  dataType: ConfigDataType;\n  validationRules?: ValidationRule[];\n  updatedAt: Date;\n  updatedBy: string;\n}\n\nexport interface ValidationRule {\n  type: ValidationType;\n  value?: any;\n  message: string;\n}\n\nexport enum ConfigDataType {\n  STRING = 'STRING',\n  INTEGER = 'INTEGER',\n  DECIMAL = 'DECIMAL',\n  BOOLEAN = 'BOOLEAN',\n  DATE = 'DATE',\n  JSON = 'JSON'\n}\n\nexport enum ValidationType {\n  REQUIRED = 'REQUIRED',\n  MIN_LENGTH = 'MIN_LENGTH',\n  MAX_LENGTH = 'MAX_LENGTH',\n  MIN_VALUE = 'MIN_VALUE',\n  MAX_VALUE = 'MAX_VALUE',\n  PATTERN = 'PATTERN',\n  EMAIL = 'EMAIL',\n  URL = 'URL'\n}\n\n// Dashboard and analytics\nexport interface DashboardStats {\n  totalPolicies: number;\n  activePolicies: number;\n  expiringSoon: number; // Next 30 days\n  totalClaims: number;\n  pendingClaims: number;\n  settledClaims: number;\n  totalPremiumCollected: number;\n  totalClaimsPaid: number;\n  customerCount: number;\n  newCustomersThisMonth: number;\n}\n\nexport interface ChartData {\n  labels: string[];\n  datasets: ChartDataset[];\n}\n\nexport interface ChartDataset {\n  label: string;\n  data: number[];\n  backgroundColor?: string | string[];\n  borderColor?: string | string[];\n  borderWidth?: number;\n}\n\n// Thai specific utilities\nexport interface ThaiNationalIdInfo {\n  isValid: boolean;\n  province?: string;\n  district?: string;\n  birthYear?: number;\n  gender?: 'MALE' | 'FEMALE';\n}\n\nexport interface ThaiPhoneNumber {\n  number: string;\n  isValid: boolean;\n  operator?: string;\n  type: 'MOBILE' | 'LANDLINE';\n}\n\n// Error handling\nexport interface AppError {\n  code: string;\n  message: string;\n  messageThai?: string;\n  details?: any;\n  timestamp: Date;\n  path?: string;\n  method?: string;\n  statusCode?: number;\n}\n\nexport enum ErrorCode {\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  FORBIDDEN = 'FORBIDDEN',\n  NOT_FOUND = 'NOT_FOUND',\n  CONFLICT = 'CONFLICT',\n  SERVER_ERROR = 'SERVER_ERROR',\n  NETWORK_ERROR = 'NETWORK_ERROR',\n  TIMEOUT_ERROR = 'TIMEOUT_ERROR',\n  BUSINESS_RULE_VIOLATION = 'BUSINESS_RULE_VIOLATION'\n}\n\n// Application state\nexport interface LoadingState {\n  [key: string]: boolean;\n}\n\nexport interface ErrorState {\n  [key: string]: AppError | null;\n}\n\n// Language support\nexport interface TranslationKey {\n  en: string;\n  th: string;\n}\n\nexport interface LanguageOption {\n  code: 'th' | 'en';\n  name: string;\n  nativeName: string;\n  flag: string;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}