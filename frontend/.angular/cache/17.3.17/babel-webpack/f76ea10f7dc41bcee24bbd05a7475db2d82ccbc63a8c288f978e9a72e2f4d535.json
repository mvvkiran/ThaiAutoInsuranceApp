{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafeHtmlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(value) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n  static {\n    this.ɵfac = function SafeHtmlPipe_Factory(t) {\n      return new (t || SafeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"safeHtml\",\n      type: SafeHtmlPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"names":["SafeHtmlPipe","constructor","sanitizer","transform","value","bypassSecurityTrustHtml","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure"],"sources":["/Users/mvvkiran/Workspace/Angular/auto-insurance-app/frontend/src/app/shared/pipes/safe-html.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}"],"mappings":";;AAMA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAE9CC,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACF,SAAS,CAACG,uBAAuB,CAACD,KAAK,CAAC;EACtD;;;uBALWJ,YAAY,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;;YAAZT,YAAY;MAAAU,IAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}